{-
   Neptune Backend API

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Neptune Backend API API version: 2.8
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : NeptuneBackend.Lens
-}

{-# LANGUAGE KindSignatures  #-}
{-# LANGUAGE NamedFieldPuns  #-}
{-# LANGUAGE RankNTypes      #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module NeptuneBackend.ModelLens where

import qualified Data.Aeson           as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data            as P (Data, Typeable)
import qualified Data.Map             as Map
import qualified Data.Set             as Set
import qualified Data.Time            as TI

import           Data.Text            (Text)

import           Prelude              (Applicative, Bool (..), Char, Double,
                                       FilePath, Float, Functor, Int, Integer,
                                       Maybe (..), Monad, String, fmap, maybe,
                                       mempty, pure, undefined, ($), (.), (<$>),
                                       (<*>), (=<<))
import qualified Prelude              as P

import           NeptuneBackend.Core
import           NeptuneBackend.Model


-- * AchievementTypeDTO



-- * AchievementsDTO

-- | 'achievementsDTOEarned' Lens
achievementsDTOEarnedL :: Lens_' AchievementsDTO ([AchievementTypeDTO])
achievementsDTOEarnedL f AchievementsDTO{..} = (\achievementsDTOEarned -> AchievementsDTO { achievementsDTOEarned, ..} ) <$> f achievementsDTOEarned
{-# INLINE achievementsDTOEarnedL #-}



-- * ApiErrorTypeDTO



-- * AuthorizedUserDTO

-- | 'authorizedUserDTOUsername' Lens
authorizedUserDTOUsernameL :: Lens_' AuthorizedUserDTO (Text)
authorizedUserDTOUsernameL f AuthorizedUserDTO{..} = (\authorizedUserDTOUsername -> AuthorizedUserDTO { authorizedUserDTOUsername, ..} ) <$> f authorizedUserDTOUsername
{-# INLINE authorizedUserDTOUsernameL #-}



-- * AvatarSourceEnum



-- * BatchChannelValueErrorDTO

-- | 'batchChannelValueErrorDTOChannelId' Lens
batchChannelValueErrorDTOChannelIdL :: Lens_' BatchChannelValueErrorDTO (Text)
batchChannelValueErrorDTOChannelIdL f BatchChannelValueErrorDTO{..} = (\batchChannelValueErrorDTOChannelId -> BatchChannelValueErrorDTO { batchChannelValueErrorDTOChannelId, ..} ) <$> f batchChannelValueErrorDTOChannelId
{-# INLINE batchChannelValueErrorDTOChannelIdL #-}

-- | 'batchChannelValueErrorDTOX' Lens
batchChannelValueErrorDTOXL :: Lens_' BatchChannelValueErrorDTO (Double)
batchChannelValueErrorDTOXL f BatchChannelValueErrorDTO{..} = (\batchChannelValueErrorDTOX -> BatchChannelValueErrorDTO { batchChannelValueErrorDTOX, ..} ) <$> f batchChannelValueErrorDTOX
{-# INLINE batchChannelValueErrorDTOXL #-}

-- | 'batchChannelValueErrorDTOError' Lens
batchChannelValueErrorDTOErrorL :: Lens_' BatchChannelValueErrorDTO (Error)
batchChannelValueErrorDTOErrorL f BatchChannelValueErrorDTO{..} = (\batchChannelValueErrorDTOError -> BatchChannelValueErrorDTO { batchChannelValueErrorDTOError, ..} ) <$> f batchChannelValueErrorDTOError
{-# INLINE batchChannelValueErrorDTOErrorL #-}



-- * BatchExperimentUpdateResult

-- | 'batchExperimentUpdateResultExperimentId' Lens
batchExperimentUpdateResultExperimentIdL :: Lens_' BatchExperimentUpdateResult (Text)
batchExperimentUpdateResultExperimentIdL f BatchExperimentUpdateResult{..} = (\batchExperimentUpdateResultExperimentId -> BatchExperimentUpdateResult { batchExperimentUpdateResultExperimentId, ..} ) <$> f batchExperimentUpdateResultExperimentId
{-# INLINE batchExperimentUpdateResultExperimentIdL #-}

-- | 'batchExperimentUpdateResultError' Lens
batchExperimentUpdateResultErrorL :: Lens_' BatchExperimentUpdateResult (Maybe Error)
batchExperimentUpdateResultErrorL f BatchExperimentUpdateResult{..} = (\batchExperimentUpdateResultError -> BatchExperimentUpdateResult { batchExperimentUpdateResultError, ..} ) <$> f batchExperimentUpdateResultError
{-# INLINE batchExperimentUpdateResultErrorL #-}



-- * Channel

-- | 'channelId' Lens
channelIdL :: Lens_' Channel (Text)
channelIdL f Channel{..} = (\channelId -> Channel { channelId, ..} ) <$> f channelId
{-# INLINE channelIdL #-}

-- | 'channelName' Lens
channelNameL :: Lens_' Channel (Text)
channelNameL f Channel{..} = (\channelName -> Channel { channelName, ..} ) <$> f channelName
{-# INLINE channelNameL #-}

-- | 'channelChannelType' Lens
channelChannelTypeL :: Lens_' Channel (ChannelType)
channelChannelTypeL f Channel{..} = (\channelChannelType -> Channel { channelChannelType, ..} ) <$> f channelChannelType
{-# INLINE channelChannelTypeL #-}

-- | 'channelLastX' Lens
channelLastXL :: Lens_' Channel (Maybe Double)
channelLastXL f Channel{..} = (\channelLastX -> Channel { channelLastX, ..} ) <$> f channelLastX
{-# INLINE channelLastXL #-}



-- * ChannelDTO

-- | 'channelDTOId' Lens
channelDTOIdL :: Lens_' ChannelDTO (Text)
channelDTOIdL f ChannelDTO{..} = (\channelDTOId -> ChannelDTO { channelDTOId, ..} ) <$> f channelDTOId
{-# INLINE channelDTOIdL #-}

-- | 'channelDTOName' Lens
channelDTONameL :: Lens_' ChannelDTO (Text)
channelDTONameL f ChannelDTO{..} = (\channelDTOName -> ChannelDTO { channelDTOName, ..} ) <$> f channelDTOName
{-# INLINE channelDTONameL #-}

-- | 'channelDTOChannelType' Lens
channelDTOChannelTypeL :: Lens_' ChannelDTO (ChannelTypeEnum)
channelDTOChannelTypeL f ChannelDTO{..} = (\channelDTOChannelType -> ChannelDTO { channelDTOChannelType, ..} ) <$> f channelDTOChannelType
{-# INLINE channelDTOChannelTypeL #-}

-- | 'channelDTOLastX' Lens
channelDTOLastXL :: Lens_' ChannelDTO (Maybe Double)
channelDTOLastXL f ChannelDTO{..} = (\channelDTOLastX -> ChannelDTO { channelDTOLastX, ..} ) <$> f channelDTOLastX
{-# INLINE channelDTOLastXL #-}



-- * ChannelParams

-- | 'channelParamsName' Lens
channelParamsNameL :: Lens_' ChannelParams (Text)
channelParamsNameL f ChannelParams{..} = (\channelParamsName -> ChannelParams { channelParamsName, ..} ) <$> f channelParamsName
{-# INLINE channelParamsNameL #-}

-- | 'channelParamsChannelType' Lens
channelParamsChannelTypeL :: Lens_' ChannelParams (ChannelTypeEnum)
channelParamsChannelTypeL f ChannelParams{..} = (\channelParamsChannelType -> ChannelParams { channelParamsChannelType, ..} ) <$> f channelParamsChannelType
{-# INLINE channelParamsChannelTypeL #-}



-- * ChannelType



-- * ChannelTypeEnum



-- * ChannelWithValue

-- | 'channelWithValueX' Lens
channelWithValueXL :: Lens_' ChannelWithValue (Double)
channelWithValueXL f ChannelWithValue{..} = (\channelWithValueX -> ChannelWithValue { channelWithValueX, ..} ) <$> f channelWithValueX
{-# INLINE channelWithValueXL #-}

-- | 'channelWithValueY' Lens
channelWithValueYL :: Lens_' ChannelWithValue (Text)
channelWithValueYL f ChannelWithValue{..} = (\channelWithValueY -> ChannelWithValue { channelWithValueY, ..} ) <$> f channelWithValueY
{-# INLINE channelWithValueYL #-}

-- | 'channelWithValueChannelType' Lens
channelWithValueChannelTypeL :: Lens_' ChannelWithValue (ChannelType)
channelWithValueChannelTypeL f ChannelWithValue{..} = (\channelWithValueChannelType -> ChannelWithValue { channelWithValueChannelType, ..} ) <$> f channelWithValueChannelType
{-# INLINE channelWithValueChannelTypeL #-}

-- | 'channelWithValueChannelName' Lens
channelWithValueChannelNameL :: Lens_' ChannelWithValue (Text)
channelWithValueChannelNameL f ChannelWithValue{..} = (\channelWithValueChannelName -> ChannelWithValue { channelWithValueChannelName, ..} ) <$> f channelWithValueChannelName
{-# INLINE channelWithValueChannelNameL #-}

-- | 'channelWithValueChannelId' Lens
channelWithValueChannelIdL :: Lens_' ChannelWithValue (Text)
channelWithValueChannelIdL f ChannelWithValue{..} = (\channelWithValueChannelId -> ChannelWithValue { channelWithValueChannelId, ..} ) <$> f channelWithValueChannelId
{-# INLINE channelWithValueChannelIdL #-}



-- * ChannelWithValueDTO

-- | 'channelWithValueDTOX' Lens
channelWithValueDTOXL :: Lens_' ChannelWithValueDTO (Double)
channelWithValueDTOXL f ChannelWithValueDTO{..} = (\channelWithValueDTOX -> ChannelWithValueDTO { channelWithValueDTOX, ..} ) <$> f channelWithValueDTOX
{-# INLINE channelWithValueDTOXL #-}

-- | 'channelWithValueDTOY' Lens
channelWithValueDTOYL :: Lens_' ChannelWithValueDTO (Text)
channelWithValueDTOYL f ChannelWithValueDTO{..} = (\channelWithValueDTOY -> ChannelWithValueDTO { channelWithValueDTOY, ..} ) <$> f channelWithValueDTOY
{-# INLINE channelWithValueDTOYL #-}

-- | 'channelWithValueDTOChannelType' Lens
channelWithValueDTOChannelTypeL :: Lens_' ChannelWithValueDTO (ChannelTypeEnum)
channelWithValueDTOChannelTypeL f ChannelWithValueDTO{..} = (\channelWithValueDTOChannelType -> ChannelWithValueDTO { channelWithValueDTOChannelType, ..} ) <$> f channelWithValueDTOChannelType
{-# INLINE channelWithValueDTOChannelTypeL #-}

-- | 'channelWithValueDTOChannelName' Lens
channelWithValueDTOChannelNameL :: Lens_' ChannelWithValueDTO (Text)
channelWithValueDTOChannelNameL f ChannelWithValueDTO{..} = (\channelWithValueDTOChannelName -> ChannelWithValueDTO { channelWithValueDTOChannelName, ..} ) <$> f channelWithValueDTOChannelName
{-# INLINE channelWithValueDTOChannelNameL #-}

-- | 'channelWithValueDTOChannelId' Lens
channelWithValueDTOChannelIdL :: Lens_' ChannelWithValueDTO (Text)
channelWithValueDTOChannelIdL f ChannelWithValueDTO{..} = (\channelWithValueDTOChannelId -> ChannelWithValueDTO { channelWithValueDTOChannelId, ..} ) <$> f channelWithValueDTOChannelId
{-# INLINE channelWithValueDTOChannelIdL #-}



-- * Chart

-- | 'chartId' Lens
chartIdL :: Lens_' Chart (Text)
chartIdL f Chart{..} = (\chartId -> Chart { chartId, ..} ) <$> f chartId
{-# INLINE chartIdL #-}

-- | 'chartName' Lens
chartNameL :: Lens_' Chart (Text)
chartNameL f Chart{..} = (\chartName -> Chart { chartName, ..} ) <$> f chartName
{-# INLINE chartNameL #-}

-- | 'chartSeries' Lens
chartSeriesL :: Lens_' Chart ([Series])
chartSeriesL f Chart{..} = (\chartSeries -> Chart { chartSeries, ..} ) <$> f chartSeries
{-# INLINE chartSeriesL #-}



-- * ChartDefinition

-- | 'chartDefinitionName' Lens
chartDefinitionNameL :: Lens_' ChartDefinition (Text)
chartDefinitionNameL f ChartDefinition{..} = (\chartDefinitionName -> ChartDefinition { chartDefinitionName, ..} ) <$> f chartDefinitionName
{-# INLINE chartDefinitionNameL #-}

-- | 'chartDefinitionSeries' Lens
chartDefinitionSeriesL :: Lens_' ChartDefinition ([SeriesDefinition])
chartDefinitionSeriesL f ChartDefinition{..} = (\chartDefinitionSeries -> ChartDefinition { chartDefinitionSeries, ..} ) <$> f chartDefinitionSeries
{-# INLINE chartDefinitionSeriesL #-}



-- * ChartSet

-- | 'chartSetIsEditable' Lens
chartSetIsEditableL :: Lens_' ChartSet (Maybe Bool)
chartSetIsEditableL f ChartSet{..} = (\chartSetIsEditable -> ChartSet { chartSetIsEditable, ..} ) <$> f chartSetIsEditable
{-# INLINE chartSetIsEditableL #-}

-- | 'chartSetDefaultChartsEnabled' Lens
chartSetDefaultChartsEnabledL :: Lens_' ChartSet (Maybe Bool)
chartSetDefaultChartsEnabledL f ChartSet{..} = (\chartSetDefaultChartsEnabled -> ChartSet { chartSetDefaultChartsEnabled, ..} ) <$> f chartSetDefaultChartsEnabled
{-# INLINE chartSetDefaultChartsEnabledL #-}

-- | 'chartSetProjectId' Lens
chartSetProjectIdL :: Lens_' ChartSet (Text)
chartSetProjectIdL f ChartSet{..} = (\chartSetProjectId -> ChartSet { chartSetProjectId, ..} ) <$> f chartSetProjectId
{-# INLINE chartSetProjectIdL #-}

-- | 'chartSetId' Lens
chartSetIdL :: Lens_' ChartSet (Text)
chartSetIdL f ChartSet{..} = (\chartSetId -> ChartSet { chartSetId, ..} ) <$> f chartSetId
{-# INLINE chartSetIdL #-}

-- | 'chartSetName' Lens
chartSetNameL :: Lens_' ChartSet (Text)
chartSetNameL f ChartSet{..} = (\chartSetName -> ChartSet { chartSetName, ..} ) <$> f chartSetName
{-# INLINE chartSetNameL #-}

-- | 'chartSetCharts' Lens
chartSetChartsL :: Lens_' ChartSet (Maybe [Chart])
chartSetChartsL f ChartSet{..} = (\chartSetCharts -> ChartSet { chartSetCharts, ..} ) <$> f chartSetCharts
{-# INLINE chartSetChartsL #-}



-- * ChartSetParams

-- | 'chartSetParamsName' Lens
chartSetParamsNameL :: Lens_' ChartSetParams (Text)
chartSetParamsNameL f ChartSetParams{..} = (\chartSetParamsName -> ChartSetParams { chartSetParamsName, ..} ) <$> f chartSetParamsName
{-# INLINE chartSetParamsNameL #-}

-- | 'chartSetParamsCharts' Lens
chartSetParamsChartsL :: Lens_' ChartSetParams (Maybe [ChartDefinition])
chartSetParamsChartsL f ChartSetParams{..} = (\chartSetParamsCharts -> ChartSetParams { chartSetParamsCharts, ..} ) <$> f chartSetParamsCharts
{-# INLINE chartSetParamsChartsL #-}

-- | 'chartSetParamsDefaultChartsEnabled' Lens
chartSetParamsDefaultChartsEnabledL :: Lens_' ChartSetParams (Maybe Bool)
chartSetParamsDefaultChartsEnabledL f ChartSetParams{..} = (\chartSetParamsDefaultChartsEnabled -> ChartSetParams { chartSetParamsDefaultChartsEnabled, ..} ) <$> f chartSetParamsDefaultChartsEnabled
{-# INLINE chartSetParamsDefaultChartsEnabledL #-}

-- | 'chartSetParamsIsEditable' Lens
chartSetParamsIsEditableL :: Lens_' ChartSetParams (Maybe Bool)
chartSetParamsIsEditableL f ChartSetParams{..} = (\chartSetParamsIsEditable -> ChartSetParams { chartSetParamsIsEditable, ..} ) <$> f chartSetParamsIsEditable
{-# INLINE chartSetParamsIsEditableL #-}



-- * Charts

-- | 'chartsManualCharts' Lens
chartsManualChartsL :: Lens_' Charts ([Chart])
chartsManualChartsL f Charts{..} = (\chartsManualCharts -> Charts { chartsManualCharts, ..} ) <$> f chartsManualCharts
{-# INLINE chartsManualChartsL #-}

-- | 'chartsDefaultCharts' Lens
chartsDefaultChartsL :: Lens_' Charts ([Chart])
chartsDefaultChartsL f Charts{..} = (\chartsDefaultCharts -> Charts { chartsDefaultCharts, ..} ) <$> f chartsDefaultCharts
{-# INLINE chartsDefaultChartsL #-}



-- * ClientConfig

-- | 'clientConfigApiUrl' Lens
clientConfigApiUrlL :: Lens_' ClientConfig (Text)
clientConfigApiUrlL f ClientConfig{..} = (\clientConfigApiUrl -> ClientConfig { clientConfigApiUrl, ..} ) <$> f clientConfigApiUrl
{-# INLINE clientConfigApiUrlL #-}

-- | 'clientConfigApplicationUrl' Lens
clientConfigApplicationUrlL :: Lens_' ClientConfig (Text)
clientConfigApplicationUrlL f ClientConfig{..} = (\clientConfigApplicationUrl -> ClientConfig { clientConfigApplicationUrl, ..} ) <$> f clientConfigApplicationUrl
{-# INLINE clientConfigApplicationUrlL #-}

-- | 'clientConfigPyLibVersions' Lens
clientConfigPyLibVersionsL :: Lens_' ClientConfig (ClientVersionsConfigDTO)
clientConfigPyLibVersionsL f ClientConfig{..} = (\clientConfigPyLibVersions -> ClientConfig { clientConfigPyLibVersions, ..} ) <$> f clientConfigPyLibVersions
{-# INLINE clientConfigPyLibVersionsL #-}



-- * ClientVersionsConfigDTO

-- | 'clientVersionsConfigDTOMinRecommendedVersion' Lens
clientVersionsConfigDTOMinRecommendedVersionL :: Lens_' ClientVersionsConfigDTO (Maybe Text)
clientVersionsConfigDTOMinRecommendedVersionL f ClientVersionsConfigDTO{..} = (\clientVersionsConfigDTOMinRecommendedVersion -> ClientVersionsConfigDTO { clientVersionsConfigDTOMinRecommendedVersion, ..} ) <$> f clientVersionsConfigDTOMinRecommendedVersion
{-# INLINE clientVersionsConfigDTOMinRecommendedVersionL #-}

-- | 'clientVersionsConfigDTOMinCompatibleVersion' Lens
clientVersionsConfigDTOMinCompatibleVersionL :: Lens_' ClientVersionsConfigDTO (Maybe Text)
clientVersionsConfigDTOMinCompatibleVersionL f ClientVersionsConfigDTO{..} = (\clientVersionsConfigDTOMinCompatibleVersion -> ClientVersionsConfigDTO { clientVersionsConfigDTOMinCompatibleVersion, ..} ) <$> f clientVersionsConfigDTOMinCompatibleVersion
{-# INLINE clientVersionsConfigDTOMinCompatibleVersionL #-}

-- | 'clientVersionsConfigDTOMaxCompatibleVersion' Lens
clientVersionsConfigDTOMaxCompatibleVersionL :: Lens_' ClientVersionsConfigDTO (Maybe Text)
clientVersionsConfigDTOMaxCompatibleVersionL f ClientVersionsConfigDTO{..} = (\clientVersionsConfigDTOMaxCompatibleVersion -> ClientVersionsConfigDTO { clientVersionsConfigDTOMaxCompatibleVersion, ..} ) <$> f clientVersionsConfigDTOMaxCompatibleVersion
{-# INLINE clientVersionsConfigDTOMaxCompatibleVersionL #-}



-- * CompletedExperimentParams

-- | 'completedExperimentParamsState' Lens
completedExperimentParamsStateL :: Lens_' CompletedExperimentParams (ExperimentState)
completedExperimentParamsStateL f CompletedExperimentParams{..} = (\completedExperimentParamsState -> CompletedExperimentParams { completedExperimentParamsState, ..} ) <$> f completedExperimentParamsState
{-# INLINE completedExperimentParamsStateL #-}

-- | 'completedExperimentParamsTraceback' Lens
completedExperimentParamsTracebackL :: Lens_' CompletedExperimentParams (Text)
completedExperimentParamsTracebackL f CompletedExperimentParams{..} = (\completedExperimentParamsTraceback -> CompletedExperimentParams { completedExperimentParamsTraceback, ..} ) <$> f completedExperimentParamsTraceback
{-# INLINE completedExperimentParamsTracebackL #-}



-- * ComponentStatus

-- | 'componentStatusName' Lens
componentStatusNameL :: Lens_' ComponentStatus (Text)
componentStatusNameL f ComponentStatus{..} = (\componentStatusName -> ComponentStatus { componentStatusName, ..} ) <$> f componentStatusName
{-# INLINE componentStatusNameL #-}

-- | 'componentStatusStatus' Lens
componentStatusStatusL :: Lens_' ComponentStatus (Text)
componentStatusStatusL f ComponentStatus{..} = (\componentStatusStatus -> ComponentStatus { componentStatusStatus, ..} ) <$> f componentStatusStatus
{-# INLINE componentStatusStatusL #-}



-- * ComponentVersion

-- | 'componentVersionName' Lens
componentVersionNameL :: Lens_' ComponentVersion (NameEnum)
componentVersionNameL f ComponentVersion{..} = (\componentVersionName -> ComponentVersion { componentVersionName, ..} ) <$> f componentVersionName
{-# INLINE componentVersionNameL #-}

-- | 'componentVersionVersion' Lens
componentVersionVersionL :: Lens_' ComponentVersion (Text)
componentVersionVersionL f ComponentVersion{..} = (\componentVersionVersion -> ComponentVersion { componentVersionVersion, ..} ) <$> f componentVersionVersion
{-# INLINE componentVersionVersionL #-}



-- * ConfigInfo

-- | 'configInfoMaxFormContentSize' Lens
configInfoMaxFormContentSizeL :: Lens_' ConfigInfo (Int)
configInfoMaxFormContentSizeL f ConfigInfo{..} = (\configInfoMaxFormContentSize -> ConfigInfo { configInfoMaxFormContentSize, ..} ) <$> f configInfoMaxFormContentSize
{-# INLINE configInfoMaxFormContentSizeL #-}



-- * CreateSessionParamsDTO

-- | 'createSessionParamsDTOSuccessUrl' Lens
createSessionParamsDTOSuccessUrlL :: Lens_' CreateSessionParamsDTO (Text)
createSessionParamsDTOSuccessUrlL f CreateSessionParamsDTO{..} = (\createSessionParamsDTOSuccessUrl -> CreateSessionParamsDTO { createSessionParamsDTOSuccessUrl, ..} ) <$> f createSessionParamsDTOSuccessUrl
{-# INLINE createSessionParamsDTOSuccessUrlL #-}

-- | 'createSessionParamsDTOFailureUrl' Lens
createSessionParamsDTOFailureUrlL :: Lens_' CreateSessionParamsDTO (Text)
createSessionParamsDTOFailureUrlL f CreateSessionParamsDTO{..} = (\createSessionParamsDTOFailureUrl -> CreateSessionParamsDTO { createSessionParamsDTOFailureUrl, ..} ) <$> f createSessionParamsDTOFailureUrl
{-# INLINE createSessionParamsDTOFailureUrlL #-}



-- * CustomerDTO

-- | 'customerDTONumberOfUsers' Lens
customerDTONumberOfUsersL :: Lens_' CustomerDTO (Maybe Integer)
customerDTONumberOfUsersL f CustomerDTO{..} = (\customerDTONumberOfUsers -> CustomerDTO { customerDTONumberOfUsers, ..} ) <$> f customerDTONumberOfUsers
{-# INLINE customerDTONumberOfUsersL #-}

-- | 'customerDTOUserPriceInCents' Lens
customerDTOUserPriceInCentsL :: Lens_' CustomerDTO (Integer)
customerDTOUserPriceInCentsL f CustomerDTO{..} = (\customerDTOUserPriceInCents -> CustomerDTO { customerDTOUserPriceInCents, ..} ) <$> f customerDTOUserPriceInCents
{-# INLINE customerDTOUserPriceInCentsL #-}

-- | 'customerDTOPricingPlan' Lens
customerDTOPricingPlanL :: Lens_' CustomerDTO (PricingPlanDTO)
customerDTOPricingPlanL f CustomerDTO{..} = (\customerDTOPricingPlan -> CustomerDTO { customerDTOPricingPlan, ..} ) <$> f customerDTOPricingPlan
{-# INLINE customerDTOPricingPlanL #-}

-- | 'customerDTODiscount' Lens
customerDTODiscountL :: Lens_' CustomerDTO (Maybe DiscountDTO)
customerDTODiscountL f CustomerDTO{..} = (\customerDTODiscount -> CustomerDTO { customerDTODiscount, ..} ) <$> f customerDTODiscount
{-# INLINE customerDTODiscountL #-}



-- * DiscountCodeDTO

-- | 'discountCodeDTOCode' Lens
discountCodeDTOCodeL :: Lens_' DiscountCodeDTO (Text)
discountCodeDTOCodeL f DiscountCodeDTO{..} = (\discountCodeDTOCode -> DiscountCodeDTO { discountCodeDTOCode, ..} ) <$> f discountCodeDTOCode
{-# INLINE discountCodeDTOCodeL #-}



-- * DiscountDTO

-- | 'discountDTOAmountOffPercentage' Lens
discountDTOAmountOffPercentageL :: Lens_' DiscountDTO (Maybe Integer)
discountDTOAmountOffPercentageL f DiscountDTO{..} = (\discountDTOAmountOffPercentage -> DiscountDTO { discountDTOAmountOffPercentage, ..} ) <$> f discountDTOAmountOffPercentage
{-# INLINE discountDTOAmountOffPercentageL #-}

-- | 'discountDTOAmountOffInCents' Lens
discountDTOAmountOffInCentsL :: Lens_' DiscountDTO (Maybe Integer)
discountDTOAmountOffInCentsL f DiscountDTO{..} = (\discountDTOAmountOffInCents -> DiscountDTO { discountDTOAmountOffInCents, ..} ) <$> f discountDTOAmountOffInCents
{-# INLINE discountDTOAmountOffInCentsL #-}

-- | 'discountDTOEnd' Lens
discountDTOEndL :: Lens_' DiscountDTO (Maybe DateTime)
discountDTOEndL f DiscountDTO{..} = (\discountDTOEnd -> DiscountDTO { discountDTOEnd, ..} ) <$> f discountDTOEnd
{-# INLINE discountDTOEndL #-}



-- * DownloadPrepareRequestDTO

-- | 'downloadPrepareRequestDTOId' Lens
downloadPrepareRequestDTOIdL :: Lens_' DownloadPrepareRequestDTO (Text)
downloadPrepareRequestDTOIdL f DownloadPrepareRequestDTO{..} = (\downloadPrepareRequestDTOId -> DownloadPrepareRequestDTO { downloadPrepareRequestDTOId, ..} ) <$> f downloadPrepareRequestDTOId
{-# INLINE downloadPrepareRequestDTOIdL #-}

-- | 'downloadPrepareRequestDTODownloadUrl' Lens
downloadPrepareRequestDTODownloadUrlL :: Lens_' DownloadPrepareRequestDTO (Maybe Text)
downloadPrepareRequestDTODownloadUrlL f DownloadPrepareRequestDTO{..} = (\downloadPrepareRequestDTODownloadUrl -> DownloadPrepareRequestDTO { downloadPrepareRequestDTODownloadUrl, ..} ) <$> f downloadPrepareRequestDTODownloadUrl
{-# INLINE downloadPrepareRequestDTODownloadUrlL #-}



-- * EditExperimentParams

-- | 'editExperimentParamsName' Lens
editExperimentParamsNameL :: Lens_' EditExperimentParams (Maybe Text)
editExperimentParamsNameL f EditExperimentParams{..} = (\editExperimentParamsName -> EditExperimentParams { editExperimentParamsName, ..} ) <$> f editExperimentParamsName
{-# INLINE editExperimentParamsNameL #-}

-- | 'editExperimentParamsDescription' Lens
editExperimentParamsDescriptionL :: Lens_' EditExperimentParams (Maybe Text)
editExperimentParamsDescriptionL f EditExperimentParams{..} = (\editExperimentParamsDescription -> EditExperimentParams { editExperimentParamsDescription, ..} ) <$> f editExperimentParamsDescription
{-# INLINE editExperimentParamsDescriptionL #-}

-- | 'editExperimentParamsTags' Lens
editExperimentParamsTagsL :: Lens_' EditExperimentParams (Maybe [Text])
editExperimentParamsTagsL f EditExperimentParams{..} = (\editExperimentParamsTags -> EditExperimentParams { editExperimentParamsTags, ..} ) <$> f editExperimentParamsTags
{-# INLINE editExperimentParamsTagsL #-}

-- | 'editExperimentParamsProperties' Lens
editExperimentParamsPropertiesL :: Lens_' EditExperimentParams (Maybe [KeyValueProperty])
editExperimentParamsPropertiesL f EditExperimentParams{..} = (\editExperimentParamsProperties -> EditExperimentParams { editExperimentParamsProperties, ..} ) <$> f editExperimentParamsProperties
{-# INLINE editExperimentParamsPropertiesL #-}



-- * Error

-- | 'errorCode' Lens
errorCodeL :: Lens_' Error (Int)
errorCodeL f Error{..} = (\errorCode -> Error { errorCode, ..} ) <$> f errorCode
{-# INLINE errorCodeL #-}

-- | 'errorMessage' Lens
errorMessageL :: Lens_' Error (Text)
errorMessageL f Error{..} = (\errorMessage -> Error { errorMessage, ..} ) <$> f errorMessage
{-# INLINE errorMessageL #-}

-- | 'errorType' Lens
errorTypeL :: Lens_' Error (Maybe ApiErrorTypeDTO)
errorTypeL f Error{..} = (\errorType -> Error { errorType, ..} ) <$> f errorType
{-# INLINE errorTypeL #-}



-- * Experiment

-- | 'experimentChannels' Lens
experimentChannelsL :: Lens_' Experiment (Maybe [Channel])
experimentChannelsL f Experiment{..} = (\experimentChannels -> Experiment { experimentChannels, ..} ) <$> f experimentChannels
{-# INLINE experimentChannelsL #-}

-- | 'experimentState' Lens
experimentStateL :: Lens_' Experiment (Maybe ExperimentState)
experimentStateL f Experiment{..} = (\experimentState -> Experiment { experimentState, ..} ) <$> f experimentState
{-# INLINE experimentStateL #-}

-- | 'experimentTimeOfCompletion' Lens
experimentTimeOfCompletionL :: Lens_' Experiment (Maybe DateTime)
experimentTimeOfCompletionL f Experiment{..} = (\experimentTimeOfCompletion -> Experiment { experimentTimeOfCompletion, ..} ) <$> f experimentTimeOfCompletion
{-# INLINE experimentTimeOfCompletionL #-}

-- | 'experimentCheckpointId' Lens
experimentCheckpointIdL :: Lens_' Experiment (Maybe Text)
experimentCheckpointIdL f Experiment{..} = (\experimentCheckpointId -> Experiment { experimentCheckpointId, ..} ) <$> f experimentCheckpointId
{-# INLINE experimentCheckpointIdL #-}

-- | 'experimentPaths' Lens
experimentPathsL :: Lens_' Experiment (Maybe ExperimentPaths)
experimentPathsL f Experiment{..} = (\experimentPaths -> Experiment { experimentPaths, ..} ) <$> f experimentPaths
{-# INLINE experimentPathsL #-}

-- | 'experimentResponding' Lens
experimentRespondingL :: Lens_' Experiment (Maybe Bool)
experimentRespondingL f Experiment{..} = (\experimentResponding -> Experiment { experimentResponding, ..} ) <$> f experimentResponding
{-# INLINE experimentRespondingL #-}

-- | 'experimentOrganizationId' Lens
experimentOrganizationIdL :: Lens_' Experiment (Maybe Text)
experimentOrganizationIdL f Experiment{..} = (\experimentOrganizationId -> Experiment { experimentOrganizationId, ..} ) <$> f experimentOrganizationId
{-# INLINE experimentOrganizationIdL #-}

-- | 'experimentStateTransitions' Lens
experimentStateTransitionsL :: Lens_' Experiment (Maybe StateTransitions)
experimentStateTransitionsL f Experiment{..} = (\experimentStateTransitions -> Experiment { experimentStateTransitions, ..} ) <$> f experimentStateTransitions
{-# INLINE experimentStateTransitionsL #-}

-- | 'experimentParameters' Lens
experimentParametersL :: Lens_' Experiment (Maybe [Parameter])
experimentParametersL f Experiment{..} = (\experimentParameters -> Experiment { experimentParameters, ..} ) <$> f experimentParameters
{-# INLINE experimentParametersL #-}

-- | 'experimentChannelsLastValues' Lens
experimentChannelsLastValuesL :: Lens_' Experiment (Maybe [ChannelWithValue])
experimentChannelsLastValuesL f Experiment{..} = (\experimentChannelsLastValues -> Experiment { experimentChannelsLastValues, ..} ) <$> f experimentChannelsLastValues
{-# INLINE experimentChannelsLastValuesL #-}

-- | 'experimentStorageSize' Lens
experimentStorageSizeL :: Lens_' Experiment (Maybe Integer)
experimentStorageSizeL f Experiment{..} = (\experimentStorageSize -> Experiment { experimentStorageSize, ..} ) <$> f experimentStorageSize
{-# INLINE experimentStorageSizeL #-}

-- | 'experimentName' Lens
experimentNameL :: Lens_' Experiment (Maybe Text)
experimentNameL f Experiment{..} = (\experimentName -> Experiment { experimentName, ..} ) <$> f experimentName
{-# INLINE experimentNameL #-}

-- | 'experimentNotebookId' Lens
experimentNotebookIdL :: Lens_' Experiment (Maybe Text)
experimentNotebookIdL f Experiment{..} = (\experimentNotebookId -> Experiment { experimentNotebookId, ..} ) <$> f experimentNotebookId
{-# INLINE experimentNotebookIdL #-}

-- | 'experimentProjectName' Lens
experimentProjectNameL :: Lens_' Experiment (Maybe Text)
experimentProjectNameL f Experiment{..} = (\experimentProjectName -> Experiment { experimentProjectName, ..} ) <$> f experimentProjectName
{-# INLINE experimentProjectNameL #-}

-- | 'experimentHostname' Lens
experimentHostnameL :: Lens_' Experiment (Maybe Text)
experimentHostnameL f Experiment{..} = (\experimentHostname -> Experiment { experimentHostname, ..} ) <$> f experimentHostname
{-# INLINE experimentHostnameL #-}

-- | 'experimentTrashed' Lens
experimentTrashedL :: Lens_' Experiment (Maybe Bool)
experimentTrashedL f Experiment{..} = (\experimentTrashed -> Experiment { experimentTrashed, ..} ) <$> f experimentTrashed
{-# INLINE experimentTrashedL #-}

-- | 'experimentDescription' Lens
experimentDescriptionL :: Lens_' Experiment (Maybe Text)
experimentDescriptionL f Experiment{..} = (\experimentDescription -> Experiment { experimentDescription, ..} ) <$> f experimentDescription
{-# INLINE experimentDescriptionL #-}

-- | 'experimentTags' Lens
experimentTagsL :: Lens_' Experiment (Maybe [Text])
experimentTagsL f Experiment{..} = (\experimentTags -> Experiment { experimentTags, ..} ) <$> f experimentTags
{-# INLINE experimentTagsL #-}

-- | 'experimentChannelsSize' Lens
experimentChannelsSizeL :: Lens_' Experiment (Maybe Integer)
experimentChannelsSizeL f Experiment{..} = (\experimentChannelsSize -> Experiment { experimentChannelsSize, ..} ) <$> f experimentChannelsSize
{-# INLINE experimentChannelsSizeL #-}

-- | 'experimentTimeOfCreation' Lens
experimentTimeOfCreationL :: Lens_' Experiment (Maybe DateTime)
experimentTimeOfCreationL f Experiment{..} = (\experimentTimeOfCreation -> Experiment { experimentTimeOfCreation, ..} ) <$> f experimentTimeOfCreation
{-# INLINE experimentTimeOfCreationL #-}

-- | 'experimentProjectId' Lens
experimentProjectIdL :: Lens_' Experiment (Maybe Text)
experimentProjectIdL f Experiment{..} = (\experimentProjectId -> Experiment { experimentProjectId, ..} ) <$> f experimentProjectId
{-# INLINE experimentProjectIdL #-}

-- | 'experimentOrganizationName' Lens
experimentOrganizationNameL :: Lens_' Experiment (Maybe Text)
experimentOrganizationNameL f Experiment{..} = (\experimentOrganizationName -> Experiment { experimentOrganizationName, ..} ) <$> f experimentOrganizationName
{-# INLINE experimentOrganizationNameL #-}

-- | 'experimentIsCodeAccessible' Lens
experimentIsCodeAccessibleL :: Lens_' Experiment (Maybe Bool)
experimentIsCodeAccessibleL f Experiment{..} = (\experimentIsCodeAccessible -> Experiment { experimentIsCodeAccessible, ..} ) <$> f experimentIsCodeAccessible
{-# INLINE experimentIsCodeAccessibleL #-}

-- | 'experimentTraceback' Lens
experimentTracebackL :: Lens_' Experiment (Maybe Text)
experimentTracebackL f Experiment{..} = (\experimentTraceback -> Experiment { experimentTraceback, ..} ) <$> f experimentTraceback
{-# INLINE experimentTracebackL #-}

-- | 'experimentEntrypoint' Lens
experimentEntrypointL :: Lens_' Experiment (Maybe Text)
experimentEntrypointL f Experiment{..} = (\experimentEntrypoint -> Experiment { experimentEntrypoint, ..} ) <$> f experimentEntrypoint
{-# INLINE experimentEntrypointL #-}

-- | 'experimentRunningTime' Lens
experimentRunningTimeL :: Lens_' Experiment (Maybe Integer)
experimentRunningTimeL f Experiment{..} = (\experimentRunningTime -> Experiment { experimentRunningTime, ..} ) <$> f experimentRunningTime
{-# INLINE experimentRunningTimeL #-}

-- | 'experimentId' Lens
experimentIdL :: Lens_' Experiment (Text)
experimentIdL f Experiment{..} = (\experimentId -> Experiment { experimentId, ..} ) <$> f experimentId
{-# INLINE experimentIdL #-}

-- | 'experimentInputs' Lens
experimentInputsL :: Lens_' Experiment (Maybe [InputMetadata])
experimentInputsL f Experiment{..} = (\experimentInputs -> Experiment { experimentInputs, ..} ) <$> f experimentInputs
{-# INLINE experimentInputsL #-}

-- | 'experimentProperties' Lens
experimentPropertiesL :: Lens_' Experiment (Maybe [KeyValueProperty])
experimentPropertiesL f Experiment{..} = (\experimentProperties -> Experiment { experimentProperties, ..} ) <$> f experimentProperties
{-# INLINE experimentPropertiesL #-}

-- | 'experimentShortId' Lens
experimentShortIdL :: Lens_' Experiment (Text)
experimentShortIdL f Experiment{..} = (\experimentShortId -> Experiment { experimentShortId, ..} ) <$> f experimentShortId
{-# INLINE experimentShortIdL #-}

-- | 'experimentComponentsVersions' Lens
experimentComponentsVersionsL :: Lens_' Experiment (Maybe [ComponentVersion])
experimentComponentsVersionsL f Experiment{..} = (\experimentComponentsVersions -> Experiment { experimentComponentsVersions, ..} ) <$> f experimentComponentsVersions
{-# INLINE experimentComponentsVersionsL #-}

-- | 'experimentOwner' Lens
experimentOwnerL :: Lens_' Experiment (Maybe Text)
experimentOwnerL f Experiment{..} = (\experimentOwner -> Experiment { experimentOwner, ..} ) <$> f experimentOwner
{-# INLINE experimentOwnerL #-}



-- * ExperimentCreationParams

-- | 'experimentCreationParamsMonitored' Lens
experimentCreationParamsMonitoredL :: Lens_' ExperimentCreationParams (Maybe Bool)
experimentCreationParamsMonitoredL f ExperimentCreationParams{..} = (\experimentCreationParamsMonitored -> ExperimentCreationParams { experimentCreationParamsMonitored, ..} ) <$> f experimentCreationParamsMonitored
{-# INLINE experimentCreationParamsMonitoredL #-}

-- | 'experimentCreationParamsHostname' Lens
experimentCreationParamsHostnameL :: Lens_' ExperimentCreationParams (Maybe Text)
experimentCreationParamsHostnameL f ExperimentCreationParams{..} = (\experimentCreationParamsHostname -> ExperimentCreationParams { experimentCreationParamsHostname, ..} ) <$> f experimentCreationParamsHostname
{-# INLINE experimentCreationParamsHostnameL #-}

-- | 'experimentCreationParamsCheckpointId' Lens
experimentCreationParamsCheckpointIdL :: Lens_' ExperimentCreationParams (Maybe Text)
experimentCreationParamsCheckpointIdL f ExperimentCreationParams{..} = (\experimentCreationParamsCheckpointId -> ExperimentCreationParams { experimentCreationParamsCheckpointId, ..} ) <$> f experimentCreationParamsCheckpointId
{-# INLINE experimentCreationParamsCheckpointIdL #-}

-- | 'experimentCreationParamsProjectId' Lens
experimentCreationParamsProjectIdL :: Lens_' ExperimentCreationParams (Text)
experimentCreationParamsProjectIdL f ExperimentCreationParams{..} = (\experimentCreationParamsProjectId -> ExperimentCreationParams { experimentCreationParamsProjectId, ..} ) <$> f experimentCreationParamsProjectId
{-# INLINE experimentCreationParamsProjectIdL #-}

-- | 'experimentCreationParamsGitInfo' Lens
experimentCreationParamsGitInfoL :: Lens_' ExperimentCreationParams (Maybe GitInfoDTO)
experimentCreationParamsGitInfoL f ExperimentCreationParams{..} = (\experimentCreationParamsGitInfo -> ExperimentCreationParams { experimentCreationParamsGitInfo, ..} ) <$> f experimentCreationParamsGitInfo
{-# INLINE experimentCreationParamsGitInfoL #-}

-- | 'experimentCreationParamsProperties' Lens
experimentCreationParamsPropertiesL :: Lens_' ExperimentCreationParams ([KeyValueProperty])
experimentCreationParamsPropertiesL f ExperimentCreationParams{..} = (\experimentCreationParamsProperties -> ExperimentCreationParams { experimentCreationParamsProperties, ..} ) <$> f experimentCreationParamsProperties
{-# INLINE experimentCreationParamsPropertiesL #-}

-- | 'experimentCreationParamsConfigPath' Lens
experimentCreationParamsConfigPathL :: Lens_' ExperimentCreationParams (Maybe Text)
experimentCreationParamsConfigPathL f ExperimentCreationParams{..} = (\experimentCreationParamsConfigPath -> ExperimentCreationParams { experimentCreationParamsConfigPath, ..} ) <$> f experimentCreationParamsConfigPath
{-# INLINE experimentCreationParamsConfigPathL #-}

-- | 'experimentCreationParamsExecArgsTemplate' Lens
experimentCreationParamsExecArgsTemplateL :: Lens_' ExperimentCreationParams (Text)
experimentCreationParamsExecArgsTemplateL f ExperimentCreationParams{..} = (\experimentCreationParamsExecArgsTemplate -> ExperimentCreationParams { experimentCreationParamsExecArgsTemplate, ..} ) <$> f experimentCreationParamsExecArgsTemplate
{-# INLINE experimentCreationParamsExecArgsTemplateL #-}

-- | 'experimentCreationParamsParameters' Lens
experimentCreationParamsParametersL :: Lens_' ExperimentCreationParams ([Parameter])
experimentCreationParamsParametersL f ExperimentCreationParams{..} = (\experimentCreationParamsParameters -> ExperimentCreationParams { experimentCreationParamsParameters, ..} ) <$> f experimentCreationParamsParameters
{-# INLINE experimentCreationParamsParametersL #-}

-- | 'experimentCreationParamsEnqueueCommand' Lens
experimentCreationParamsEnqueueCommandL :: Lens_' ExperimentCreationParams (Text)
experimentCreationParamsEnqueueCommandL f ExperimentCreationParams{..} = (\experimentCreationParamsEnqueueCommand -> ExperimentCreationParams { experimentCreationParamsEnqueueCommand, ..} ) <$> f experimentCreationParamsEnqueueCommand
{-# INLINE experimentCreationParamsEnqueueCommandL #-}

-- | 'experimentCreationParamsName' Lens
experimentCreationParamsNameL :: Lens_' ExperimentCreationParams (Text)
experimentCreationParamsNameL f ExperimentCreationParams{..} = (\experimentCreationParamsName -> ExperimentCreationParams { experimentCreationParamsName, ..} ) <$> f experimentCreationParamsName
{-# INLINE experimentCreationParamsNameL #-}

-- | 'experimentCreationParamsNotebookId' Lens
experimentCreationParamsNotebookIdL :: Lens_' ExperimentCreationParams (Maybe Text)
experimentCreationParamsNotebookIdL f ExperimentCreationParams{..} = (\experimentCreationParamsNotebookId -> ExperimentCreationParams { experimentCreationParamsNotebookId, ..} ) <$> f experimentCreationParamsNotebookId
{-# INLINE experimentCreationParamsNotebookIdL #-}

-- | 'experimentCreationParamsDescription' Lens
experimentCreationParamsDescriptionL :: Lens_' ExperimentCreationParams (Maybe Text)
experimentCreationParamsDescriptionL f ExperimentCreationParams{..} = (\experimentCreationParamsDescription -> ExperimentCreationParams { experimentCreationParamsDescription, ..} ) <$> f experimentCreationParamsDescription
{-# INLINE experimentCreationParamsDescriptionL #-}

-- | 'experimentCreationParamsTags' Lens
experimentCreationParamsTagsL :: Lens_' ExperimentCreationParams ([Text])
experimentCreationParamsTagsL f ExperimentCreationParams{..} = (\experimentCreationParamsTags -> ExperimentCreationParams { experimentCreationParamsTags, ..} ) <$> f experimentCreationParamsTags
{-# INLINE experimentCreationParamsTagsL #-}

-- | 'experimentCreationParamsAbortable' Lens
experimentCreationParamsAbortableL :: Lens_' ExperimentCreationParams (Maybe Bool)
experimentCreationParamsAbortableL f ExperimentCreationParams{..} = (\experimentCreationParamsAbortable -> ExperimentCreationParams { experimentCreationParamsAbortable, ..} ) <$> f experimentCreationParamsAbortable
{-# INLINE experimentCreationParamsAbortableL #-}

-- | 'experimentCreationParamsEntrypoint' Lens
experimentCreationParamsEntrypointL :: Lens_' ExperimentCreationParams (Maybe Text)
experimentCreationParamsEntrypointL f ExperimentCreationParams{..} = (\experimentCreationParamsEntrypoint -> ExperimentCreationParams { experimentCreationParamsEntrypoint, ..} ) <$> f experimentCreationParamsEntrypoint
{-# INLINE experimentCreationParamsEntrypointL #-}



-- * ExperimentPaths

-- | 'experimentPathsOutput' Lens
experimentPathsOutputL :: Lens_' ExperimentPaths (Text)
experimentPathsOutputL f ExperimentPaths{..} = (\experimentPathsOutput -> ExperimentPaths { experimentPathsOutput, ..} ) <$> f experimentPathsOutput
{-# INLINE experimentPathsOutputL #-}

-- | 'experimentPathsSource' Lens
experimentPathsSourceL :: Lens_' ExperimentPaths (Text)
experimentPathsSourceL f ExperimentPaths{..} = (\experimentPathsSource -> ExperimentPaths { experimentPathsSource, ..} ) <$> f experimentPathsSource
{-# INLINE experimentPathsSourceL #-}



-- * ExperimentState



-- * ExperimentsAttributesNamesDTO

-- | 'experimentsAttributesNamesDTOTextParametersNames' Lens
experimentsAttributesNamesDTOTextParametersNamesL :: Lens_' ExperimentsAttributesNamesDTO ([Text])
experimentsAttributesNamesDTOTextParametersNamesL f ExperimentsAttributesNamesDTO{..} = (\experimentsAttributesNamesDTOTextParametersNames -> ExperimentsAttributesNamesDTO { experimentsAttributesNamesDTOTextParametersNames, ..} ) <$> f experimentsAttributesNamesDTOTextParametersNames
{-# INLINE experimentsAttributesNamesDTOTextParametersNamesL #-}

-- | 'experimentsAttributesNamesDTOPropertiesNames' Lens
experimentsAttributesNamesDTOPropertiesNamesL :: Lens_' ExperimentsAttributesNamesDTO ([Text])
experimentsAttributesNamesDTOPropertiesNamesL f ExperimentsAttributesNamesDTO{..} = (\experimentsAttributesNamesDTOPropertiesNames -> ExperimentsAttributesNamesDTO { experimentsAttributesNamesDTOPropertiesNames, ..} ) <$> f experimentsAttributesNamesDTOPropertiesNames
{-# INLINE experimentsAttributesNamesDTOPropertiesNamesL #-}

-- | 'experimentsAttributesNamesDTONumericChannelsNames' Lens
experimentsAttributesNamesDTONumericChannelsNamesL :: Lens_' ExperimentsAttributesNamesDTO ([Text])
experimentsAttributesNamesDTONumericChannelsNamesL f ExperimentsAttributesNamesDTO{..} = (\experimentsAttributesNamesDTONumericChannelsNames -> ExperimentsAttributesNamesDTO { experimentsAttributesNamesDTONumericChannelsNames, ..} ) <$> f experimentsAttributesNamesDTONumericChannelsNames
{-# INLINE experimentsAttributesNamesDTONumericChannelsNamesL #-}

-- | 'experimentsAttributesNamesDTONumericParametersNames' Lens
experimentsAttributesNamesDTONumericParametersNamesL :: Lens_' ExperimentsAttributesNamesDTO ([Text])
experimentsAttributesNamesDTONumericParametersNamesL f ExperimentsAttributesNamesDTO{..} = (\experimentsAttributesNamesDTONumericParametersNames -> ExperimentsAttributesNamesDTO { experimentsAttributesNamesDTONumericParametersNames, ..} ) <$> f experimentsAttributesNamesDTONumericParametersNames
{-# INLINE experimentsAttributesNamesDTONumericParametersNamesL #-}

-- | 'experimentsAttributesNamesDTOTextChannelsNames' Lens
experimentsAttributesNamesDTOTextChannelsNamesL :: Lens_' ExperimentsAttributesNamesDTO ([Text])
experimentsAttributesNamesDTOTextChannelsNamesL f ExperimentsAttributesNamesDTO{..} = (\experimentsAttributesNamesDTOTextChannelsNames -> ExperimentsAttributesNamesDTO { experimentsAttributesNamesDTOTextChannelsNames, ..} ) <$> f experimentsAttributesNamesDTOTextChannelsNames
{-# INLINE experimentsAttributesNamesDTOTextChannelsNamesL #-}



-- * File

-- | 'filePath' Lens
filePathL :: Lens_' File (Text)
filePathL f File{..} = (\filePath -> File { filePath, ..} ) <$> f filePath
{-# INLINE filePathL #-}



-- * GitCommitDTO

-- | 'gitCommitDTOAuthorEmail' Lens
gitCommitDTOAuthorEmailL :: Lens_' GitCommitDTO (Text)
gitCommitDTOAuthorEmailL f GitCommitDTO{..} = (\gitCommitDTOAuthorEmail -> GitCommitDTO { gitCommitDTOAuthorEmail, ..} ) <$> f gitCommitDTOAuthorEmail
{-# INLINE gitCommitDTOAuthorEmailL #-}

-- | 'gitCommitDTOCommitId' Lens
gitCommitDTOCommitIdL :: Lens_' GitCommitDTO (Text)
gitCommitDTOCommitIdL f GitCommitDTO{..} = (\gitCommitDTOCommitId -> GitCommitDTO { gitCommitDTOCommitId, ..} ) <$> f gitCommitDTOCommitId
{-# INLINE gitCommitDTOCommitIdL #-}

-- | 'gitCommitDTOMessage' Lens
gitCommitDTOMessageL :: Lens_' GitCommitDTO (Text)
gitCommitDTOMessageL f GitCommitDTO{..} = (\gitCommitDTOMessage -> GitCommitDTO { gitCommitDTOMessage, ..} ) <$> f gitCommitDTOMessage
{-# INLINE gitCommitDTOMessageL #-}

-- | 'gitCommitDTOCommitDate' Lens
gitCommitDTOCommitDateL :: Lens_' GitCommitDTO (DateTime)
gitCommitDTOCommitDateL f GitCommitDTO{..} = (\gitCommitDTOCommitDate -> GitCommitDTO { gitCommitDTOCommitDate, ..} ) <$> f gitCommitDTOCommitDate
{-# INLINE gitCommitDTOCommitDateL #-}

-- | 'gitCommitDTOAuthorName' Lens
gitCommitDTOAuthorNameL :: Lens_' GitCommitDTO (Text)
gitCommitDTOAuthorNameL f GitCommitDTO{..} = (\gitCommitDTOAuthorName -> GitCommitDTO { gitCommitDTOAuthorName, ..} ) <$> f gitCommitDTOAuthorName
{-# INLINE gitCommitDTOAuthorNameL #-}



-- * GitInfoDTO

-- | 'gitInfoDTOCurrentBranch' Lens
gitInfoDTOCurrentBranchL :: Lens_' GitInfoDTO (Maybe Text)
gitInfoDTOCurrentBranchL f GitInfoDTO{..} = (\gitInfoDTOCurrentBranch -> GitInfoDTO { gitInfoDTOCurrentBranch, ..} ) <$> f gitInfoDTOCurrentBranch
{-# INLINE gitInfoDTOCurrentBranchL #-}

-- | 'gitInfoDTORemotes' Lens
gitInfoDTORemotesL :: Lens_' GitInfoDTO (Maybe [Text])
gitInfoDTORemotesL f GitInfoDTO{..} = (\gitInfoDTORemotes -> GitInfoDTO { gitInfoDTORemotes, ..} ) <$> f gitInfoDTORemotes
{-# INLINE gitInfoDTORemotesL #-}

-- | 'gitInfoDTOCommit' Lens
gitInfoDTOCommitL :: Lens_' GitInfoDTO (GitCommitDTO)
gitInfoDTOCommitL f GitInfoDTO{..} = (\gitInfoDTOCommit -> GitInfoDTO { gitInfoDTOCommit, ..} ) <$> f gitInfoDTOCommit
{-# INLINE gitInfoDTOCommitL #-}

-- | 'gitInfoDTORepositoryDirty' Lens
gitInfoDTORepositoryDirtyL :: Lens_' GitInfoDTO (Bool)
gitInfoDTORepositoryDirtyL f GitInfoDTO{..} = (\gitInfoDTORepositoryDirty -> GitInfoDTO { gitInfoDTORepositoryDirty, ..} ) <$> f gitInfoDTORepositoryDirty
{-# INLINE gitInfoDTORepositoryDirtyL #-}



-- * GlobalConfiguration

-- | 'globalConfigurationLicenseExpiration' Lens
globalConfigurationLicenseExpirationL :: Lens_' GlobalConfiguration (DateTime)
globalConfigurationLicenseExpirationL f GlobalConfiguration{..} = (\globalConfigurationLicenseExpiration -> GlobalConfiguration { globalConfigurationLicenseExpiration, ..} ) <$> f globalConfigurationLicenseExpiration
{-# INLINE globalConfigurationLicenseExpirationL #-}



-- * InputChannelValues

-- | 'inputChannelValuesChannelId' Lens
inputChannelValuesChannelIdL :: Lens_' InputChannelValues (Text)
inputChannelValuesChannelIdL f InputChannelValues{..} = (\inputChannelValuesChannelId -> InputChannelValues { inputChannelValuesChannelId, ..} ) <$> f inputChannelValuesChannelId
{-# INLINE inputChannelValuesChannelIdL #-}

-- | 'inputChannelValuesValues' Lens
inputChannelValuesValuesL :: Lens_' InputChannelValues ([Point])
inputChannelValuesValuesL f InputChannelValues{..} = (\inputChannelValuesValues -> InputChannelValues { inputChannelValuesValues, ..} ) <$> f inputChannelValuesValues
{-# INLINE inputChannelValuesValuesL #-}



-- * InputImageDTO

-- | 'inputImageDTOName' Lens
inputImageDTONameL :: Lens_' InputImageDTO (Maybe Text)
inputImageDTONameL f InputImageDTO{..} = (\inputImageDTOName -> InputImageDTO { inputImageDTOName, ..} ) <$> f inputImageDTOName
{-# INLINE inputImageDTONameL #-}

-- | 'inputImageDTODescription' Lens
inputImageDTODescriptionL :: Lens_' InputImageDTO (Maybe Text)
inputImageDTODescriptionL f InputImageDTO{..} = (\inputImageDTODescription -> InputImageDTO { inputImageDTODescription, ..} ) <$> f inputImageDTODescription
{-# INLINE inputImageDTODescriptionL #-}

-- | 'inputImageDTOData' Lens
inputImageDTODataL :: Lens_' InputImageDTO (Maybe Text)
inputImageDTODataL f InputImageDTO{..} = (\inputImageDTOData -> InputImageDTO { inputImageDTOData, ..} ) <$> f inputImageDTOData
{-# INLINE inputImageDTODataL #-}



-- * InputMetadata

-- | 'inputMetadataSource' Lens
inputMetadataSourceL :: Lens_' InputMetadata (Text)
inputMetadataSourceL f InputMetadata{..} = (\inputMetadataSource -> InputMetadata { inputMetadataSource, ..} ) <$> f inputMetadataSource
{-# INLINE inputMetadataSourceL #-}

-- | 'inputMetadataDestination' Lens
inputMetadataDestinationL :: Lens_' InputMetadata (Text)
inputMetadataDestinationL f InputMetadata{..} = (\inputMetadataDestination -> InputMetadata { inputMetadataDestination, ..} ) <$> f inputMetadataDestination
{-# INLINE inputMetadataDestinationL #-}

-- | 'inputMetadataSize' Lens
inputMetadataSizeL :: Lens_' InputMetadata (Integer)
inputMetadataSizeL f InputMetadata{..} = (\inputMetadataSize -> InputMetadata { inputMetadataSize, ..} ) <$> f inputMetadataSize
{-# INLINE inputMetadataSizeL #-}



-- * InvitationStatusEnumDTO



-- * InvitationTypeEnumDTO



-- * KeyValueProperty

-- | 'keyValuePropertyKey' Lens
keyValuePropertyKeyL :: Lens_' KeyValueProperty (Text)
keyValuePropertyKeyL f KeyValueProperty{..} = (\keyValuePropertyKey -> KeyValueProperty { keyValuePropertyKey, ..} ) <$> f keyValuePropertyKey
{-# INLINE keyValuePropertyKeyL #-}

-- | 'keyValuePropertyValue' Lens
keyValuePropertyValueL :: Lens_' KeyValueProperty (Text)
keyValuePropertyValueL f KeyValueProperty{..} = (\keyValuePropertyValue -> KeyValueProperty { keyValuePropertyValue, ..} ) <$> f keyValuePropertyValue
{-# INLINE keyValuePropertyValueL #-}



-- * LimitedChannelValuesDTO

-- | 'limitedChannelValuesDTOChannelId' Lens
limitedChannelValuesDTOChannelIdL :: Lens_' LimitedChannelValuesDTO (Text)
limitedChannelValuesDTOChannelIdL f LimitedChannelValuesDTO{..} = (\limitedChannelValuesDTOChannelId -> LimitedChannelValuesDTO { limitedChannelValuesDTOChannelId, ..} ) <$> f limitedChannelValuesDTOChannelId
{-# INLINE limitedChannelValuesDTOChannelIdL #-}

-- | 'limitedChannelValuesDTOValues' Lens
limitedChannelValuesDTOValuesL :: Lens_' LimitedChannelValuesDTO ([PointValueDTO])
limitedChannelValuesDTOValuesL f LimitedChannelValuesDTO{..} = (\limitedChannelValuesDTOValues -> LimitedChannelValuesDTO { limitedChannelValuesDTOValues, ..} ) <$> f limitedChannelValuesDTOValues
{-# INLINE limitedChannelValuesDTOValuesL #-}

-- | 'limitedChannelValuesDTOTotalItemCount' Lens
limitedChannelValuesDTOTotalItemCountL :: Lens_' LimitedChannelValuesDTO (Int)
limitedChannelValuesDTOTotalItemCountL f LimitedChannelValuesDTO{..} = (\limitedChannelValuesDTOTotalItemCount -> LimitedChannelValuesDTO { limitedChannelValuesDTOTotalItemCount, ..} ) <$> f limitedChannelValuesDTOTotalItemCount
{-# INLINE limitedChannelValuesDTOTotalItemCountL #-}



-- * Link

-- | 'linkUrl' Lens
linkUrlL :: Lens_' Link (Text)
linkUrlL f Link{..} = (\linkUrl -> Link { linkUrl, ..} ) <$> f linkUrl
{-# INLINE linkUrlL #-}



-- * LinkDTO

-- | 'linkDTOUrl' Lens
linkDTOUrlL :: Lens_' LinkDTO (Text)
linkDTOUrlL f LinkDTO{..} = (\linkDTOUrl -> LinkDTO { linkDTOUrl, ..} ) <$> f linkDTOUrl
{-# INLINE linkDTOUrlL #-}



-- * LinkTypeDTO



-- * LoginActionDTO



-- * LoginActionsListDTO

-- | 'loginActionsListDTORequiredActions' Lens
loginActionsListDTORequiredActionsL :: Lens_' LoginActionsListDTO ([LoginActionDTO])
loginActionsListDTORequiredActionsL f LoginActionsListDTO{..} = (\loginActionsListDTORequiredActions -> LoginActionsListDTO { loginActionsListDTORequiredActions, ..} ) <$> f loginActionsListDTORequiredActions
{-# INLINE loginActionsListDTORequiredActionsL #-}



-- * NameEnum



-- * NeptuneApiToken

-- | 'neptuneApiTokenToken' Lens
neptuneApiTokenTokenL :: Lens_' NeptuneApiToken (Text)
neptuneApiTokenTokenL f NeptuneApiToken{..} = (\neptuneApiTokenToken -> NeptuneApiToken { neptuneApiTokenToken, ..} ) <$> f neptuneApiTokenToken
{-# INLINE neptuneApiTokenTokenL #-}



-- * NeptuneOauthToken

-- | 'neptuneOauthTokenAccessToken' Lens
neptuneOauthTokenAccessTokenL :: Lens_' NeptuneOauthToken (Text)
neptuneOauthTokenAccessTokenL f NeptuneOauthToken{..} = (\neptuneOauthTokenAccessToken -> NeptuneOauthToken { neptuneOauthTokenAccessToken, ..} ) <$> f neptuneOauthTokenAccessToken
{-# INLINE neptuneOauthTokenAccessTokenL #-}

-- | 'neptuneOauthTokenRefreshToken' Lens
neptuneOauthTokenRefreshTokenL :: Lens_' NeptuneOauthToken (Text)
neptuneOauthTokenRefreshTokenL f NeptuneOauthToken{..} = (\neptuneOauthTokenRefreshToken -> NeptuneOauthToken { neptuneOauthTokenRefreshToken, ..} ) <$> f neptuneOauthTokenRefreshToken
{-# INLINE neptuneOauthTokenRefreshTokenL #-}

-- | 'neptuneOauthTokenUsername' Lens
neptuneOauthTokenUsernameL :: Lens_' NeptuneOauthToken (Text)
neptuneOauthTokenUsernameL f NeptuneOauthToken{..} = (\neptuneOauthTokenUsername -> NeptuneOauthToken { neptuneOauthTokenUsername, ..} ) <$> f neptuneOauthTokenUsername
{-# INLINE neptuneOauthTokenUsernameL #-}



-- * NewOrganizationInvitationDTO

-- | 'newOrganizationInvitationDTORoleGrant' Lens
newOrganizationInvitationDTORoleGrantL :: Lens_' NewOrganizationInvitationDTO (OrganizationRoleDTO)
newOrganizationInvitationDTORoleGrantL f NewOrganizationInvitationDTO{..} = (\newOrganizationInvitationDTORoleGrant -> NewOrganizationInvitationDTO { newOrganizationInvitationDTORoleGrant, ..} ) <$> f newOrganizationInvitationDTORoleGrant
{-# INLINE newOrganizationInvitationDTORoleGrantL #-}

-- | 'newOrganizationInvitationDTOAddToAllProjects' Lens
newOrganizationInvitationDTOAddToAllProjectsL :: Lens_' NewOrganizationInvitationDTO (Bool)
newOrganizationInvitationDTOAddToAllProjectsL f NewOrganizationInvitationDTO{..} = (\newOrganizationInvitationDTOAddToAllProjects -> NewOrganizationInvitationDTO { newOrganizationInvitationDTOAddToAllProjects, ..} ) <$> f newOrganizationInvitationDTOAddToAllProjects
{-# INLINE newOrganizationInvitationDTOAddToAllProjectsL #-}

-- | 'newOrganizationInvitationDTOOrganizationIdentifier' Lens
newOrganizationInvitationDTOOrganizationIdentifierL :: Lens_' NewOrganizationInvitationDTO (Text)
newOrganizationInvitationDTOOrganizationIdentifierL f NewOrganizationInvitationDTO{..} = (\newOrganizationInvitationDTOOrganizationIdentifier -> NewOrganizationInvitationDTO { newOrganizationInvitationDTOOrganizationIdentifier, ..} ) <$> f newOrganizationInvitationDTOOrganizationIdentifier
{-# INLINE newOrganizationInvitationDTOOrganizationIdentifierL #-}

-- | 'newOrganizationInvitationDTOInvitee' Lens
newOrganizationInvitationDTOInviteeL :: Lens_' NewOrganizationInvitationDTO (Text)
newOrganizationInvitationDTOInviteeL f NewOrganizationInvitationDTO{..} = (\newOrganizationInvitationDTOInvitee -> NewOrganizationInvitationDTO { newOrganizationInvitationDTOInvitee, ..} ) <$> f newOrganizationInvitationDTOInvitee
{-# INLINE newOrganizationInvitationDTOInviteeL #-}

-- | 'newOrganizationInvitationDTOInvitationType' Lens
newOrganizationInvitationDTOInvitationTypeL :: Lens_' NewOrganizationInvitationDTO (InvitationTypeEnumDTO)
newOrganizationInvitationDTOInvitationTypeL f NewOrganizationInvitationDTO{..} = (\newOrganizationInvitationDTOInvitationType -> NewOrganizationInvitationDTO { newOrganizationInvitationDTOInvitationType, ..} ) <$> f newOrganizationInvitationDTOInvitationType
{-# INLINE newOrganizationInvitationDTOInvitationTypeL #-}



-- * NewOrganizationMemberDTO

-- | 'newOrganizationMemberDTOUserId' Lens
newOrganizationMemberDTOUserIdL :: Lens_' NewOrganizationMemberDTO (Text)
newOrganizationMemberDTOUserIdL f NewOrganizationMemberDTO{..} = (\newOrganizationMemberDTOUserId -> NewOrganizationMemberDTO { newOrganizationMemberDTOUserId, ..} ) <$> f newOrganizationMemberDTOUserId
{-# INLINE newOrganizationMemberDTOUserIdL #-}

-- | 'newOrganizationMemberDTORole' Lens
newOrganizationMemberDTORoleL :: Lens_' NewOrganizationMemberDTO (OrganizationRoleDTO)
newOrganizationMemberDTORoleL f NewOrganizationMemberDTO{..} = (\newOrganizationMemberDTORole -> NewOrganizationMemberDTO { newOrganizationMemberDTORole, ..} ) <$> f newOrganizationMemberDTORole
{-# INLINE newOrganizationMemberDTORoleL #-}



-- * NewProjectDTO

-- | 'newProjectDTOName' Lens
newProjectDTONameL :: Lens_' NewProjectDTO (Text)
newProjectDTONameL f NewProjectDTO{..} = (\newProjectDTOName -> NewProjectDTO { newProjectDTOName, ..} ) <$> f newProjectDTOName
{-# INLINE newProjectDTONameL #-}

-- | 'newProjectDTODescription' Lens
newProjectDTODescriptionL :: Lens_' NewProjectDTO (Maybe Text)
newProjectDTODescriptionL f NewProjectDTO{..} = (\newProjectDTODescription -> NewProjectDTO { newProjectDTODescription, ..} ) <$> f newProjectDTODescription
{-# INLINE newProjectDTODescriptionL #-}

-- | 'newProjectDTOProjectKey' Lens
newProjectDTOProjectKeyL :: Lens_' NewProjectDTO (Text)
newProjectDTOProjectKeyL f NewProjectDTO{..} = (\newProjectDTOProjectKey -> NewProjectDTO { newProjectDTOProjectKey, ..} ) <$> f newProjectDTOProjectKey
{-# INLINE newProjectDTOProjectKeyL #-}

-- | 'newProjectDTOOrganizationId' Lens
newProjectDTOOrganizationIdL :: Lens_' NewProjectDTO (Text)
newProjectDTOOrganizationIdL f NewProjectDTO{..} = (\newProjectDTOOrganizationId -> NewProjectDTO { newProjectDTOOrganizationId, ..} ) <$> f newProjectDTOOrganizationId
{-# INLINE newProjectDTOOrganizationIdL #-}

-- | 'newProjectDTOVisibility' Lens
newProjectDTOVisibilityL :: Lens_' NewProjectDTO (Maybe ProjectVisibilityDTO)
newProjectDTOVisibilityL f NewProjectDTO{..} = (\newProjectDTOVisibility -> NewProjectDTO { newProjectDTOVisibility, ..} ) <$> f newProjectDTOVisibility
{-# INLINE newProjectDTOVisibilityL #-}

-- | 'newProjectDTODisplayClass' Lens
newProjectDTODisplayClassL :: Lens_' NewProjectDTO (Maybe Text)
newProjectDTODisplayClassL f NewProjectDTO{..} = (\newProjectDTODisplayClass -> NewProjectDTO { newProjectDTODisplayClass, ..} ) <$> f newProjectDTODisplayClass
{-# INLINE newProjectDTODisplayClassL #-}



-- * NewProjectInvitationDTO

-- | 'newProjectInvitationDTOProjectIdentifier' Lens
newProjectInvitationDTOProjectIdentifierL :: Lens_' NewProjectInvitationDTO (Text)
newProjectInvitationDTOProjectIdentifierL f NewProjectInvitationDTO{..} = (\newProjectInvitationDTOProjectIdentifier -> NewProjectInvitationDTO { newProjectInvitationDTOProjectIdentifier, ..} ) <$> f newProjectInvitationDTOProjectIdentifier
{-# INLINE newProjectInvitationDTOProjectIdentifierL #-}

-- | 'newProjectInvitationDTOInvitee' Lens
newProjectInvitationDTOInviteeL :: Lens_' NewProjectInvitationDTO (Text)
newProjectInvitationDTOInviteeL f NewProjectInvitationDTO{..} = (\newProjectInvitationDTOInvitee -> NewProjectInvitationDTO { newProjectInvitationDTOInvitee, ..} ) <$> f newProjectInvitationDTOInvitee
{-# INLINE newProjectInvitationDTOInviteeL #-}

-- | 'newProjectInvitationDTOInvitationType' Lens
newProjectInvitationDTOInvitationTypeL :: Lens_' NewProjectInvitationDTO (InvitationTypeEnumDTO)
newProjectInvitationDTOInvitationTypeL f NewProjectInvitationDTO{..} = (\newProjectInvitationDTOInvitationType -> NewProjectInvitationDTO { newProjectInvitationDTOInvitationType, ..} ) <$> f newProjectInvitationDTOInvitationType
{-# INLINE newProjectInvitationDTOInvitationTypeL #-}

-- | 'newProjectInvitationDTORoleGrant' Lens
newProjectInvitationDTORoleGrantL :: Lens_' NewProjectInvitationDTO (ProjectRoleDTO)
newProjectInvitationDTORoleGrantL f NewProjectInvitationDTO{..} = (\newProjectInvitationDTORoleGrant -> NewProjectInvitationDTO { newProjectInvitationDTORoleGrant, ..} ) <$> f newProjectInvitationDTORoleGrant
{-# INLINE newProjectInvitationDTORoleGrantL #-}



-- * NewProjectMemberDTO

-- | 'newProjectMemberDTOUserId' Lens
newProjectMemberDTOUserIdL :: Lens_' NewProjectMemberDTO (Text)
newProjectMemberDTOUserIdL f NewProjectMemberDTO{..} = (\newProjectMemberDTOUserId -> NewProjectMemberDTO { newProjectMemberDTOUserId, ..} ) <$> f newProjectMemberDTOUserId
{-# INLINE newProjectMemberDTOUserIdL #-}

-- | 'newProjectMemberDTORole' Lens
newProjectMemberDTORoleL :: Lens_' NewProjectMemberDTO (ProjectRoleDTO)
newProjectMemberDTORoleL f NewProjectMemberDTO{..} = (\newProjectMemberDTORole -> NewProjectMemberDTO { newProjectMemberDTORole, ..} ) <$> f newProjectMemberDTORole
{-# INLINE newProjectMemberDTORoleL #-}



-- * NewReservationDTO

-- | 'newReservationDTOName' Lens
newReservationDTONameL :: Lens_' NewReservationDTO (Text)
newReservationDTONameL f NewReservationDTO{..} = (\newReservationDTOName -> NewReservationDTO { newReservationDTOName, ..} ) <$> f newReservationDTOName
{-# INLINE newReservationDTONameL #-}



-- * OrganizationCreationParamsDTO

-- | 'organizationCreationParamsDTOName' Lens
organizationCreationParamsDTONameL :: Lens_' OrganizationCreationParamsDTO (Text)
organizationCreationParamsDTONameL f OrganizationCreationParamsDTO{..} = (\organizationCreationParamsDTOName -> OrganizationCreationParamsDTO { organizationCreationParamsDTOName, ..} ) <$> f organizationCreationParamsDTOName
{-# INLINE organizationCreationParamsDTONameL #-}

-- | 'organizationCreationParamsDTOOrganizationType' Lens
organizationCreationParamsDTOOrganizationTypeL :: Lens_' OrganizationCreationParamsDTO (OrganizationTypeDTO)
organizationCreationParamsDTOOrganizationTypeL f OrganizationCreationParamsDTO{..} = (\organizationCreationParamsDTOOrganizationType -> OrganizationCreationParamsDTO { organizationCreationParamsDTOOrganizationType, ..} ) <$> f organizationCreationParamsDTOOrganizationType
{-# INLINE organizationCreationParamsDTOOrganizationTypeL #-}

-- | 'organizationCreationParamsDTODiscountCode' Lens
organizationCreationParamsDTODiscountCodeL :: Lens_' OrganizationCreationParamsDTO (Maybe DiscountCodeDTO)
organizationCreationParamsDTODiscountCodeL f OrganizationCreationParamsDTO{..} = (\organizationCreationParamsDTODiscountCode -> OrganizationCreationParamsDTO { organizationCreationParamsDTODiscountCode, ..} ) <$> f organizationCreationParamsDTODiscountCode
{-# INLINE organizationCreationParamsDTODiscountCodeL #-}



-- * OrganizationDTO

-- | 'organizationDTOName' Lens
organizationDTONameL :: Lens_' OrganizationDTO (Text)
organizationDTONameL f OrganizationDTO{..} = (\organizationDTOName -> OrganizationDTO { organizationDTOName, ..} ) <$> f organizationDTOName
{-# INLINE organizationDTONameL #-}

-- | 'organizationDTOPaymentStatus' Lens
organizationDTOPaymentStatusL :: Lens_' OrganizationDTO (Text)
organizationDTOPaymentStatusL f OrganizationDTO{..} = (\organizationDTOPaymentStatus -> OrganizationDTO { organizationDTOPaymentStatus, ..} ) <$> f organizationDTOPaymentStatus
{-# INLINE organizationDTOPaymentStatusL #-}

-- | 'organizationDTOAvatarUrl' Lens
organizationDTOAvatarUrlL :: Lens_' OrganizationDTO (Text)
organizationDTOAvatarUrlL f OrganizationDTO{..} = (\organizationDTOAvatarUrl -> OrganizationDTO { organizationDTOAvatarUrl, ..} ) <$> f organizationDTOAvatarUrl
{-# INLINE organizationDTOAvatarUrlL #-}

-- | 'organizationDTOOrganizationType' Lens
organizationDTOOrganizationTypeL :: Lens_' OrganizationDTO (OrganizationTypeDTO)
organizationDTOOrganizationTypeL f OrganizationDTO{..} = (\organizationDTOOrganizationType -> OrganizationDTO { organizationDTOOrganizationType, ..} ) <$> f organizationDTOOrganizationType
{-# INLINE organizationDTOOrganizationTypeL #-}

-- | 'organizationDTOAvatarSource' Lens
organizationDTOAvatarSourceL :: Lens_' OrganizationDTO (AvatarSourceEnum)
organizationDTOAvatarSourceL f OrganizationDTO{..} = (\organizationDTOAvatarSource -> OrganizationDTO { organizationDTOAvatarSource, ..} ) <$> f organizationDTOAvatarSource
{-# INLINE organizationDTOAvatarSourceL #-}

-- | 'organizationDTOInfo' Lens
organizationDTOInfoL :: Lens_' OrganizationDTO (Maybe Text)
organizationDTOInfoL f OrganizationDTO{..} = (\organizationDTOInfo -> OrganizationDTO { organizationDTOInfo, ..} ) <$> f organizationDTOInfo
{-# INLINE organizationDTOInfoL #-}

-- | 'organizationDTOId' Lens
organizationDTOIdL :: Lens_' OrganizationDTO (Text)
organizationDTOIdL f OrganizationDTO{..} = (\organizationDTOId -> OrganizationDTO { organizationDTOId, ..} ) <$> f organizationDTOId
{-# INLINE organizationDTOIdL #-}

-- | 'organizationDTOCreated' Lens
organizationDTOCreatedL :: Lens_' OrganizationDTO (DateTime)
organizationDTOCreatedL f OrganizationDTO{..} = (\organizationDTOCreated -> OrganizationDTO { organizationDTOCreated, ..} ) <$> f organizationDTOCreated
{-# INLINE organizationDTOCreatedL #-}



-- * OrganizationInvitationDTO

-- | 'organizationInvitationDTORoleGrant' Lens
organizationInvitationDTORoleGrantL :: Lens_' OrganizationInvitationDTO (OrganizationRoleDTO)
organizationInvitationDTORoleGrantL f OrganizationInvitationDTO{..} = (\organizationInvitationDTORoleGrant -> OrganizationInvitationDTO { organizationInvitationDTORoleGrant, ..} ) <$> f organizationInvitationDTORoleGrant
{-# INLINE organizationInvitationDTORoleGrantL #-}

-- | 'organizationInvitationDTOInvitedBy' Lens
organizationInvitationDTOInvitedByL :: Lens_' OrganizationInvitationDTO (Text)
organizationInvitationDTOInvitedByL f OrganizationInvitationDTO{..} = (\organizationInvitationDTOInvitedBy -> OrganizationInvitationDTO { organizationInvitationDTOInvitedBy, ..} ) <$> f organizationInvitationDTOInvitedBy
{-# INLINE organizationInvitationDTOInvitedByL #-}

-- | 'organizationInvitationDTOOrganizationName' Lens
organizationInvitationDTOOrganizationNameL :: Lens_' OrganizationInvitationDTO (Text)
organizationInvitationDTOOrganizationNameL f OrganizationInvitationDTO{..} = (\organizationInvitationDTOOrganizationName -> OrganizationInvitationDTO { organizationInvitationDTOOrganizationName, ..} ) <$> f organizationInvitationDTOOrganizationName
{-# INLINE organizationInvitationDTOOrganizationNameL #-}

-- | 'organizationInvitationDTOId' Lens
organizationInvitationDTOIdL :: Lens_' OrganizationInvitationDTO (Text)
organizationInvitationDTOIdL f OrganizationInvitationDTO{..} = (\organizationInvitationDTOId -> OrganizationInvitationDTO { organizationInvitationDTOId, ..} ) <$> f organizationInvitationDTOId
{-# INLINE organizationInvitationDTOIdL #-}

-- | 'organizationInvitationDTOInvitee' Lens
organizationInvitationDTOInviteeL :: Lens_' OrganizationInvitationDTO (Text)
organizationInvitationDTOInviteeL f OrganizationInvitationDTO{..} = (\organizationInvitationDTOInvitee -> OrganizationInvitationDTO { organizationInvitationDTOInvitee, ..} ) <$> f organizationInvitationDTOInvitee
{-# INLINE organizationInvitationDTOInviteeL #-}

-- | 'organizationInvitationDTOStatus' Lens
organizationInvitationDTOStatusL :: Lens_' OrganizationInvitationDTO (InvitationStatusEnumDTO)
organizationInvitationDTOStatusL f OrganizationInvitationDTO{..} = (\organizationInvitationDTOStatus -> OrganizationInvitationDTO { organizationInvitationDTOStatus, ..} ) <$> f organizationInvitationDTOStatus
{-# INLINE organizationInvitationDTOStatusL #-}

-- | 'organizationInvitationDTOInvitationType' Lens
organizationInvitationDTOInvitationTypeL :: Lens_' OrganizationInvitationDTO (InvitationTypeEnumDTO)
organizationInvitationDTOInvitationTypeL f OrganizationInvitationDTO{..} = (\organizationInvitationDTOInvitationType -> OrganizationInvitationDTO { organizationInvitationDTOInvitationType, ..} ) <$> f organizationInvitationDTOInvitationType
{-# INLINE organizationInvitationDTOInvitationTypeL #-}



-- * OrganizationInvitationUpdateDTO

-- | 'organizationInvitationUpdateDTORoleGrant' Lens
organizationInvitationUpdateDTORoleGrantL :: Lens_' OrganizationInvitationUpdateDTO (OrganizationRoleDTO)
organizationInvitationUpdateDTORoleGrantL f OrganizationInvitationUpdateDTO{..} = (\organizationInvitationUpdateDTORoleGrant -> OrganizationInvitationUpdateDTO { organizationInvitationUpdateDTORoleGrant, ..} ) <$> f organizationInvitationUpdateDTORoleGrant
{-# INLINE organizationInvitationUpdateDTORoleGrantL #-}



-- * OrganizationLimitsDTO

-- | 'organizationLimitsDTOStorageSize' Lens
organizationLimitsDTOStorageSizeL :: Lens_' OrganizationLimitsDTO (Maybe Integer)
organizationLimitsDTOStorageSizeL f OrganizationLimitsDTO{..} = (\organizationLimitsDTOStorageSize -> OrganizationLimitsDTO { organizationLimitsDTOStorageSize, ..} ) <$> f organizationLimitsDTOStorageSize
{-# INLINE organizationLimitsDTOStorageSizeL #-}

-- | 'organizationLimitsDTOPrivateProjectMembers' Lens
organizationLimitsDTOPrivateProjectMembersL :: Lens_' OrganizationLimitsDTO (Maybe Integer)
organizationLimitsDTOPrivateProjectMembersL f OrganizationLimitsDTO{..} = (\organizationLimitsDTOPrivateProjectMembers -> OrganizationLimitsDTO { organizationLimitsDTOPrivateProjectMembers, ..} ) <$> f organizationLimitsDTOPrivateProjectMembers
{-# INLINE organizationLimitsDTOPrivateProjectMembersL #-}

-- | 'organizationLimitsDTOProjectsLimit' Lens
organizationLimitsDTOProjectsLimitL :: Lens_' OrganizationLimitsDTO (Maybe Integer)
organizationLimitsDTOProjectsLimitL f OrganizationLimitsDTO{..} = (\organizationLimitsDTOProjectsLimit -> OrganizationLimitsDTO { organizationLimitsDTOProjectsLimit, ..} ) <$> f organizationLimitsDTOProjectsLimit
{-# INLINE organizationLimitsDTOProjectsLimitL #-}

-- | 'organizationLimitsDTOMembersLimit' Lens
organizationLimitsDTOMembersLimitL :: Lens_' OrganizationLimitsDTO (Maybe Integer)
organizationLimitsDTOMembersLimitL f OrganizationLimitsDTO{..} = (\organizationLimitsDTOMembersLimit -> OrganizationLimitsDTO { organizationLimitsDTOMembersLimit, ..} ) <$> f organizationLimitsDTOMembersLimit
{-# INLINE organizationLimitsDTOMembersLimitL #-}



-- * OrganizationMemberDTO

-- | 'organizationMemberDTORole' Lens
organizationMemberDTORoleL :: Lens_' OrganizationMemberDTO (OrganizationRoleDTO)
organizationMemberDTORoleL f OrganizationMemberDTO{..} = (\organizationMemberDTORole -> OrganizationMemberDTO { organizationMemberDTORole, ..} ) <$> f organizationMemberDTORole
{-# INLINE organizationMemberDTORoleL #-}

-- | 'organizationMemberDTOEditableRole' Lens
organizationMemberDTOEditableRoleL :: Lens_' OrganizationMemberDTO (Bool)
organizationMemberDTOEditableRoleL f OrganizationMemberDTO{..} = (\organizationMemberDTOEditableRole -> OrganizationMemberDTO { organizationMemberDTOEditableRole, ..} ) <$> f organizationMemberDTOEditableRole
{-# INLINE organizationMemberDTOEditableRoleL #-}

-- | 'organizationMemberDTORegisteredMemberInfo' Lens
organizationMemberDTORegisteredMemberInfoL :: Lens_' OrganizationMemberDTO (Maybe RegisteredMemberInfoDTO)
organizationMemberDTORegisteredMemberInfoL f OrganizationMemberDTO{..} = (\organizationMemberDTORegisteredMemberInfo -> OrganizationMemberDTO { organizationMemberDTORegisteredMemberInfo, ..} ) <$> f organizationMemberDTORegisteredMemberInfo
{-# INLINE organizationMemberDTORegisteredMemberInfoL #-}

-- | 'organizationMemberDTOInvitationInfo' Lens
organizationMemberDTOInvitationInfoL :: Lens_' OrganizationMemberDTO (Maybe OrganizationInvitationDTO)
organizationMemberDTOInvitationInfoL f OrganizationMemberDTO{..} = (\organizationMemberDTOInvitationInfo -> OrganizationMemberDTO { organizationMemberDTOInvitationInfo, ..} ) <$> f organizationMemberDTOInvitationInfo
{-# INLINE organizationMemberDTOInvitationInfoL #-}

-- | 'organizationMemberDTOTotalNumberOfProjects' Lens
organizationMemberDTOTotalNumberOfProjectsL :: Lens_' OrganizationMemberDTO (Maybe Int)
organizationMemberDTOTotalNumberOfProjectsL f OrganizationMemberDTO{..} = (\organizationMemberDTOTotalNumberOfProjects -> OrganizationMemberDTO { organizationMemberDTOTotalNumberOfProjects, ..} ) <$> f organizationMemberDTOTotalNumberOfProjects
{-# INLINE organizationMemberDTOTotalNumberOfProjectsL #-}

-- | 'organizationMemberDTONumberOfProjects' Lens
organizationMemberDTONumberOfProjectsL :: Lens_' OrganizationMemberDTO (Maybe Int)
organizationMemberDTONumberOfProjectsL f OrganizationMemberDTO{..} = (\organizationMemberDTONumberOfProjects -> OrganizationMemberDTO { organizationMemberDTONumberOfProjects, ..} ) <$> f organizationMemberDTONumberOfProjects
{-# INLINE organizationMemberDTONumberOfProjectsL #-}



-- * OrganizationMemberUpdateDTO

-- | 'organizationMemberUpdateDTORole' Lens
organizationMemberUpdateDTORoleL :: Lens_' OrganizationMemberUpdateDTO (OrganizationRoleDTO)
organizationMemberUpdateDTORoleL f OrganizationMemberUpdateDTO{..} = (\organizationMemberUpdateDTORole -> OrganizationMemberUpdateDTO { organizationMemberUpdateDTORole, ..} ) <$> f organizationMemberUpdateDTORole
{-# INLINE organizationMemberUpdateDTORoleL #-}



-- * OrganizationNameAvailableDTO

-- | 'organizationNameAvailableDTOAvailable' Lens
organizationNameAvailableDTOAvailableL :: Lens_' OrganizationNameAvailableDTO (Bool)
organizationNameAvailableDTOAvailableL f OrganizationNameAvailableDTO{..} = (\organizationNameAvailableDTOAvailable -> OrganizationNameAvailableDTO { organizationNameAvailableDTOAvailable, ..} ) <$> f organizationNameAvailableDTOAvailable
{-# INLINE organizationNameAvailableDTOAvailableL #-}



-- * OrganizationPricingPlanDTO

-- | 'organizationPricingPlanDTOPricingPlan' Lens
organizationPricingPlanDTOPricingPlanL :: Lens_' OrganizationPricingPlanDTO (PricingPlanDTO)
organizationPricingPlanDTOPricingPlanL f OrganizationPricingPlanDTO{..} = (\organizationPricingPlanDTOPricingPlan -> OrganizationPricingPlanDTO { organizationPricingPlanDTOPricingPlan, ..} ) <$> f organizationPricingPlanDTOPricingPlan
{-# INLINE organizationPricingPlanDTOPricingPlanL #-}



-- * OrganizationRoleDTO



-- * OrganizationTypeDTO



-- * OrganizationUpdateDTO

-- | 'organizationUpdateDTOName' Lens
organizationUpdateDTONameL :: Lens_' OrganizationUpdateDTO (Maybe Text)
organizationUpdateDTONameL f OrganizationUpdateDTO{..} = (\organizationUpdateDTOName -> OrganizationUpdateDTO { organizationUpdateDTOName, ..} ) <$> f organizationUpdateDTOName
{-# INLINE organizationUpdateDTONameL #-}

-- | 'organizationUpdateDTOInfo' Lens
organizationUpdateDTOInfoL :: Lens_' OrganizationUpdateDTO (Maybe Text)
organizationUpdateDTOInfoL f OrganizationUpdateDTO{..} = (\organizationUpdateDTOInfo -> OrganizationUpdateDTO { organizationUpdateDTOInfo, ..} ) <$> f organizationUpdateDTOInfo
{-# INLINE organizationUpdateDTOInfoL #-}



-- * OrganizationWithRoleDTO

-- | 'organizationWithRoleDTOName' Lens
organizationWithRoleDTONameL :: Lens_' OrganizationWithRoleDTO (Text)
organizationWithRoleDTONameL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOName -> OrganizationWithRoleDTO { organizationWithRoleDTOName, ..} ) <$> f organizationWithRoleDTOName
{-# INLINE organizationWithRoleDTONameL #-}

-- | 'organizationWithRoleDTOUserRole' Lens
organizationWithRoleDTOUserRoleL :: Lens_' OrganizationWithRoleDTO (Maybe OrganizationRoleDTO)
organizationWithRoleDTOUserRoleL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOUserRole -> OrganizationWithRoleDTO { organizationWithRoleDTOUserRole, ..} ) <$> f organizationWithRoleDTOUserRole
{-# INLINE organizationWithRoleDTOUserRoleL #-}

-- | 'organizationWithRoleDTOPaymentStatus' Lens
organizationWithRoleDTOPaymentStatusL :: Lens_' OrganizationWithRoleDTO (Text)
organizationWithRoleDTOPaymentStatusL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOPaymentStatus -> OrganizationWithRoleDTO { organizationWithRoleDTOPaymentStatus, ..} ) <$> f organizationWithRoleDTOPaymentStatus
{-# INLINE organizationWithRoleDTOPaymentStatusL #-}

-- | 'organizationWithRoleDTOAvatarUrl' Lens
organizationWithRoleDTOAvatarUrlL :: Lens_' OrganizationWithRoleDTO (Text)
organizationWithRoleDTOAvatarUrlL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOAvatarUrl -> OrganizationWithRoleDTO { organizationWithRoleDTOAvatarUrl, ..} ) <$> f organizationWithRoleDTOAvatarUrl
{-# INLINE organizationWithRoleDTOAvatarUrlL #-}

-- | 'organizationWithRoleDTOOrganizationType' Lens
organizationWithRoleDTOOrganizationTypeL :: Lens_' OrganizationWithRoleDTO (OrganizationTypeDTO)
organizationWithRoleDTOOrganizationTypeL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOOrganizationType -> OrganizationWithRoleDTO { organizationWithRoleDTOOrganizationType, ..} ) <$> f organizationWithRoleDTOOrganizationType
{-# INLINE organizationWithRoleDTOOrganizationTypeL #-}

-- | 'organizationWithRoleDTOAvatarSource' Lens
organizationWithRoleDTOAvatarSourceL :: Lens_' OrganizationWithRoleDTO (AvatarSourceEnum)
organizationWithRoleDTOAvatarSourceL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOAvatarSource -> OrganizationWithRoleDTO { organizationWithRoleDTOAvatarSource, ..} ) <$> f organizationWithRoleDTOAvatarSource
{-# INLINE organizationWithRoleDTOAvatarSourceL #-}

-- | 'organizationWithRoleDTOInfo' Lens
organizationWithRoleDTOInfoL :: Lens_' OrganizationWithRoleDTO (Maybe Text)
organizationWithRoleDTOInfoL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOInfo -> OrganizationWithRoleDTO { organizationWithRoleDTOInfo, ..} ) <$> f organizationWithRoleDTOInfo
{-# INLINE organizationWithRoleDTOInfoL #-}

-- | 'organizationWithRoleDTOId' Lens
organizationWithRoleDTOIdL :: Lens_' OrganizationWithRoleDTO (Text)
organizationWithRoleDTOIdL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOId -> OrganizationWithRoleDTO { organizationWithRoleDTOId, ..} ) <$> f organizationWithRoleDTOId
{-# INLINE organizationWithRoleDTOIdL #-}

-- | 'organizationWithRoleDTOCreated' Lens
organizationWithRoleDTOCreatedL :: Lens_' OrganizationWithRoleDTO (DateTime)
organizationWithRoleDTOCreatedL f OrganizationWithRoleDTO{..} = (\organizationWithRoleDTOCreated -> OrganizationWithRoleDTO { organizationWithRoleDTOCreated, ..} ) <$> f organizationWithRoleDTOCreated
{-# INLINE organizationWithRoleDTOCreatedL #-}



-- * OutputImageDTO

-- | 'outputImageDTOName' Lens
outputImageDTONameL :: Lens_' OutputImageDTO (Maybe Text)
outputImageDTONameL f OutputImageDTO{..} = (\outputImageDTOName -> OutputImageDTO { outputImageDTOName, ..} ) <$> f outputImageDTOName
{-# INLINE outputImageDTONameL #-}

-- | 'outputImageDTODescription' Lens
outputImageDTODescriptionL :: Lens_' OutputImageDTO (Maybe Text)
outputImageDTODescriptionL f OutputImageDTO{..} = (\outputImageDTODescription -> OutputImageDTO { outputImageDTODescription, ..} ) <$> f outputImageDTODescription
{-# INLINE outputImageDTODescriptionL #-}

-- | 'outputImageDTOImageUrl' Lens
outputImageDTOImageUrlL :: Lens_' OutputImageDTO (Maybe Text)
outputImageDTOImageUrlL f OutputImageDTO{..} = (\outputImageDTOImageUrl -> OutputImageDTO { outputImageDTOImageUrl, ..} ) <$> f outputImageDTOImageUrl
{-# INLINE outputImageDTOImageUrlL #-}

-- | 'outputImageDTOThumbnailUrl' Lens
outputImageDTOThumbnailUrlL :: Lens_' OutputImageDTO (Maybe Text)
outputImageDTOThumbnailUrlL f OutputImageDTO{..} = (\outputImageDTOThumbnailUrl -> OutputImageDTO { outputImageDTOThumbnailUrl, ..} ) <$> f outputImageDTOThumbnailUrl
{-# INLINE outputImageDTOThumbnailUrlL #-}



-- * Parameter

-- | 'parameterName' Lens
parameterNameL :: Lens_' Parameter (Text)
parameterNameL f Parameter{..} = (\parameterName -> Parameter { parameterName, ..} ) <$> f parameterName
{-# INLINE parameterNameL #-}

-- | 'parameterDescription' Lens
parameterDescriptionL :: Lens_' Parameter (Maybe Text)
parameterDescriptionL f Parameter{..} = (\parameterDescription -> Parameter { parameterDescription, ..} ) <$> f parameterDescription
{-# INLINE parameterDescriptionL #-}

-- | 'parameterParameterType' Lens
parameterParameterTypeL :: Lens_' Parameter (ParameterTypeEnum)
parameterParameterTypeL f Parameter{..} = (\parameterParameterType -> Parameter { parameterParameterType, ..} ) <$> f parameterParameterType
{-# INLINE parameterParameterTypeL #-}

-- | 'parameterId' Lens
parameterIdL :: Lens_' Parameter (Text)
parameterIdL f Parameter{..} = (\parameterId -> Parameter { parameterId, ..} ) <$> f parameterId
{-# INLINE parameterIdL #-}

-- | 'parameterValue' Lens
parameterValueL :: Lens_' Parameter (Text)
parameterValueL f Parameter{..} = (\parameterValue -> Parameter { parameterValue, ..} ) <$> f parameterValue
{-# INLINE parameterValueL #-}



-- * ParameterTypeEnum



-- * PasswordChangeDTO

-- | 'passwordChangeDTOCurrentPassword' Lens
passwordChangeDTOCurrentPasswordL :: Lens_' PasswordChangeDTO (Text)
passwordChangeDTOCurrentPasswordL f PasswordChangeDTO{..} = (\passwordChangeDTOCurrentPassword -> PasswordChangeDTO { passwordChangeDTOCurrentPassword, ..} ) <$> f passwordChangeDTOCurrentPassword
{-# INLINE passwordChangeDTOCurrentPasswordL #-}

-- | 'passwordChangeDTONewPassword' Lens
passwordChangeDTONewPasswordL :: Lens_' PasswordChangeDTO (Text)
passwordChangeDTONewPasswordL f PasswordChangeDTO{..} = (\passwordChangeDTONewPassword -> PasswordChangeDTO { passwordChangeDTONewPassword, ..} ) <$> f passwordChangeDTONewPassword
{-# INLINE passwordChangeDTONewPasswordL #-}



-- * Point

-- | 'pointTimestampMillis' Lens
pointTimestampMillisL :: Lens_' Point (Integer)
pointTimestampMillisL f Point{..} = (\pointTimestampMillis -> Point { pointTimestampMillis, ..} ) <$> f pointTimestampMillis
{-# INLINE pointTimestampMillisL #-}

-- | 'pointX' Lens
pointXL :: Lens_' Point (Maybe Double)
pointXL f Point{..} = (\pointX -> Point { pointX, ..} ) <$> f pointX
{-# INLINE pointXL #-}

-- | 'pointY' Lens
pointYL :: Lens_' Point (Y)
pointYL f Point{..} = (\pointY -> Point { pointY, ..} ) <$> f pointY
{-# INLINE pointYL #-}



-- * PointValueDTO

-- | 'pointValueDTOTimestampMillis' Lens
pointValueDTOTimestampMillisL :: Lens_' PointValueDTO (Integer)
pointValueDTOTimestampMillisL f PointValueDTO{..} = (\pointValueDTOTimestampMillis -> PointValueDTO { pointValueDTOTimestampMillis, ..} ) <$> f pointValueDTOTimestampMillis
{-# INLINE pointValueDTOTimestampMillisL #-}

-- | 'pointValueDTOX' Lens
pointValueDTOXL :: Lens_' PointValueDTO (Double)
pointValueDTOXL f PointValueDTO{..} = (\pointValueDTOX -> PointValueDTO { pointValueDTOX, ..} ) <$> f pointValueDTOX
{-# INLINE pointValueDTOXL #-}

-- | 'pointValueDTOY' Lens
pointValueDTOYL :: Lens_' PointValueDTO (Y)
pointValueDTOYL f PointValueDTO{..} = (\pointValueDTOY -> PointValueDTO { pointValueDTOY, ..} ) <$> f pointValueDTOY
{-# INLINE pointValueDTOYL #-}



-- * PricingPlanDTO



-- * ProjectCodeAccessDTO



-- * ProjectInvitationDTO

-- | 'projectInvitationDTORoleGrant' Lens
projectInvitationDTORoleGrantL :: Lens_' ProjectInvitationDTO (ProjectRoleDTO)
projectInvitationDTORoleGrantL f ProjectInvitationDTO{..} = (\projectInvitationDTORoleGrant -> ProjectInvitationDTO { projectInvitationDTORoleGrant, ..} ) <$> f projectInvitationDTORoleGrant
{-# INLINE projectInvitationDTORoleGrantL #-}

-- | 'projectInvitationDTOProjectName' Lens
projectInvitationDTOProjectNameL :: Lens_' ProjectInvitationDTO (Text)
projectInvitationDTOProjectNameL f ProjectInvitationDTO{..} = (\projectInvitationDTOProjectName -> ProjectInvitationDTO { projectInvitationDTOProjectName, ..} ) <$> f projectInvitationDTOProjectName
{-# INLINE projectInvitationDTOProjectNameL #-}

-- | 'projectInvitationDTOInvitedBy' Lens
projectInvitationDTOInvitedByL :: Lens_' ProjectInvitationDTO (Text)
projectInvitationDTOInvitedByL f ProjectInvitationDTO{..} = (\projectInvitationDTOInvitedBy -> ProjectInvitationDTO { projectInvitationDTOInvitedBy, ..} ) <$> f projectInvitationDTOInvitedBy
{-# INLINE projectInvitationDTOInvitedByL #-}

-- | 'projectInvitationDTOOrganizationName' Lens
projectInvitationDTOOrganizationNameL :: Lens_' ProjectInvitationDTO (Text)
projectInvitationDTOOrganizationNameL f ProjectInvitationDTO{..} = (\projectInvitationDTOOrganizationName -> ProjectInvitationDTO { projectInvitationDTOOrganizationName, ..} ) <$> f projectInvitationDTOOrganizationName
{-# INLINE projectInvitationDTOOrganizationNameL #-}

-- | 'projectInvitationDTOId' Lens
projectInvitationDTOIdL :: Lens_' ProjectInvitationDTO (Text)
projectInvitationDTOIdL f ProjectInvitationDTO{..} = (\projectInvitationDTOId -> ProjectInvitationDTO { projectInvitationDTOId, ..} ) <$> f projectInvitationDTOId
{-# INLINE projectInvitationDTOIdL #-}

-- | 'projectInvitationDTOInvitee' Lens
projectInvitationDTOInviteeL :: Lens_' ProjectInvitationDTO (Text)
projectInvitationDTOInviteeL f ProjectInvitationDTO{..} = (\projectInvitationDTOInvitee -> ProjectInvitationDTO { projectInvitationDTOInvitee, ..} ) <$> f projectInvitationDTOInvitee
{-# INLINE projectInvitationDTOInviteeL #-}

-- | 'projectInvitationDTOStatus' Lens
projectInvitationDTOStatusL :: Lens_' ProjectInvitationDTO (InvitationStatusEnumDTO)
projectInvitationDTOStatusL f ProjectInvitationDTO{..} = (\projectInvitationDTOStatus -> ProjectInvitationDTO { projectInvitationDTOStatus, ..} ) <$> f projectInvitationDTOStatus
{-# INLINE projectInvitationDTOStatusL #-}

-- | 'projectInvitationDTOInvitationType' Lens
projectInvitationDTOInvitationTypeL :: Lens_' ProjectInvitationDTO (InvitationTypeEnumDTO)
projectInvitationDTOInvitationTypeL f ProjectInvitationDTO{..} = (\projectInvitationDTOInvitationType -> ProjectInvitationDTO { projectInvitationDTOInvitationType, ..} ) <$> f projectInvitationDTOInvitationType
{-# INLINE projectInvitationDTOInvitationTypeL #-}



-- * ProjectInvitationUpdateDTO

-- | 'projectInvitationUpdateDTORoleGrant' Lens
projectInvitationUpdateDTORoleGrantL :: Lens_' ProjectInvitationUpdateDTO (ProjectRoleDTO)
projectInvitationUpdateDTORoleGrantL f ProjectInvitationUpdateDTO{..} = (\projectInvitationUpdateDTORoleGrant -> ProjectInvitationUpdateDTO { projectInvitationUpdateDTORoleGrant, ..} ) <$> f projectInvitationUpdateDTORoleGrant
{-# INLINE projectInvitationUpdateDTORoleGrantL #-}



-- * ProjectKeyDTO

-- | 'projectKeyDTOProposal' Lens
projectKeyDTOProposalL :: Lens_' ProjectKeyDTO (Text)
projectKeyDTOProposalL f ProjectKeyDTO{..} = (\projectKeyDTOProposal -> ProjectKeyDTO { projectKeyDTOProposal, ..} ) <$> f projectKeyDTOProposal
{-# INLINE projectKeyDTOProposalL #-}



-- * ProjectListDTO

-- | 'projectListDTOEntries' Lens
projectListDTOEntriesL :: Lens_' ProjectListDTO ([ProjectWithRoleDTO])
projectListDTOEntriesL f ProjectListDTO{..} = (\projectListDTOEntries -> ProjectListDTO { projectListDTOEntries, ..} ) <$> f projectListDTOEntries
{-# INLINE projectListDTOEntriesL #-}

-- | 'projectListDTOMatchingItemCount' Lens
projectListDTOMatchingItemCountL :: Lens_' ProjectListDTO (Int)
projectListDTOMatchingItemCountL f ProjectListDTO{..} = (\projectListDTOMatchingItemCount -> ProjectListDTO { projectListDTOMatchingItemCount, ..} ) <$> f projectListDTOMatchingItemCount
{-# INLINE projectListDTOMatchingItemCountL #-}

-- | 'projectListDTOTotalItemCount' Lens
projectListDTOTotalItemCountL :: Lens_' ProjectListDTO (Int)
projectListDTOTotalItemCountL f ProjectListDTO{..} = (\projectListDTOTotalItemCount -> ProjectListDTO { projectListDTOTotalItemCount, ..} ) <$> f projectListDTOTotalItemCount
{-# INLINE projectListDTOTotalItemCountL #-}



-- * ProjectMemberDTO

-- | 'projectMemberDTORole' Lens
projectMemberDTORoleL :: Lens_' ProjectMemberDTO (ProjectRoleDTO)
projectMemberDTORoleL f ProjectMemberDTO{..} = (\projectMemberDTORole -> ProjectMemberDTO { projectMemberDTORole, ..} ) <$> f projectMemberDTORole
{-# INLINE projectMemberDTORoleL #-}

-- | 'projectMemberDTORegisteredMemberInfo' Lens
projectMemberDTORegisteredMemberInfoL :: Lens_' ProjectMemberDTO (Maybe RegisteredMemberInfoDTO)
projectMemberDTORegisteredMemberInfoL f ProjectMemberDTO{..} = (\projectMemberDTORegisteredMemberInfo -> ProjectMemberDTO { projectMemberDTORegisteredMemberInfo, ..} ) <$> f projectMemberDTORegisteredMemberInfo
{-# INLINE projectMemberDTORegisteredMemberInfoL #-}

-- | 'projectMemberDTOInvitationInfo' Lens
projectMemberDTOInvitationInfoL :: Lens_' ProjectMemberDTO (Maybe ProjectInvitationDTO)
projectMemberDTOInvitationInfoL f ProjectMemberDTO{..} = (\projectMemberDTOInvitationInfo -> ProjectMemberDTO { projectMemberDTOInvitationInfo, ..} ) <$> f projectMemberDTOInvitationInfo
{-# INLINE projectMemberDTOInvitationInfoL #-}

-- | 'projectMemberDTOEditableRole' Lens
projectMemberDTOEditableRoleL :: Lens_' ProjectMemberDTO (Bool)
projectMemberDTOEditableRoleL f ProjectMemberDTO{..} = (\projectMemberDTOEditableRole -> ProjectMemberDTO { projectMemberDTOEditableRole, ..} ) <$> f projectMemberDTOEditableRole
{-# INLINE projectMemberDTOEditableRoleL #-}

-- | 'projectMemberDTOCanLeaveProject' Lens
projectMemberDTOCanLeaveProjectL :: Lens_' ProjectMemberDTO (Bool)
projectMemberDTOCanLeaveProjectL f ProjectMemberDTO{..} = (\projectMemberDTOCanLeaveProject -> ProjectMemberDTO { projectMemberDTOCanLeaveProject, ..} ) <$> f projectMemberDTOCanLeaveProject
{-# INLINE projectMemberDTOCanLeaveProjectL #-}



-- * ProjectMemberUpdateDTO

-- | 'projectMemberUpdateDTORole' Lens
projectMemberUpdateDTORoleL :: Lens_' ProjectMemberUpdateDTO (ProjectRoleDTO)
projectMemberUpdateDTORoleL f ProjectMemberUpdateDTO{..} = (\projectMemberUpdateDTORole -> ProjectMemberUpdateDTO { projectMemberUpdateDTORole, ..} ) <$> f projectMemberUpdateDTORole
{-# INLINE projectMemberUpdateDTORoleL #-}



-- * ProjectMembersDTO

-- | 'projectMembersDTOProjectName' Lens
projectMembersDTOProjectNameL :: Lens_' ProjectMembersDTO (Text)
projectMembersDTOProjectNameL f ProjectMembersDTO{..} = (\projectMembersDTOProjectName -> ProjectMembersDTO { projectMembersDTOProjectName, ..} ) <$> f projectMembersDTOProjectName
{-# INLINE projectMembersDTOProjectNameL #-}

-- | 'projectMembersDTOProjectId' Lens
projectMembersDTOProjectIdL :: Lens_' ProjectMembersDTO (Text)
projectMembersDTOProjectIdL f ProjectMembersDTO{..} = (\projectMembersDTOProjectId -> ProjectMembersDTO { projectMembersDTOProjectId, ..} ) <$> f projectMembersDTOProjectId
{-# INLINE projectMembersDTOProjectIdL #-}

-- | 'projectMembersDTOOrganizationName' Lens
projectMembersDTOOrganizationNameL :: Lens_' ProjectMembersDTO (Text)
projectMembersDTOOrganizationNameL f ProjectMembersDTO{..} = (\projectMembersDTOOrganizationName -> ProjectMembersDTO { projectMembersDTOOrganizationName, ..} ) <$> f projectMembersDTOOrganizationName
{-# INLINE projectMembersDTOOrganizationNameL #-}

-- | 'projectMembersDTOMembers' Lens
projectMembersDTOMembersL :: Lens_' ProjectMembersDTO ([ProjectMemberDTO])
projectMembersDTOMembersL f ProjectMembersDTO{..} = (\projectMembersDTOMembers -> ProjectMembersDTO { projectMembersDTOMembers, ..} ) <$> f projectMembersDTOMembers
{-# INLINE projectMembersDTOMembersL #-}

-- | 'projectMembersDTOOrganizationId' Lens
projectMembersDTOOrganizationIdL :: Lens_' ProjectMembersDTO (Text)
projectMembersDTOOrganizationIdL f ProjectMembersDTO{..} = (\projectMembersDTOOrganizationId -> ProjectMembersDTO { projectMembersDTOOrganizationId, ..} ) <$> f projectMembersDTOOrganizationId
{-# INLINE projectMembersDTOOrganizationIdL #-}



-- * ProjectMetadataDTO

-- | 'projectMetadataDTOName' Lens
projectMetadataDTONameL :: Lens_' ProjectMetadataDTO (Text)
projectMetadataDTONameL f ProjectMetadataDTO{..} = (\projectMetadataDTOName -> ProjectMetadataDTO { projectMetadataDTOName, ..} ) <$> f projectMetadataDTOName
{-# INLINE projectMetadataDTONameL #-}

-- | 'projectMetadataDTOOrganizationType' Lens
projectMetadataDTOOrganizationTypeL :: Lens_' ProjectMetadataDTO (OrganizationTypeDTO)
projectMetadataDTOOrganizationTypeL f ProjectMetadataDTO{..} = (\projectMetadataDTOOrganizationType -> ProjectMetadataDTO { projectMetadataDTOOrganizationType, ..} ) <$> f projectMetadataDTOOrganizationType
{-# INLINE projectMetadataDTOOrganizationTypeL #-}

-- | 'projectMetadataDTOTimeOfCreation' Lens
projectMetadataDTOTimeOfCreationL :: Lens_' ProjectMetadataDTO (DateTime)
projectMetadataDTOTimeOfCreationL f ProjectMetadataDTO{..} = (\projectMetadataDTOTimeOfCreation -> ProjectMetadataDTO { projectMetadataDTOTimeOfCreation, ..} ) <$> f projectMetadataDTOTimeOfCreation
{-# INLINE projectMetadataDTOTimeOfCreationL #-}

-- | 'projectMetadataDTOOrganizationName' Lens
projectMetadataDTOOrganizationNameL :: Lens_' ProjectMetadataDTO (Text)
projectMetadataDTOOrganizationNameL f ProjectMetadataDTO{..} = (\projectMetadataDTOOrganizationName -> ProjectMetadataDTO { projectMetadataDTOOrganizationName, ..} ) <$> f projectMetadataDTOOrganizationName
{-# INLINE projectMetadataDTOOrganizationNameL #-}

-- | 'projectMetadataDTOVersion' Lens
projectMetadataDTOVersionL :: Lens_' ProjectMetadataDTO (Int)
projectMetadataDTOVersionL f ProjectMetadataDTO{..} = (\projectMetadataDTOVersion -> ProjectMetadataDTO { projectMetadataDTOVersion, ..} ) <$> f projectMetadataDTOVersion
{-# INLINE projectMetadataDTOVersionL #-}

-- | 'projectMetadataDTOId' Lens
projectMetadataDTOIdL :: Lens_' ProjectMetadataDTO (Text)
projectMetadataDTOIdL f ProjectMetadataDTO{..} = (\projectMetadataDTOId -> ProjectMetadataDTO { projectMetadataDTOId, ..} ) <$> f projectMetadataDTOId
{-# INLINE projectMetadataDTOIdL #-}

-- | 'projectMetadataDTOProjectKey' Lens
projectMetadataDTOProjectKeyL :: Lens_' ProjectMetadataDTO (Text)
projectMetadataDTOProjectKeyL f ProjectMetadataDTO{..} = (\projectMetadataDTOProjectKey -> ProjectMetadataDTO { projectMetadataDTOProjectKey, ..} ) <$> f projectMetadataDTOProjectKey
{-# INLINE projectMetadataDTOProjectKeyL #-}

-- | 'projectMetadataDTOOrganizationId' Lens
projectMetadataDTOOrganizationIdL :: Lens_' ProjectMetadataDTO (Text)
projectMetadataDTOOrganizationIdL f ProjectMetadataDTO{..} = (\projectMetadataDTOOrganizationId -> ProjectMetadataDTO { projectMetadataDTOOrganizationId, ..} ) <$> f projectMetadataDTOOrganizationId
{-# INLINE projectMetadataDTOOrganizationIdL #-}



-- * ProjectRoleDTO



-- * ProjectUpdateDTO

-- | 'projectUpdateDTOCodeAccess' Lens
projectUpdateDTOCodeAccessL :: Lens_' ProjectUpdateDTO (Maybe ProjectCodeAccessDTO)
projectUpdateDTOCodeAccessL f ProjectUpdateDTO{..} = (\projectUpdateDTOCodeAccess -> ProjectUpdateDTO { projectUpdateDTOCodeAccess, ..} ) <$> f projectUpdateDTOCodeAccess
{-# INLINE projectUpdateDTOCodeAccessL #-}

-- | 'projectUpdateDTOName' Lens
projectUpdateDTONameL :: Lens_' ProjectUpdateDTO (Maybe Text)
projectUpdateDTONameL f ProjectUpdateDTO{..} = (\projectUpdateDTOName -> ProjectUpdateDTO { projectUpdateDTOName, ..} ) <$> f projectUpdateDTOName
{-# INLINE projectUpdateDTONameL #-}

-- | 'projectUpdateDTODescription' Lens
projectUpdateDTODescriptionL :: Lens_' ProjectUpdateDTO (Maybe Text)
projectUpdateDTODescriptionL f ProjectUpdateDTO{..} = (\projectUpdateDTODescription -> ProjectUpdateDTO { projectUpdateDTODescription, ..} ) <$> f projectUpdateDTODescription
{-# INLINE projectUpdateDTODescriptionL #-}

-- | 'projectUpdateDTOVisibility' Lens
projectUpdateDTOVisibilityL :: Lens_' ProjectUpdateDTO (Maybe ProjectVisibilityDTO)
projectUpdateDTOVisibilityL f ProjectUpdateDTO{..} = (\projectUpdateDTOVisibility -> ProjectUpdateDTO { projectUpdateDTOVisibility, ..} ) <$> f projectUpdateDTOVisibility
{-# INLINE projectUpdateDTOVisibilityL #-}

-- | 'projectUpdateDTODisplayClass' Lens
projectUpdateDTODisplayClassL :: Lens_' ProjectUpdateDTO (Maybe Text)
projectUpdateDTODisplayClassL f ProjectUpdateDTO{..} = (\projectUpdateDTODisplayClass -> ProjectUpdateDTO { projectUpdateDTODisplayClass, ..} ) <$> f projectUpdateDTODisplayClass
{-# INLINE projectUpdateDTODisplayClassL #-}



-- * ProjectVisibilityDTO



-- * ProjectWithRoleDTO

-- | 'projectWithRoleDTOCodeAccess' Lens
projectWithRoleDTOCodeAccessL :: Lens_' ProjectWithRoleDTO (ProjectCodeAccessDTO)
projectWithRoleDTOCodeAccessL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOCodeAccess -> ProjectWithRoleDTO { projectWithRoleDTOCodeAccess, ..} ) <$> f projectWithRoleDTOCodeAccess
{-# INLINE projectWithRoleDTOCodeAccessL #-}

-- | 'projectWithRoleDTOAvatarUrl' Lens
projectWithRoleDTOAvatarUrlL :: Lens_' ProjectWithRoleDTO (Text)
projectWithRoleDTOAvatarUrlL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOAvatarUrl -> ProjectWithRoleDTO { projectWithRoleDTOAvatarUrl, ..} ) <$> f projectWithRoleDTOAvatarUrl
{-# INLINE projectWithRoleDTOAvatarUrlL #-}

-- | 'projectWithRoleDTODescription' Lens
projectWithRoleDTODescriptionL :: Lens_' ProjectWithRoleDTO (Maybe Text)
projectWithRoleDTODescriptionL f ProjectWithRoleDTO{..} = (\projectWithRoleDTODescription -> ProjectWithRoleDTO { projectWithRoleDTODescription, ..} ) <$> f projectWithRoleDTODescription
{-# INLINE projectWithRoleDTODescriptionL #-}

-- | 'projectWithRoleDTOOrganizationType' Lens
projectWithRoleDTOOrganizationTypeL :: Lens_' ProjectWithRoleDTO (OrganizationTypeDTO)
projectWithRoleDTOOrganizationTypeL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOOrganizationType -> ProjectWithRoleDTO { projectWithRoleDTOOrganizationType, ..} ) <$> f projectWithRoleDTOOrganizationType
{-# INLINE projectWithRoleDTOOrganizationTypeL #-}

-- | 'projectWithRoleDTOFeatured' Lens
projectWithRoleDTOFeaturedL :: Lens_' ProjectWithRoleDTO (Bool)
projectWithRoleDTOFeaturedL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOFeatured -> ProjectWithRoleDTO { projectWithRoleDTOFeatured, ..} ) <$> f projectWithRoleDTOFeatured
{-# INLINE projectWithRoleDTOFeaturedL #-}

-- | 'projectWithRoleDTOOrganizationName' Lens
projectWithRoleDTOOrganizationNameL :: Lens_' ProjectWithRoleDTO (Text)
projectWithRoleDTOOrganizationNameL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOOrganizationName -> ProjectWithRoleDTO { projectWithRoleDTOOrganizationName, ..} ) <$> f projectWithRoleDTOOrganizationName
{-# INLINE projectWithRoleDTOOrganizationNameL #-}

-- | 'projectWithRoleDTOVersion' Lens
projectWithRoleDTOVersionL :: Lens_' ProjectWithRoleDTO (Int)
projectWithRoleDTOVersionL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOVersion -> ProjectWithRoleDTO { projectWithRoleDTOVersion, ..} ) <$> f projectWithRoleDTOVersion
{-# INLINE projectWithRoleDTOVersionL #-}

-- | 'projectWithRoleDTOId' Lens
projectWithRoleDTOIdL :: Lens_' ProjectWithRoleDTO (Text)
projectWithRoleDTOIdL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOId -> ProjectWithRoleDTO { projectWithRoleDTOId, ..} ) <$> f projectWithRoleDTOId
{-# INLINE projectWithRoleDTOIdL #-}

-- | 'projectWithRoleDTOProjectKey' Lens
projectWithRoleDTOProjectKeyL :: Lens_' ProjectWithRoleDTO (Text)
projectWithRoleDTOProjectKeyL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOProjectKey -> ProjectWithRoleDTO { projectWithRoleDTOProjectKey, ..} ) <$> f projectWithRoleDTOProjectKey
{-# INLINE projectWithRoleDTOProjectKeyL #-}

-- | 'projectWithRoleDTOOrganizationId' Lens
projectWithRoleDTOOrganizationIdL :: Lens_' ProjectWithRoleDTO (Text)
projectWithRoleDTOOrganizationIdL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOOrganizationId -> ProjectWithRoleDTO { projectWithRoleDTOOrganizationId, ..} ) <$> f projectWithRoleDTOOrganizationId
{-# INLINE projectWithRoleDTOOrganizationIdL #-}

-- | 'projectWithRoleDTOUserCount' Lens
projectWithRoleDTOUserCountL :: Lens_' ProjectWithRoleDTO (Int)
projectWithRoleDTOUserCountL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOUserCount -> ProjectWithRoleDTO { projectWithRoleDTOUserCount, ..} ) <$> f projectWithRoleDTOUserCount
{-# INLINE projectWithRoleDTOUserCountL #-}

-- | 'projectWithRoleDTOVisibility' Lens
projectWithRoleDTOVisibilityL :: Lens_' ProjectWithRoleDTO (ProjectVisibilityDTO)
projectWithRoleDTOVisibilityL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOVisibility -> ProjectWithRoleDTO { projectWithRoleDTOVisibility, ..} ) <$> f projectWithRoleDTOVisibility
{-# INLINE projectWithRoleDTOVisibilityL #-}

-- | 'projectWithRoleDTODisplayClass' Lens
projectWithRoleDTODisplayClassL :: Lens_' ProjectWithRoleDTO (Maybe Text)
projectWithRoleDTODisplayClassL f ProjectWithRoleDTO{..} = (\projectWithRoleDTODisplayClass -> ProjectWithRoleDTO { projectWithRoleDTODisplayClass, ..} ) <$> f projectWithRoleDTODisplayClass
{-# INLINE projectWithRoleDTODisplayClassL #-}

-- | 'projectWithRoleDTOName' Lens
projectWithRoleDTONameL :: Lens_' ProjectWithRoleDTO (Text)
projectWithRoleDTONameL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOName -> ProjectWithRoleDTO { projectWithRoleDTOName, ..} ) <$> f projectWithRoleDTOName
{-# INLINE projectWithRoleDTONameL #-}

-- | 'projectWithRoleDTOLastActivity' Lens
projectWithRoleDTOLastActivityL :: Lens_' ProjectWithRoleDTO (DateTime)
projectWithRoleDTOLastActivityL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOLastActivity -> ProjectWithRoleDTO { projectWithRoleDTOLastActivity, ..} ) <$> f projectWithRoleDTOLastActivity
{-# INLINE projectWithRoleDTOLastActivityL #-}

-- | 'projectWithRoleDTOTimeOfCreation' Lens
projectWithRoleDTOTimeOfCreationL :: Lens_' ProjectWithRoleDTO (DateTime)
projectWithRoleDTOTimeOfCreationL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOTimeOfCreation -> ProjectWithRoleDTO { projectWithRoleDTOTimeOfCreation, ..} ) <$> f projectWithRoleDTOTimeOfCreation
{-# INLINE projectWithRoleDTOTimeOfCreationL #-}

-- | 'projectWithRoleDTOUserRoleInOrganization' Lens
projectWithRoleDTOUserRoleInOrganizationL :: Lens_' ProjectWithRoleDTO (Maybe OrganizationRoleDTO)
projectWithRoleDTOUserRoleInOrganizationL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOUserRoleInOrganization -> ProjectWithRoleDTO { projectWithRoleDTOUserRoleInOrganization, ..} ) <$> f projectWithRoleDTOUserRoleInOrganization
{-# INLINE projectWithRoleDTOUserRoleInOrganizationL #-}

-- | 'projectWithRoleDTOAvatarSource' Lens
projectWithRoleDTOAvatarSourceL :: Lens_' ProjectWithRoleDTO (AvatarSourceEnum)
projectWithRoleDTOAvatarSourceL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOAvatarSource -> ProjectWithRoleDTO { projectWithRoleDTOAvatarSource, ..} ) <$> f projectWithRoleDTOAvatarSource
{-# INLINE projectWithRoleDTOAvatarSourceL #-}

-- | 'projectWithRoleDTOLeaderboardEntryCount' Lens
projectWithRoleDTOLeaderboardEntryCountL :: Lens_' ProjectWithRoleDTO (Int)
projectWithRoleDTOLeaderboardEntryCountL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOLeaderboardEntryCount -> ProjectWithRoleDTO { projectWithRoleDTOLeaderboardEntryCount, ..} ) <$> f projectWithRoleDTOLeaderboardEntryCount
{-# INLINE projectWithRoleDTOLeaderboardEntryCountL #-}

-- | 'projectWithRoleDTOUserRoleInProject' Lens
projectWithRoleDTOUserRoleInProjectL :: Lens_' ProjectWithRoleDTO (ProjectRoleDTO)
projectWithRoleDTOUserRoleInProjectL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOUserRoleInProject -> ProjectWithRoleDTO { projectWithRoleDTOUserRoleInProject, ..} ) <$> f projectWithRoleDTOUserRoleInProject
{-# INLINE projectWithRoleDTOUserRoleInProjectL #-}

-- | 'projectWithRoleDTOBackgroundUrl' Lens
projectWithRoleDTOBackgroundUrlL :: Lens_' ProjectWithRoleDTO (Maybe Text)
projectWithRoleDTOBackgroundUrlL f ProjectWithRoleDTO{..} = (\projectWithRoleDTOBackgroundUrl -> ProjectWithRoleDTO { projectWithRoleDTOBackgroundUrl, ..} ) <$> f projectWithRoleDTOBackgroundUrl
{-# INLINE projectWithRoleDTOBackgroundUrlL #-}



-- * PublicUserProfileDTO

-- | 'publicUserProfileDTOBiography' Lens
publicUserProfileDTOBiographyL :: Lens_' PublicUserProfileDTO (Text)
publicUserProfileDTOBiographyL f PublicUserProfileDTO{..} = (\publicUserProfileDTOBiography -> PublicUserProfileDTO { publicUserProfileDTOBiography, ..} ) <$> f publicUserProfileDTOBiography
{-# INLINE publicUserProfileDTOBiographyL #-}

-- | 'publicUserProfileDTOEmail' Lens
publicUserProfileDTOEmailL :: Lens_' PublicUserProfileDTO (Maybe Text)
publicUserProfileDTOEmailL f PublicUserProfileDTO{..} = (\publicUserProfileDTOEmail -> PublicUserProfileDTO { publicUserProfileDTOEmail, ..} ) <$> f publicUserProfileDTOEmail
{-# INLINE publicUserProfileDTOEmailL #-}

-- | 'publicUserProfileDTOAvatarSource' Lens
publicUserProfileDTOAvatarSourceL :: Lens_' PublicUserProfileDTO (AvatarSourceEnum)
publicUserProfileDTOAvatarSourceL f PublicUserProfileDTO{..} = (\publicUserProfileDTOAvatarSource -> PublicUserProfileDTO { publicUserProfileDTOAvatarSource, ..} ) <$> f publicUserProfileDTOAvatarSource
{-# INLINE publicUserProfileDTOAvatarSourceL #-}

-- | 'publicUserProfileDTOFirstName' Lens
publicUserProfileDTOFirstNameL :: Lens_' PublicUserProfileDTO (Maybe Text)
publicUserProfileDTOFirstNameL f PublicUserProfileDTO{..} = (\publicUserProfileDTOFirstName -> PublicUserProfileDTO { publicUserProfileDTOFirstName, ..} ) <$> f publicUserProfileDTOFirstName
{-# INLINE publicUserProfileDTOFirstNameL #-}

-- | 'publicUserProfileDTOShortInfo' Lens
publicUserProfileDTOShortInfoL :: Lens_' PublicUserProfileDTO (Text)
publicUserProfileDTOShortInfoL f PublicUserProfileDTO{..} = (\publicUserProfileDTOShortInfo -> PublicUserProfileDTO { publicUserProfileDTOShortInfo, ..} ) <$> f publicUserProfileDTOShortInfo
{-# INLINE publicUserProfileDTOShortInfoL #-}

-- | 'publicUserProfileDTOUsername' Lens
publicUserProfileDTOUsernameL :: Lens_' PublicUserProfileDTO (Text)
publicUserProfileDTOUsernameL f PublicUserProfileDTO{..} = (\publicUserProfileDTOUsername -> PublicUserProfileDTO { publicUserProfileDTOUsername, ..} ) <$> f publicUserProfileDTOUsername
{-# INLINE publicUserProfileDTOUsernameL #-}

-- | 'publicUserProfileDTOAvatarUrl' Lens
publicUserProfileDTOAvatarUrlL :: Lens_' PublicUserProfileDTO (Text)
publicUserProfileDTOAvatarUrlL f PublicUserProfileDTO{..} = (\publicUserProfileDTOAvatarUrl -> PublicUserProfileDTO { publicUserProfileDTOAvatarUrl, ..} ) <$> f publicUserProfileDTOAvatarUrl
{-# INLINE publicUserProfileDTOAvatarUrlL #-}

-- | 'publicUserProfileDTOLastName' Lens
publicUserProfileDTOLastNameL :: Lens_' PublicUserProfileDTO (Maybe Text)
publicUserProfileDTOLastNameL f PublicUserProfileDTO{..} = (\publicUserProfileDTOLastName -> PublicUserProfileDTO { publicUserProfileDTOLastName, ..} ) <$> f publicUserProfileDTOLastName
{-# INLINE publicUserProfileDTOLastNameL #-}

-- | 'publicUserProfileDTOLinks' Lens
publicUserProfileDTOLinksL :: Lens_' PublicUserProfileDTO (UserProfileLinksDTO)
publicUserProfileDTOLinksL f PublicUserProfileDTO{..} = (\publicUserProfileDTOLinks -> PublicUserProfileDTO { publicUserProfileDTOLinks, ..} ) <$> f publicUserProfileDTOLinks
{-# INLINE publicUserProfileDTOLinksL #-}



-- * QuestionnaireDTO

-- | 'questionnaireDTOAnswers' Lens
questionnaireDTOAnswersL :: Lens_' QuestionnaireDTO (Text)
questionnaireDTOAnswersL f QuestionnaireDTO{..} = (\questionnaireDTOAnswers -> QuestionnaireDTO { questionnaireDTOAnswers, ..} ) <$> f questionnaireDTOAnswers
{-# INLINE questionnaireDTOAnswersL #-}



-- * RegisteredMemberInfoDTO

-- | 'registeredMemberInfoDTOAvatarSource' Lens
registeredMemberInfoDTOAvatarSourceL :: Lens_' RegisteredMemberInfoDTO (AvatarSourceEnum)
registeredMemberInfoDTOAvatarSourceL f RegisteredMemberInfoDTO{..} = (\registeredMemberInfoDTOAvatarSource -> RegisteredMemberInfoDTO { registeredMemberInfoDTOAvatarSource, ..} ) <$> f registeredMemberInfoDTOAvatarSource
{-# INLINE registeredMemberInfoDTOAvatarSourceL #-}

-- | 'registeredMemberInfoDTOLastName' Lens
registeredMemberInfoDTOLastNameL :: Lens_' RegisteredMemberInfoDTO (Text)
registeredMemberInfoDTOLastNameL f RegisteredMemberInfoDTO{..} = (\registeredMemberInfoDTOLastName -> RegisteredMemberInfoDTO { registeredMemberInfoDTOLastName, ..} ) <$> f registeredMemberInfoDTOLastName
{-# INLINE registeredMemberInfoDTOLastNameL #-}

-- | 'registeredMemberInfoDTOFirstName' Lens
registeredMemberInfoDTOFirstNameL :: Lens_' RegisteredMemberInfoDTO (Text)
registeredMemberInfoDTOFirstNameL f RegisteredMemberInfoDTO{..} = (\registeredMemberInfoDTOFirstName -> RegisteredMemberInfoDTO { registeredMemberInfoDTOFirstName, ..} ) <$> f registeredMemberInfoDTOFirstName
{-# INLINE registeredMemberInfoDTOFirstNameL #-}

-- | 'registeredMemberInfoDTOUsername' Lens
registeredMemberInfoDTOUsernameL :: Lens_' RegisteredMemberInfoDTO (Text)
registeredMemberInfoDTOUsernameL f RegisteredMemberInfoDTO{..} = (\registeredMemberInfoDTOUsername -> RegisteredMemberInfoDTO { registeredMemberInfoDTOUsername, ..} ) <$> f registeredMemberInfoDTOUsername
{-# INLINE registeredMemberInfoDTOUsernameL #-}

-- | 'registeredMemberInfoDTOAvatarUrl' Lens
registeredMemberInfoDTOAvatarUrlL :: Lens_' RegisteredMemberInfoDTO (Text)
registeredMemberInfoDTOAvatarUrlL f RegisteredMemberInfoDTO{..} = (\registeredMemberInfoDTOAvatarUrl -> RegisteredMemberInfoDTO { registeredMemberInfoDTOAvatarUrl, ..} ) <$> f registeredMemberInfoDTOAvatarUrl
{-# INLINE registeredMemberInfoDTOAvatarUrlL #-}



-- * RegistrationSurveyDTO

-- | 'registrationSurveyDTOSurvey' Lens
registrationSurveyDTOSurveyL :: Lens_' RegistrationSurveyDTO (Text)
registrationSurveyDTOSurveyL f RegistrationSurveyDTO{..} = (\registrationSurveyDTOSurvey -> RegistrationSurveyDTO { registrationSurveyDTOSurvey, ..} ) <$> f registrationSurveyDTOSurvey
{-# INLINE registrationSurveyDTOSurveyL #-}



-- * Series

-- | 'seriesSeriesType' Lens
seriesSeriesTypeL :: Lens_' Series (SeriesType)
seriesSeriesTypeL f Series{..} = (\seriesSeriesType -> Series { seriesSeriesType, ..} ) <$> f seriesSeriesType
{-# INLINE seriesSeriesTypeL #-}

-- | 'seriesChannelName' Lens
seriesChannelNameL :: Lens_' Series (Maybe Text)
seriesChannelNameL f Series{..} = (\seriesChannelName -> Series { seriesChannelName, ..} ) <$> f seriesChannelName
{-# INLINE seriesChannelNameL #-}

-- | 'seriesChannelId' Lens
seriesChannelIdL :: Lens_' Series (Maybe Text)
seriesChannelIdL f Series{..} = (\seriesChannelId -> Series { seriesChannelId, ..} ) <$> f seriesChannelId
{-# INLINE seriesChannelIdL #-}

-- | 'seriesAliasId' Lens
seriesAliasIdL :: Lens_' Series (Maybe Text)
seriesAliasIdL f Series{..} = (\seriesAliasId -> Series { seriesAliasId, ..} ) <$> f seriesAliasId
{-# INLINE seriesAliasIdL #-}

-- | 'seriesLabel' Lens
seriesLabelL :: Lens_' Series (Text)
seriesLabelL f Series{..} = (\seriesLabel -> Series { seriesLabel, ..} ) <$> f seriesLabel
{-# INLINE seriesLabelL #-}



-- * SeriesDefinition

-- | 'seriesDefinitionLabel' Lens
seriesDefinitionLabelL :: Lens_' SeriesDefinition (Text)
seriesDefinitionLabelL f SeriesDefinition{..} = (\seriesDefinitionLabel -> SeriesDefinition { seriesDefinitionLabel, ..} ) <$> f seriesDefinitionLabel
{-# INLINE seriesDefinitionLabelL #-}

-- | 'seriesDefinitionChannelName' Lens
seriesDefinitionChannelNameL :: Lens_' SeriesDefinition (Maybe Text)
seriesDefinitionChannelNameL f SeriesDefinition{..} = (\seriesDefinitionChannelName -> SeriesDefinition { seriesDefinitionChannelName, ..} ) <$> f seriesDefinitionChannelName
{-# INLINE seriesDefinitionChannelNameL #-}

-- | 'seriesDefinitionAliasId' Lens
seriesDefinitionAliasIdL :: Lens_' SeriesDefinition (Maybe Text)
seriesDefinitionAliasIdL f SeriesDefinition{..} = (\seriesDefinitionAliasId -> SeriesDefinition { seriesDefinitionAliasId, ..} ) <$> f seriesDefinitionAliasId
{-# INLINE seriesDefinitionAliasIdL #-}

-- | 'seriesDefinitionSeriesType' Lens
seriesDefinitionSeriesTypeL :: Lens_' SeriesDefinition (SeriesType)
seriesDefinitionSeriesTypeL f SeriesDefinition{..} = (\seriesDefinitionSeriesType -> SeriesDefinition { seriesDefinitionSeriesType, ..} ) <$> f seriesDefinitionSeriesType
{-# INLINE seriesDefinitionSeriesTypeL #-}



-- * SeriesType



-- * SessionDTO

-- | 'sessionDTOSessionId' Lens
sessionDTOSessionIdL :: Lens_' SessionDTO (Text)
sessionDTOSessionIdL f SessionDTO{..} = (\sessionDTOSessionId -> SessionDTO { sessionDTOSessionId, ..} ) <$> f sessionDTOSessionId
{-# INLINE sessionDTOSessionIdL #-}



-- * StateTransitions

-- | 'stateTransitionsRunning' Lens
stateTransitionsRunningL :: Lens_' StateTransitions (Maybe DateTime)
stateTransitionsRunningL f StateTransitions{..} = (\stateTransitionsRunning -> StateTransitions { stateTransitionsRunning, ..} ) <$> f stateTransitionsRunning
{-# INLINE stateTransitionsRunningL #-}

-- | 'stateTransitionsSucceeded' Lens
stateTransitionsSucceededL :: Lens_' StateTransitions (Maybe DateTime)
stateTransitionsSucceededL f StateTransitions{..} = (\stateTransitionsSucceeded -> StateTransitions { stateTransitionsSucceeded, ..} ) <$> f stateTransitionsSucceeded
{-# INLINE stateTransitionsSucceededL #-}

-- | 'stateTransitionsFailed' Lens
stateTransitionsFailedL :: Lens_' StateTransitions (Maybe DateTime)
stateTransitionsFailedL f StateTransitions{..} = (\stateTransitionsFailed -> StateTransitions { stateTransitionsFailed, ..} ) <$> f stateTransitionsFailed
{-# INLINE stateTransitionsFailedL #-}

-- | 'stateTransitionsAborted' Lens
stateTransitionsAbortedL :: Lens_' StateTransitions (Maybe DateTime)
stateTransitionsAbortedL f StateTransitions{..} = (\stateTransitionsAborted -> StateTransitions { stateTransitionsAborted, ..} ) <$> f stateTransitionsAborted
{-# INLINE stateTransitionsAbortedL #-}



-- * StorageUsage

-- | 'storageUsageUsage' Lens
storageUsageUsageL :: Lens_' StorageUsage (Integer)
storageUsageUsageL f StorageUsage{..} = (\storageUsageUsage -> StorageUsage { storageUsageUsage, ..} ) <$> f storageUsageUsage
{-# INLINE storageUsageUsageL #-}



-- * SubscriptionCancelInfoDTO

-- | 'subscriptionCancelInfoDTOReasons' Lens
subscriptionCancelInfoDTOReasonsL :: Lens_' SubscriptionCancelInfoDTO ([Text])
subscriptionCancelInfoDTOReasonsL f SubscriptionCancelInfoDTO{..} = (\subscriptionCancelInfoDTOReasons -> SubscriptionCancelInfoDTO { subscriptionCancelInfoDTOReasons, ..} ) <$> f subscriptionCancelInfoDTOReasons
{-# INLINE subscriptionCancelInfoDTOReasonsL #-}

-- | 'subscriptionCancelInfoDTODescription' Lens
subscriptionCancelInfoDTODescriptionL :: Lens_' SubscriptionCancelInfoDTO (Maybe Text)
subscriptionCancelInfoDTODescriptionL f SubscriptionCancelInfoDTO{..} = (\subscriptionCancelInfoDTODescription -> SubscriptionCancelInfoDTO { subscriptionCancelInfoDTODescription, ..} ) <$> f subscriptionCancelInfoDTODescription
{-# INLINE subscriptionCancelInfoDTODescriptionL #-}



-- * SystemMetric

-- | 'systemMetricSeries' Lens
systemMetricSeriesL :: Lens_' SystemMetric ([Text])
systemMetricSeriesL f SystemMetric{..} = (\systemMetricSeries -> SystemMetric { systemMetricSeries, ..} ) <$> f systemMetricSeries
{-# INLINE systemMetricSeriesL #-}

-- | 'systemMetricName' Lens
systemMetricNameL :: Lens_' SystemMetric (Text)
systemMetricNameL f SystemMetric{..} = (\systemMetricName -> SystemMetric { systemMetricName, ..} ) <$> f systemMetricName
{-# INLINE systemMetricNameL #-}

-- | 'systemMetricMin' Lens
systemMetricMinL :: Lens_' SystemMetric (Maybe Double)
systemMetricMinL f SystemMetric{..} = (\systemMetricMin -> SystemMetric { systemMetricMin, ..} ) <$> f systemMetricMin
{-# INLINE systemMetricMinL #-}

-- | 'systemMetricMax' Lens
systemMetricMaxL :: Lens_' SystemMetric (Maybe Double)
systemMetricMaxL f SystemMetric{..} = (\systemMetricMax -> SystemMetric { systemMetricMax, ..} ) <$> f systemMetricMax
{-# INLINE systemMetricMaxL #-}

-- | 'systemMetricUnit' Lens
systemMetricUnitL :: Lens_' SystemMetric (Maybe Text)
systemMetricUnitL f SystemMetric{..} = (\systemMetricUnit -> SystemMetric { systemMetricUnit, ..} ) <$> f systemMetricUnit
{-# INLINE systemMetricUnitL #-}

-- | 'systemMetricDescription' Lens
systemMetricDescriptionL :: Lens_' SystemMetric (Text)
systemMetricDescriptionL f SystemMetric{..} = (\systemMetricDescription -> SystemMetric { systemMetricDescription, ..} ) <$> f systemMetricDescription
{-# INLINE systemMetricDescriptionL #-}

-- | 'systemMetricResourceType' Lens
systemMetricResourceTypeL :: Lens_' SystemMetric (SystemMetricResourceType)
systemMetricResourceTypeL f SystemMetric{..} = (\systemMetricResourceType -> SystemMetric { systemMetricResourceType, ..} ) <$> f systemMetricResourceType
{-# INLINE systemMetricResourceTypeL #-}

-- | 'systemMetricExperimentId' Lens
systemMetricExperimentIdL :: Lens_' SystemMetric (Text)
systemMetricExperimentIdL f SystemMetric{..} = (\systemMetricExperimentId -> SystemMetric { systemMetricExperimentId, ..} ) <$> f systemMetricExperimentId
{-# INLINE systemMetricExperimentIdL #-}

-- | 'systemMetricId' Lens
systemMetricIdL :: Lens_' SystemMetric (Text)
systemMetricIdL f SystemMetric{..} = (\systemMetricId -> SystemMetric { systemMetricId, ..} ) <$> f systemMetricId
{-# INLINE systemMetricIdL #-}



-- * SystemMetricParams

-- | 'systemMetricParamsSeries' Lens
systemMetricParamsSeriesL :: Lens_' SystemMetricParams ([Text])
systemMetricParamsSeriesL f SystemMetricParams{..} = (\systemMetricParamsSeries -> SystemMetricParams { systemMetricParamsSeries, ..} ) <$> f systemMetricParamsSeries
{-# INLINE systemMetricParamsSeriesL #-}

-- | 'systemMetricParamsName' Lens
systemMetricParamsNameL :: Lens_' SystemMetricParams (Text)
systemMetricParamsNameL f SystemMetricParams{..} = (\systemMetricParamsName -> SystemMetricParams { systemMetricParamsName, ..} ) <$> f systemMetricParamsName
{-# INLINE systemMetricParamsNameL #-}

-- | 'systemMetricParamsMin' Lens
systemMetricParamsMinL :: Lens_' SystemMetricParams (Maybe Double)
systemMetricParamsMinL f SystemMetricParams{..} = (\systemMetricParamsMin -> SystemMetricParams { systemMetricParamsMin, ..} ) <$> f systemMetricParamsMin
{-# INLINE systemMetricParamsMinL #-}

-- | 'systemMetricParamsMax' Lens
systemMetricParamsMaxL :: Lens_' SystemMetricParams (Maybe Double)
systemMetricParamsMaxL f SystemMetricParams{..} = (\systemMetricParamsMax -> SystemMetricParams { systemMetricParamsMax, ..} ) <$> f systemMetricParamsMax
{-# INLINE systemMetricParamsMaxL #-}

-- | 'systemMetricParamsUnit' Lens
systemMetricParamsUnitL :: Lens_' SystemMetricParams (Maybe Text)
systemMetricParamsUnitL f SystemMetricParams{..} = (\systemMetricParamsUnit -> SystemMetricParams { systemMetricParamsUnit, ..} ) <$> f systemMetricParamsUnit
{-# INLINE systemMetricParamsUnitL #-}

-- | 'systemMetricParamsDescription' Lens
systemMetricParamsDescriptionL :: Lens_' SystemMetricParams (Text)
systemMetricParamsDescriptionL f SystemMetricParams{..} = (\systemMetricParamsDescription -> SystemMetricParams { systemMetricParamsDescription, ..} ) <$> f systemMetricParamsDescription
{-# INLINE systemMetricParamsDescriptionL #-}

-- | 'systemMetricParamsResourceType' Lens
systemMetricParamsResourceTypeL :: Lens_' SystemMetricParams (SystemMetricResourceType)
systemMetricParamsResourceTypeL f SystemMetricParams{..} = (\systemMetricParamsResourceType -> SystemMetricParams { systemMetricParamsResourceType, ..} ) <$> f systemMetricParamsResourceType
{-# INLINE systemMetricParamsResourceTypeL #-}



-- * SystemMetricPoint

-- | 'systemMetricPointTimestampMillis' Lens
systemMetricPointTimestampMillisL :: Lens_' SystemMetricPoint (Integer)
systemMetricPointTimestampMillisL f SystemMetricPoint{..} = (\systemMetricPointTimestampMillis -> SystemMetricPoint { systemMetricPointTimestampMillis, ..} ) <$> f systemMetricPointTimestampMillis
{-# INLINE systemMetricPointTimestampMillisL #-}

-- | 'systemMetricPointX' Lens
systemMetricPointXL :: Lens_' SystemMetricPoint (Integer)
systemMetricPointXL f SystemMetricPoint{..} = (\systemMetricPointX -> SystemMetricPoint { systemMetricPointX, ..} ) <$> f systemMetricPointX
{-# INLINE systemMetricPointXL #-}

-- | 'systemMetricPointY' Lens
systemMetricPointYL :: Lens_' SystemMetricPoint (Double)
systemMetricPointYL f SystemMetricPoint{..} = (\systemMetricPointY -> SystemMetricPoint { systemMetricPointY, ..} ) <$> f systemMetricPointY
{-# INLINE systemMetricPointYL #-}



-- * SystemMetricResourceType



-- * SystemMetricValues

-- | 'systemMetricValuesMetricId' Lens
systemMetricValuesMetricIdL :: Lens_' SystemMetricValues (Text)
systemMetricValuesMetricIdL f SystemMetricValues{..} = (\systemMetricValuesMetricId -> SystemMetricValues { systemMetricValuesMetricId, ..} ) <$> f systemMetricValuesMetricId
{-# INLINE systemMetricValuesMetricIdL #-}

-- | 'systemMetricValuesSeriesName' Lens
systemMetricValuesSeriesNameL :: Lens_' SystemMetricValues (Text)
systemMetricValuesSeriesNameL f SystemMetricValues{..} = (\systemMetricValuesSeriesName -> SystemMetricValues { systemMetricValuesSeriesName, ..} ) <$> f systemMetricValuesSeriesName
{-# INLINE systemMetricValuesSeriesNameL #-}

-- | 'systemMetricValuesLevel' Lens
systemMetricValuesLevelL :: Lens_' SystemMetricValues (Maybe Int)
systemMetricValuesLevelL f SystemMetricValues{..} = (\systemMetricValuesLevel -> SystemMetricValues { systemMetricValuesLevel, ..} ) <$> f systemMetricValuesLevel
{-# INLINE systemMetricValuesLevelL #-}

-- | 'systemMetricValuesValues' Lens
systemMetricValuesValuesL :: Lens_' SystemMetricValues ([SystemMetricPoint])
systemMetricValuesValuesL f SystemMetricValues{..} = (\systemMetricValuesValues -> SystemMetricValues { systemMetricValuesValues, ..} ) <$> f systemMetricValuesValues
{-# INLINE systemMetricValuesValuesL #-}



-- * UUID

-- | 'uUIDMostSigBits' Lens
uUIDMostSigBitsL :: Lens_' UUID (Integer)
uUIDMostSigBitsL f UUID{..} = (\uUIDMostSigBits -> UUID { uUIDMostSigBits, ..} ) <$> f uUIDMostSigBits
{-# INLINE uUIDMostSigBitsL #-}

-- | 'uUIDLeastSigBits' Lens
uUIDLeastSigBitsL :: Lens_' UUID (Integer)
uUIDLeastSigBitsL f UUID{..} = (\uUIDLeastSigBits -> UUID { uUIDLeastSigBits, ..} ) <$> f uUIDLeastSigBits
{-# INLINE uUIDLeastSigBitsL #-}



-- * UpdateTagsParams

-- | 'updateTagsParamsExperimentIds' Lens
updateTagsParamsExperimentIdsL :: Lens_' UpdateTagsParams ([Text])
updateTagsParamsExperimentIdsL f UpdateTagsParams{..} = (\updateTagsParamsExperimentIds -> UpdateTagsParams { updateTagsParamsExperimentIds, ..} ) <$> f updateTagsParamsExperimentIds
{-# INLINE updateTagsParamsExperimentIdsL #-}

-- | 'updateTagsParamsTagsToAdd' Lens
updateTagsParamsTagsToAddL :: Lens_' UpdateTagsParams ([Text])
updateTagsParamsTagsToAddL f UpdateTagsParams{..} = (\updateTagsParamsTagsToAdd -> UpdateTagsParams { updateTagsParamsTagsToAdd, ..} ) <$> f updateTagsParamsTagsToAdd
{-# INLINE updateTagsParamsTagsToAddL #-}

-- | 'updateTagsParamsTagsToDelete' Lens
updateTagsParamsTagsToDeleteL :: Lens_' UpdateTagsParams ([Text])
updateTagsParamsTagsToDeleteL f UpdateTagsParams{..} = (\updateTagsParamsTagsToDelete -> UpdateTagsParams { updateTagsParamsTagsToDelete, ..} ) <$> f updateTagsParamsTagsToDelete
{-# INLINE updateTagsParamsTagsToDeleteL #-}



-- * UserListDTO

-- | 'userListDTOEntries' Lens
userListDTOEntriesL :: Lens_' UserListDTO ([UserListItemDTO])
userListDTOEntriesL f UserListDTO{..} = (\userListDTOEntries -> UserListDTO { userListDTOEntries, ..} ) <$> f userListDTOEntries
{-# INLINE userListDTOEntriesL #-}

-- | 'userListDTOMatchingItemCount' Lens
userListDTOMatchingItemCountL :: Lens_' UserListDTO (Int)
userListDTOMatchingItemCountL f UserListDTO{..} = (\userListDTOMatchingItemCount -> UserListDTO { userListDTOMatchingItemCount, ..} ) <$> f userListDTOMatchingItemCount
{-# INLINE userListDTOMatchingItemCountL #-}

-- | 'userListDTOTotalItemCount' Lens
userListDTOTotalItemCountL :: Lens_' UserListDTO (Int)
userListDTOTotalItemCountL f UserListDTO{..} = (\userListDTOTotalItemCount -> UserListDTO { userListDTOTotalItemCount, ..} ) <$> f userListDTOTotalItemCount
{-# INLINE userListDTOTotalItemCountL #-}



-- * UserListItemDTO

-- | 'userListItemDTOAvatarSource' Lens
userListItemDTOAvatarSourceL :: Lens_' UserListItemDTO (AvatarSourceEnum)
userListItemDTOAvatarSourceL f UserListItemDTO{..} = (\userListItemDTOAvatarSource -> UserListItemDTO { userListItemDTOAvatarSource, ..} ) <$> f userListItemDTOAvatarSource
{-# INLINE userListItemDTOAvatarSourceL #-}

-- | 'userListItemDTOLastName' Lens
userListItemDTOLastNameL :: Lens_' UserListItemDTO (Text)
userListItemDTOLastNameL f UserListItemDTO{..} = (\userListItemDTOLastName -> UserListItemDTO { userListItemDTOLastName, ..} ) <$> f userListItemDTOLastName
{-# INLINE userListItemDTOLastNameL #-}

-- | 'userListItemDTOFirstName' Lens
userListItemDTOFirstNameL :: Lens_' UserListItemDTO (Text)
userListItemDTOFirstNameL f UserListItemDTO{..} = (\userListItemDTOFirstName -> UserListItemDTO { userListItemDTOFirstName, ..} ) <$> f userListItemDTOFirstName
{-# INLINE userListItemDTOFirstNameL #-}

-- | 'userListItemDTOUsername' Lens
userListItemDTOUsernameL :: Lens_' UserListItemDTO (Text)
userListItemDTOUsernameL f UserListItemDTO{..} = (\userListItemDTOUsername -> UserListItemDTO { userListItemDTOUsername, ..} ) <$> f userListItemDTOUsername
{-# INLINE userListItemDTOUsernameL #-}

-- | 'userListItemDTOAvatarUrl' Lens
userListItemDTOAvatarUrlL :: Lens_' UserListItemDTO (Text)
userListItemDTOAvatarUrlL f UserListItemDTO{..} = (\userListItemDTOAvatarUrl -> UserListItemDTO { userListItemDTOAvatarUrl, ..} ) <$> f userListItemDTOAvatarUrl
{-# INLINE userListItemDTOAvatarUrlL #-}



-- * UserPricingStatusDTO

-- | 'userPricingStatusDTOCanCreateTeamFree' Lens
userPricingStatusDTOCanCreateTeamFreeL :: Lens_' UserPricingStatusDTO (Bool)
userPricingStatusDTOCanCreateTeamFreeL f UserPricingStatusDTO{..} = (\userPricingStatusDTOCanCreateTeamFree -> UserPricingStatusDTO { userPricingStatusDTOCanCreateTeamFree, ..} ) <$> f userPricingStatusDTOCanCreateTeamFree
{-# INLINE userPricingStatusDTOCanCreateTeamFreeL #-}

-- | 'userPricingStatusDTOAnyTeamFree' Lens
userPricingStatusDTOAnyTeamFreeL :: Lens_' UserPricingStatusDTO (Maybe OrganizationWithRoleDTO)
userPricingStatusDTOAnyTeamFreeL f UserPricingStatusDTO{..} = (\userPricingStatusDTOAnyTeamFree -> UserPricingStatusDTO { userPricingStatusDTOAnyTeamFree, ..} ) <$> f userPricingStatusDTOAnyTeamFree
{-# INLINE userPricingStatusDTOAnyTeamFreeL #-}



-- * UserProfileDTO

-- | 'userProfileDTOUsernameHash' Lens
userProfileDTOUsernameHashL :: Lens_' UserProfileDTO (Text)
userProfileDTOUsernameHashL f UserProfileDTO{..} = (\userProfileDTOUsernameHash -> UserProfileDTO { userProfileDTOUsernameHash, ..} ) <$> f userProfileDTOUsernameHash
{-# INLINE userProfileDTOUsernameHashL #-}

-- | 'userProfileDTOEmail' Lens
userProfileDTOEmailL :: Lens_' UserProfileDTO (Text)
userProfileDTOEmailL f UserProfileDTO{..} = (\userProfileDTOEmail -> UserProfileDTO { userProfileDTOEmail, ..} ) <$> f userProfileDTOEmail
{-# INLINE userProfileDTOEmailL #-}

-- | 'userProfileDTOHasLoggedToCli' Lens
userProfileDTOHasLoggedToCliL :: Lens_' UserProfileDTO (Bool)
userProfileDTOHasLoggedToCliL f UserProfileDTO{..} = (\userProfileDTOHasLoggedToCli -> UserProfileDTO { userProfileDTOHasLoggedToCli, ..} ) <$> f userProfileDTOHasLoggedToCli
{-# INLINE userProfileDTOHasLoggedToCliL #-}

-- | 'userProfileDTOAvatarSource' Lens
userProfileDTOAvatarSourceL :: Lens_' UserProfileDTO (AvatarSourceEnum)
userProfileDTOAvatarSourceL f UserProfileDTO{..} = (\userProfileDTOAvatarSource -> UserProfileDTO { userProfileDTOAvatarSource, ..} ) <$> f userProfileDTOAvatarSource
{-# INLINE userProfileDTOAvatarSourceL #-}

-- | 'userProfileDTOFirstName' Lens
userProfileDTOFirstNameL :: Lens_' UserProfileDTO (Text)
userProfileDTOFirstNameL f UserProfileDTO{..} = (\userProfileDTOFirstName -> UserProfileDTO { userProfileDTOFirstName, ..} ) <$> f userProfileDTOFirstName
{-# INLINE userProfileDTOFirstNameL #-}

-- | 'userProfileDTOShortInfo' Lens
userProfileDTOShortInfoL :: Lens_' UserProfileDTO (Text)
userProfileDTOShortInfoL f UserProfileDTO{..} = (\userProfileDTOShortInfo -> UserProfileDTO { userProfileDTOShortInfo, ..} ) <$> f userProfileDTOShortInfo
{-# INLINE userProfileDTOShortInfoL #-}

-- | 'userProfileDTOCreated' Lens
userProfileDTOCreatedL :: Lens_' UserProfileDTO (DateTime)
userProfileDTOCreatedL f UserProfileDTO{..} = (\userProfileDTOCreated -> UserProfileDTO { userProfileDTOCreated, ..} ) <$> f userProfileDTOCreated
{-# INLINE userProfileDTOCreatedL #-}

-- | 'userProfileDTOBiography' Lens
userProfileDTOBiographyL :: Lens_' UserProfileDTO (Text)
userProfileDTOBiographyL f UserProfileDTO{..} = (\userProfileDTOBiography -> UserProfileDTO { userProfileDTOBiography, ..} ) <$> f userProfileDTOBiography
{-# INLINE userProfileDTOBiographyL #-}

-- | 'userProfileDTOHasCreatedExperiments' Lens
userProfileDTOHasCreatedExperimentsL :: Lens_' UserProfileDTO (Bool)
userProfileDTOHasCreatedExperimentsL f UserProfileDTO{..} = (\userProfileDTOHasCreatedExperiments -> UserProfileDTO { userProfileDTOHasCreatedExperiments, ..} ) <$> f userProfileDTOHasCreatedExperiments
{-# INLINE userProfileDTOHasCreatedExperimentsL #-}

-- | 'userProfileDTOUsername' Lens
userProfileDTOUsernameL :: Lens_' UserProfileDTO (Text)
userProfileDTOUsernameL f UserProfileDTO{..} = (\userProfileDTOUsername -> UserProfileDTO { userProfileDTOUsername, ..} ) <$> f userProfileDTOUsername
{-# INLINE userProfileDTOUsernameL #-}

-- | 'userProfileDTOAvatarUrl' Lens
userProfileDTOAvatarUrlL :: Lens_' UserProfileDTO (Text)
userProfileDTOAvatarUrlL f UserProfileDTO{..} = (\userProfileDTOAvatarUrl -> UserProfileDTO { userProfileDTOAvatarUrl, ..} ) <$> f userProfileDTOAvatarUrl
{-# INLINE userProfileDTOAvatarUrlL #-}

-- | 'userProfileDTOLastName' Lens
userProfileDTOLastNameL :: Lens_' UserProfileDTO (Text)
userProfileDTOLastNameL f UserProfileDTO{..} = (\userProfileDTOLastName -> UserProfileDTO { userProfileDTOLastName, ..} ) <$> f userProfileDTOLastName
{-# INLINE userProfileDTOLastNameL #-}

-- | 'userProfileDTOLinks' Lens
userProfileDTOLinksL :: Lens_' UserProfileDTO (UserProfileLinksDTO)
userProfileDTOLinksL f UserProfileDTO{..} = (\userProfileDTOLinks -> UserProfileDTO { userProfileDTOLinks, ..} ) <$> f userProfileDTOLinks
{-# INLINE userProfileDTOLinksL #-}



-- * UserProfileLinkDTO

-- | 'userProfileLinkDTOLinkType' Lens
userProfileLinkDTOLinkTypeL :: Lens_' UserProfileLinkDTO (LinkTypeDTO)
userProfileLinkDTOLinkTypeL f UserProfileLinkDTO{..} = (\userProfileLinkDTOLinkType -> UserProfileLinkDTO { userProfileLinkDTOLinkType, ..} ) <$> f userProfileLinkDTOLinkType
{-# INLINE userProfileLinkDTOLinkTypeL #-}

-- | 'userProfileLinkDTOUrl' Lens
userProfileLinkDTOUrlL :: Lens_' UserProfileLinkDTO (Text)
userProfileLinkDTOUrlL f UserProfileLinkDTO{..} = (\userProfileLinkDTOUrl -> UserProfileLinkDTO { userProfileLinkDTOUrl, ..} ) <$> f userProfileLinkDTOUrl
{-# INLINE userProfileLinkDTOUrlL #-}



-- * UserProfileLinksDTO

-- | 'userProfileLinksDTOGithub' Lens
userProfileLinksDTOGithubL :: Lens_' UserProfileLinksDTO (Maybe Text)
userProfileLinksDTOGithubL f UserProfileLinksDTO{..} = (\userProfileLinksDTOGithub -> UserProfileLinksDTO { userProfileLinksDTOGithub, ..} ) <$> f userProfileLinksDTOGithub
{-# INLINE userProfileLinksDTOGithubL #-}

-- | 'userProfileLinksDTOLinkedin' Lens
userProfileLinksDTOLinkedinL :: Lens_' UserProfileLinksDTO (Maybe Text)
userProfileLinksDTOLinkedinL f UserProfileLinksDTO{..} = (\userProfileLinksDTOLinkedin -> UserProfileLinksDTO { userProfileLinksDTOLinkedin, ..} ) <$> f userProfileLinksDTOLinkedin
{-# INLINE userProfileLinksDTOLinkedinL #-}

-- | 'userProfileLinksDTOOthers' Lens
userProfileLinksDTOOthersL :: Lens_' UserProfileLinksDTO ([Text])
userProfileLinksDTOOthersL f UserProfileLinksDTO{..} = (\userProfileLinksDTOOthers -> UserProfileLinksDTO { userProfileLinksDTOOthers, ..} ) <$> f userProfileLinksDTOOthers
{-# INLINE userProfileLinksDTOOthersL #-}

-- | 'userProfileLinksDTOKaggle' Lens
userProfileLinksDTOKaggleL :: Lens_' UserProfileLinksDTO (Maybe Text)
userProfileLinksDTOKaggleL f UserProfileLinksDTO{..} = (\userProfileLinksDTOKaggle -> UserProfileLinksDTO { userProfileLinksDTOKaggle, ..} ) <$> f userProfileLinksDTOKaggle
{-# INLINE userProfileLinksDTOKaggleL #-}

-- | 'userProfileLinksDTOTwitter' Lens
userProfileLinksDTOTwitterL :: Lens_' UserProfileLinksDTO (Maybe Text)
userProfileLinksDTOTwitterL f UserProfileLinksDTO{..} = (\userProfileLinksDTOTwitter -> UserProfileLinksDTO { userProfileLinksDTOTwitter, ..} ) <$> f userProfileLinksDTOTwitter
{-# INLINE userProfileLinksDTOTwitterL #-}



-- * UserProfileUpdateDTO

-- | 'userProfileUpdateDTOBiography' Lens
userProfileUpdateDTOBiographyL :: Lens_' UserProfileUpdateDTO (Maybe Text)
userProfileUpdateDTOBiographyL f UserProfileUpdateDTO{..} = (\userProfileUpdateDTOBiography -> UserProfileUpdateDTO { userProfileUpdateDTOBiography, ..} ) <$> f userProfileUpdateDTOBiography
{-# INLINE userProfileUpdateDTOBiographyL #-}

-- | 'userProfileUpdateDTOHasLoggedToCli' Lens
userProfileUpdateDTOHasLoggedToCliL :: Lens_' UserProfileUpdateDTO (Maybe Bool)
userProfileUpdateDTOHasLoggedToCliL f UserProfileUpdateDTO{..} = (\userProfileUpdateDTOHasLoggedToCli -> UserProfileUpdateDTO { userProfileUpdateDTOHasLoggedToCli, ..} ) <$> f userProfileUpdateDTOHasLoggedToCli
{-# INLINE userProfileUpdateDTOHasLoggedToCliL #-}

-- | 'userProfileUpdateDTOLastName' Lens
userProfileUpdateDTOLastNameL :: Lens_' UserProfileUpdateDTO (Maybe Text)
userProfileUpdateDTOLastNameL f UserProfileUpdateDTO{..} = (\userProfileUpdateDTOLastName -> UserProfileUpdateDTO { userProfileUpdateDTOLastName, ..} ) <$> f userProfileUpdateDTOLastName
{-# INLINE userProfileUpdateDTOLastNameL #-}

-- | 'userProfileUpdateDTOFirstName' Lens
userProfileUpdateDTOFirstNameL :: Lens_' UserProfileUpdateDTO (Maybe Text)
userProfileUpdateDTOFirstNameL f UserProfileUpdateDTO{..} = (\userProfileUpdateDTOFirstName -> UserProfileUpdateDTO { userProfileUpdateDTOFirstName, ..} ) <$> f userProfileUpdateDTOFirstName
{-# INLINE userProfileUpdateDTOFirstNameL #-}

-- | 'userProfileUpdateDTOShortInfo' Lens
userProfileUpdateDTOShortInfoL :: Lens_' UserProfileUpdateDTO (Maybe Text)
userProfileUpdateDTOShortInfoL f UserProfileUpdateDTO{..} = (\userProfileUpdateDTOShortInfo -> UserProfileUpdateDTO { userProfileUpdateDTOShortInfo, ..} ) <$> f userProfileUpdateDTOShortInfo
{-# INLINE userProfileUpdateDTOShortInfoL #-}



-- * UsernameValidationStatusDTO

-- | 'usernameValidationStatusDTOStatus' Lens
usernameValidationStatusDTOStatusL :: Lens_' UsernameValidationStatusDTO (UsernameValidationStatusEnumDTO)
usernameValidationStatusDTOStatusL f UsernameValidationStatusDTO{..} = (\usernameValidationStatusDTOStatus -> UsernameValidationStatusDTO { usernameValidationStatusDTOStatus, ..} ) <$> f usernameValidationStatusDTOStatus
{-# INLINE usernameValidationStatusDTOStatusL #-}



-- * UsernameValidationStatusEnumDTO



-- * Version

-- | 'versionVersion' Lens
versionVersionL :: Lens_' Version (Text)
versionVersionL f Version{..} = (\versionVersion -> Version { versionVersion, ..} ) <$> f versionVersion
{-# INLINE versionVersionL #-}



-- * WorkspaceConfig

-- | 'workspaceConfigRealm' Lens
workspaceConfigRealmL :: Lens_' WorkspaceConfig (Text)
workspaceConfigRealmL f WorkspaceConfig{..} = (\workspaceConfigRealm -> WorkspaceConfig { workspaceConfigRealm, ..} ) <$> f workspaceConfigRealm
{-# INLINE workspaceConfigRealmL #-}

-- | 'workspaceConfigIdpHint' Lens
workspaceConfigIdpHintL :: Lens_' WorkspaceConfig (Text)
workspaceConfigIdpHintL f WorkspaceConfig{..} = (\workspaceConfigIdpHint -> WorkspaceConfig { workspaceConfigIdpHint, ..} ) <$> f workspaceConfigIdpHint
{-# INLINE workspaceConfigIdpHintL #-}



-- * Y

-- | 'yNumericValue' Lens
yNumericValueL :: Lens_' Y (Maybe Double)
yNumericValueL f Y{..} = (\yNumericValue -> Y { yNumericValue, ..} ) <$> f yNumericValue
{-# INLINE yNumericValueL #-}

-- | 'yTextValue' Lens
yTextValueL :: Lens_' Y (Maybe Text)
yTextValueL f Y{..} = (\yTextValue -> Y { yTextValue, ..} ) <$> f yTextValue
{-# INLINE yTextValueL #-}

-- | 'yImageValue' Lens
yImageValueL :: Lens_' Y (Maybe OutputImageDTO)
yImageValueL f Y{..} = (\yImageValue -> Y { yImageValue, ..} ) <$> f yImageValue
{-# INLINE yImageValueL #-}

-- | 'yInputImageValue' Lens
yInputImageValueL :: Lens_' Y (Maybe InputImageDTO)
yInputImageValueL f Y{..} = (\yInputImageValue -> Y { yInputImageValue, ..} ) <$> f yInputImageValue
{-# INLINE yInputImageValueL #-}


