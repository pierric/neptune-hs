openapi: 3.0.1
info:
  title: Neptune Backend API
  version: "2.8"
servers:
- url: /
paths:
  /api/backend/v1/projects:
    delete:
      deprecated: false
      operationId: deleteProject
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    get:
      deprecated: false
      operationId: listProjects
      parameters:
      - explode: true
        in: query
        name: organizationIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: projectKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: visibility
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: viewedUsername
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userRelation
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: orgRelation
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectListDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: createProject
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewProjectDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectWithRoleDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: projectToCreate
    put:
      deprecated: false
      operationId: updateProject
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProjectUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectWithRoleDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: projectToUpdate
  /api/backend/v1/projects/get:
    get:
      deprecated: false
      operationId: getProject
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectWithRoleDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects/key:
    get:
      deprecated: false
      operationId: generateProjectKey
      parameters:
      - explode: true
        in: query
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: projectName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectKeyDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects/leave:
    post:
      deprecated: false
      operationId: leaveProject
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects/members:
    get:
      deprecated: false
      operationId: listProjectsMembers
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: includeInvitations
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMembersDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: addProjectMember
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewProjectMemberDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectMemberDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: member
  /api/backend/v1/projects/members/{userId}:
    delete:
      deprecated: false
      operationId: deleteProjectMember
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    patch:
      deprecated: false
      operationId: updateProjectMember
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProjectMemberUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectMemberDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: member
  /api/backend/v1/projects/membersOf:
    get:
      deprecated: false
      operationId: listProjectMembers
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ProjectMemberDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects/metadata:
    get:
      deprecated: false
      operationId: getProjectMetadata
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectMetadataDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects/updateLastViewed:
    post:
      deprecated: false
      operationId: updateLastViewed
      parameters:
      - explode: true
        in: query
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects/users:
    get:
      deprecated: false
      operationId: listMembers
      parameters:
      - explode: true
        in: query
        name: organizationIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: projectIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: usernamePrefix
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/UserListDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/userProfile:
    get:
      deprecated: false
      operationId: getUserProfile
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserProfileDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    patch:
      deprecated: false
      operationId: updateUserProfile
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserProfileUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserProfileDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: userProfileUpdate
  /api/backend/v1/userProfile/avatar:
    get:
      deprecated: false
      operationId: getUserProfileAvatar
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateUserProfileAvatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                avatarFile:
                  format: binary
                  type: string
              required:
              - avatarFile
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LinkDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/userProfile/links:
    delete:
      deprecated: false
      operationId: deleteUserProfileLink
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LinkDTO'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: link
    post:
      deprecated: false
      operationId: addUserProfileLink
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserProfileLinkDTO'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: link
  /api/backend/v1/userProfile/password:
    put:
      deprecated: false
      operationId: changePassword
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PasswordChangeDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PasswordChangeDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: passwordToUpdate
  /api/leaderboard/v1/channels/user:
    post:
      deprecated: false
      operationId: createChannel
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChannelParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: channelToCreate
  /api/leaderboard/v1/channels/values:
    post:
      deprecated: false
      operationId: postChannelValues
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/InputChannelValues'
              type: array
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BatchChannelValueErrorDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: channelsValues
  /api/leaderboard/v1/channels/{channelId}/csv:
    get:
      deprecated: false
      operationId: getChannelValuesCSV
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: gzipped
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/channels/{channelId}/values:
    get:
      deprecated: false
      operationId: getChannelValues
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitedChannelValuesDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/channels/{id}/values:
    delete:
      deprecated: false
      operationId: resetChannel
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/experiments:
    get:
      deprecated: false
      operationId: getExperiment
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Experiment'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    patch:
      deprecated: false
      operationId: updateExperiment
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EditExperimentParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Experiment'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: editExperimentParams
    post:
      deprecated: false
      operationId: createExperiment
      parameters:
      - explode: false
        in: header
        name: X-Neptune-CliVersion
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExperimentCreationParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Experiment'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: experimentCreationParams
  /api/leaderboard/v1/experiments-attributes-names:
    get:
      deprecated: false
      operationId: getExperimentsAttributesNames
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExperimentsAttributesNamesDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/experiments/abort:
    post:
      deprecated: false
      operationId: abortExperiments
      parameters:
      - explode: true
        in: query
        name: markOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              items:
                format: uuid
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BatchExperimentUpdateResult'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: experimentIds
  /api/leaderboard/v1/experiments/markCompleted:
    post:
      deprecated: false
      operationId: markExperimentCompleted
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CompletedExperimentParams'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: completedExperimentParams
  /api/leaderboard/v1/experiments/ping:
    post:
      deprecated: false
      operationId: pingExperiment
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/experiments/tags:
    get:
      deprecated: false
      operationId: tagsGet
      parameters:
      - explode: true
        in: query
        name: projectIdentifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateTags
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateTagsParams'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: updateTagsParams
  /api/leaderboard/v1/experiments/trash:
    post:
      deprecated: false
      operationId: trashExperiments
      requestBody:
        content:
          '*/*':
            schema:
              items:
                format: uuid
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BatchExperimentUpdateResult'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: experimentIds
  /api/leaderboard/v1/experiments/trash/empty:
    post:
      deprecated: false
      operationId: emptyExperimentsTrash
      requestBody:
        content:
          '*/*':
            schema:
              items:
                format: uuid
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BatchExperimentUpdateResult'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: experimentIds
  /api/leaderboard/v1/experiments/trash/restore:
    post:
      deprecated: false
      operationId: restoreExperiments
      requestBody:
        content:
          '*/*':
            schema:
              items:
                format: uuid
                type: string
              type: array
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BatchExperimentUpdateResult'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: experimentIds
  /api/leaderboard/v1/storage/deleteOutput:
    delete:
      deprecated: false
      operationId: deleteExperimentOutput
      parameters:
      - explode: true
        in: query
        name: experimentIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/downloadRequest:
    get:
      deprecated: false
      operationId: getDownloadPrepareRequest
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DownloadPrepareRequestDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/legacy/download:
    get:
      deprecated: false
      operationId: downloadData
      parameters:
      - explode: true
        in: query
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/legacy/downloadRequest:
    post:
      deprecated: false
      operationId: prepareForDownload
      parameters:
      - explode: true
        in: query
        name: experimentIdentity
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: resource
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DownloadPrepareRequestDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/legacy/uploadOutput/{experimentId}:
    post:
      deprecated: false
      operationId: uploadExperimentOutput
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/legacy/uploadOutputAsTarStream/{experimentId}:
    post:
      deprecated: false
      operationId: uploadExperimentOutputAsTarstream
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/legacy/uploadSource/{experimentId}:
    post:
      deprecated: false
      operationId: uploadExperimentSource
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/leaderboard/v1/storage/legacy/uploadSourceAsTarStream/{experimentId}:
    post:
      deprecated: false
      operationId: uploadExperimentSourceAsTarstream
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/invitations/organization:
    post:
      deprecated: false
      operationId: createOrganizationInvitation
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewOrganizationInvitationDTO'
        description: addToAllProjects flag is ignored when roleGrant value is admin
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationInvitationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: newOrganizationInvitation
  /api/backend/v1/invitations/organization/{invitationId}:
    delete:
      deprecated: false
      operationId: revokeOrganizationInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    get:
      deprecated: false
      operationId: getOrganizationInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationInvitationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateOrganizationInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganizationInvitationUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationInvitationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: update
  /api/backend/v1/invitations/organization/{invitationId}/accept:
    post:
      deprecated: false
      operationId: acceptOrganizationInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/invitations/project:
    post:
      deprecated: false
      operationId: createProjectInvitation
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewProjectInvitationDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectInvitationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: newProjectInvitation
  /api/backend/v1/invitations/project/{invitationId}:
    delete:
      deprecated: false
      operationId: revokeProjectInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    get:
      deprecated: false
      operationId: getProjectInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectInvitationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateProjectInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProjectInvitationUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectInvitationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: update
  /api/backend/v1/invitations/project/{invitationId}/accept:
    post:
      deprecated: false
      operationId: acceptProjectInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/users:
    get:
      deprecated: false
      operationId: listUsers
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PublicUserProfileDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/users/{username}/avatar:
    get:
      deprecated: false
      operationId: getUserAvatar
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/user/pricingStatus:
    get:
      deprecated: false
      operationId: userPricingStatus
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserPricingStatusDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/{organizationIdentifier}:
    get:
      deprecated: false
      operationId: getCustomer
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/{organizationIdentifier}/creditCard:
    get:
      deprecated: false
      description: Returns a Stripe Source object
      operationId: getCreditCard
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: createCardUpdateSession
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateSessionParamsDTO'
        description: Stripe Checkout Session details
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: createSessionParams
  /api/backend/v1/payments/{organizationIdentifier}/downgrade:
    delete:
      deprecated: false
      operationId: downgradeTeamOrganization
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/{organizationIdentifier}/invoices/past:
    get:
      deprecated: false
      description: Pass-through to Stripe /v1/invoices
      operationId: getPastInvoices
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/{organizationIdentifier}/invoices/upcoming:
    get:
      deprecated: false
      description: Pass-through to Stripe /v1/invoices/upcoming
      operationId: getUpcomingInvoice
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/{organizationIdentifier}/pricingPlan:
    get:
      deprecated: false
      operationId: getPricingPlan
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationPricingPlanDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/payments/{organizationIdentifier}/session:
    post:
      deprecated: false
      operationId: createCheckoutSession
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateSessionParamsDTO'
        description: Stripe Checkout Session details
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SessionDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: createSessionParams
  /api/backend/v1/payments/{organizationName}/synchronizeSubscription:
    put:
      deprecated: false
      operationId: synchronizeSubscription
      parameters:
      - explode: false
        in: path
        name: organizationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/achievements:
    get:
      deprecated: false
      operationId: getAchievements
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AchievementsDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations2:
    get:
      deprecated: false
      operationId: filterOrganizations
      parameters:
      - explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: createOrganization
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganizationCreationParamsDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: organizationToCreate
  /api/backend/v1/organizations2/{organizationIdentifier}/limits:
    get:
      deprecated: false
      operationId: getOrganizationLimits
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationLimitsDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations2/{organizationIdentifier}/members:
    get:
      deprecated: false
      operationId: listOrganizationMembers
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationMemberDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: addOrganizationMember
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewOrganizationMemberDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationMemberDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: member
  /api/backend/v1/organizations2/{organizationIdentifier}/members/{userId}:
    delete:
      deprecated: false
      operationId: deleteOrganizationMember
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    patch:
      deprecated: false
      operationId: updateOrganizationMember
      parameters:
      - explode: false
        in: path
        name: organizationIdentifier
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganizationMemberUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationMemberDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: member
  /api/backend/v1/organizations2/{organizationId}:
    delete:
      deprecated: false
      operationId: deleteOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrganizationUpdateDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: organizationToUpdate
  /api/backend/v1/organizations2/{organizationId}/avatar:
    put:
      deprecated: false
      operationId: updateOrganizationAvatar
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                avatarFile:
                  format: binary
                  type: string
              required:
              - avatarFile
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LinkDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations2/{organizationId}/cancelSubscription:
    post:
      deprecated: false
      operationId: cancelSubscription
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscriptionCancelInfoDTO'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: subscriptionCancel
  /api/backend/v1/organizations2/{organizationName}/available:
    get:
      deprecated: false
      operationId: isOrganizationNameAvailable
      parameters:
      - explode: false
        in: path
        name: organizationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationNameAvailableDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations2/{organizationName}/avatar:
    get:
      deprecated: false
      operationId: getOrganizationAvatar
      parameters:
      - explode: false
        in: path
        name: organizationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations2/{organization}:
    get:
      deprecated: false
      operationId: getOrganization
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/clients/config:
    get:
      deprecated: false
      operationId: getClientConfig
      parameters:
      - explode: false
        in: header
        name: X-Neptune-Api-Token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientConfig'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/clients/sso:
    get:
      deprecated: false
      operationId: getSsoConfig
      parameters:
      - explode: true
        in: query
        name: workspaceName
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceConfig'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/myOrganizations:
    get:
      deprecated: false
      operationId: listOrganizations
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationWithRoleDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/channels/lastValues:
    get:
      deprecated: false
      operationId: getChannelsLastValues
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ChannelWithValueDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/channels/system:
    get:
      deprecated: false
      operationId: getSystemChannels
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ChannelDTO'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: createSystemChannel
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChannelParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChannelDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: channelToCreate
  /api/backend/v1/channels/{channelId}/csv:
    get:
      deprecated: false
      operationId: deprecatedGetChannelValuesCSV
      parameters:
      - explode: true
        in: query
        name: experimentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: gzipped
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/channels/{channelId}/values:
    get:
      deprecated: false
      operationId: deprecatedGetChannelValues
      parameters:
      - explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitedChannelValuesDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/login/actions:
    get:
      deprecated: false
      description: Returns a list of actions that backend requires the user to complete
        before he can start working with Neptune
      operationId: getLoginActions
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginActionsListDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "409":
          content: {}
          description: Conflict
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/login/survey:
    post:
      deprecated: false
      description: Processes the survey. Sending {} means that user declined survey
        and action is removed
      operationId: sendRegistrationSurvey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RegistrationSurveyDTO'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: survey
  /api/backend/v1/login/username:
    post:
      deprecated: false
      description: |2

        Sets the username as per param.
        Can be called once, subsequent calls will result in 403 error.
        Setting to an invalid username will result in 400 error.
        Setting to an unavailable username will result in 409 error.
      operationId: setUsername
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/login/username/validate:
    get:
      deprecated: false
      operationId: validateUsername
      parameters:
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsernameValidationStatusDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
  /api/backend/v1/authorization/api-token:
    delete:
      deprecated: false
      operationId: revokeApiToken
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    get:
      deprecated: false
      operationId: getApiToken
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NeptuneApiToken'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/authorization/authorize:
    get:
      deprecated: false
      operationId: authorize
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizedUserDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/authorization/oauth-token:
    get:
      deprecated: false
      operationId: exchangeApiToken
      parameters:
      - explode: false
        in: header
        name: X-Neptune-Api-Token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NeptuneOauthToken'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/reservations:
    post:
      deprecated: false
      operationId: createReservation
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewReservationDTO'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: newReservation
  /api/backend/v1/reservations/{organizationName}/questionnaire:
    put:
      deprecated: false
      operationId: sendQuestionnaire
      parameters:
      - explode: false
        in: path
        name: organizationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/QuestionnaireDTO'
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: questionnaireAnswers
  /api/backend/healthz:
    get:
      deprecated: false
      operationId: healthz
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ComponentStatus'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/status:
    get:
      deprecated: false
      operationId: statusGet
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/chartSets:
    get:
      deprecated: false
      operationId: listProjectChartSets
      parameters:
      - explode: true
        in: query
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ChartSet'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: createChartSet
      parameters:
      - explode: true
        in: query
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChartSetParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChartSet'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: chartSetToCreate
  /api/backend/v1/chartSets/{chartSetId}:
    delete:
      deprecated: false
      operationId: deleteChartSet
      parameters:
      - explode: false
        in: path
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    get:
      deprecated: false
      operationId: getChartSet
      parameters:
      - explode: false
        in: path
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChartSet'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateChartSet
      parameters:
      - explode: false
        in: path
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChartSetParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ChartSet'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: chartSetToUpdate
  /api/backend/v1/chartSets/{chartSetId}/charts:
    post:
      deprecated: false
      operationId: createChart
      parameters:
      - explode: false
        in: path
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChartDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Chart'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: chartToCreate
  /api/backend/v1/chartSets/{chartSetId}/charts/{chartId}:
    delete:
      deprecated: false
      operationId: deleteChart
      parameters:
      - explode: false
        in: path
        name: chartId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    put:
      deprecated: false
      operationId: updateChart
      parameters:
      - explode: false
        in: path
        name: chartId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ChartDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Chart'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: chartToUpdate
  /api/backend/v1/config:
    get:
      deprecated: false
      operationId: globalConfiguration
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlobalConfiguration'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/configInfo:
    get:
      deprecated: false
      operationId: configInfoGet
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigInfo'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/experiments/{experimentId}/charts:
    get:
      deprecated: false
      operationId: getExperimentCharts
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: chartSetId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Charts'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/experiments/{experimentId}/system/metrics:
    get:
      deprecated: false
      operationId: getSystemMetrics
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SystemMetric'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
    post:
      deprecated: false
      operationId: createSystemMetric
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SystemMetricParams'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemMetric'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: metricToCreate
  /api/backend/v1/experiments/{experimentId}/system/metrics/csv:
    get:
      deprecated: false
      operationId: getSystemMetricsCSV
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: gzipped
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/experiments/{experimentId}/system/metrics/values:
    post:
      deprecated: false
      operationId: postSystemMetricValues
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/SystemMetricValues'
              type: array
        required: true
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
      x-codegen-request-body-name: metricValues
  /api/backend/v1/experiments/{experimentId}/system/metrics/{metricId}/values:
    get:
      deprecated: false
      operationId: getSystemMetricValues
      parameters:
      - explode: false
        in: path
        name: experimentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: metricId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: startPoint
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: endPoint
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: itemCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SystemMetricValues'
                type: array
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations/{organizationName}/projects/{projectName}/avatar:
    get:
      deprecated: false
      operationId: getProjectAvatar
      parameters:
      - explode: false
        in: path
        name: organizationName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/organizations/{organizationName}/projects/{projectName}/background:
    get:
      deprecated: false
      operationId: getProjectBackground
      parameters:
      - explode: false
        in: path
        name: organizationName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: projectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: No response
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects1/{projectId}/avatar:
    put:
      deprecated: false
      operationId: updateProjectAvatar
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                avatarFile:
                  format: binary
                  type: string
              required:
              - avatarFile
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Link'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/projects1/{projectId}/background:
    put:
      deprecated: false
      operationId: updateProjectBackground
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                backgroundFile:
                  format: binary
                  type: string
              required:
              - backgroundFile
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Link'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/v1/storage/usage:
    get:
      deprecated: false
      operationId: storageUsage
      parameters:
      - explode: true
        in: query
        name: organizationIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: projectIdentifier
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageUsage'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /api/backend/version:
    get:
      deprecated: false
      operationId: version
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Version'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
  /version:
    get:
      deprecated: false
      operationId: versionGet
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Version'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "408":
          content: {}
          description: Request Timeout
        "422":
          content: {}
          description: Unprocessable Entity
      security:
      - oauth2: []
components:
  schemas:
    LinkTypeDTO:
      enum:
      - github
      - twitter
      - kaggle
      - linkedin
      - other
      type: string
    ParameterTypeEnum:
      enum:
      - double
      - string
      type: string
    OrganizationNameAvailableDTO:
      example:
        available: true
      properties:
        available:
          type: boolean
      required:
      - available
      type: object
    RegisteredMemberInfoDTO:
      example:
        lastName: lastName
        firstName: firstName
        avatarUrl: avatarUrl
        username: username
      properties:
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        lastName:
          type: string
        firstName:
          type: string
        username:
          type: string
        avatarUrl:
          type: string
      required:
      - avatarSource
      - avatarUrl
      - firstName
      - lastName
      - username
      type: object
    ProjectMemberDTO:
      example:
        canLeaveProject: true
        registeredMemberInfo:
          lastName: lastName
          firstName: firstName
          avatarUrl: avatarUrl
          username: username
        invitationInfo:
          invitedBy: invitedBy
          organizationName: organizationName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          projectName: projectName
          invitee: invitee
        editableRole: true
      properties:
        role:
          $ref: '#/components/schemas/ProjectRoleDTO'
        registeredMemberInfo:
          $ref: '#/components/schemas/RegisteredMemberInfoDTO'
        invitationInfo:
          $ref: '#/components/schemas/ProjectInvitationDTO'
        editableRole:
          type: boolean
        canLeaveProject:
          type: boolean
      required:
      - canLeaveProject
      - editableRole
      - role
      type: object
    UsernameValidationStatusDTO:
      example: {}
      properties:
        status:
          $ref: '#/components/schemas/UsernameValidationStatusEnumDTO'
      required:
      - status
      type: object
    InputMetadata:
      example:
        size: 2
        destination: destination
        source: source
      properties:
        source:
          type: string
        destination:
          type: string
        size:
          format: int64
          type: integer
      required:
      - destination
      - size
      - source
      type: object
    OrganizationTypeDTO:
      enum:
      - individual
      - team
      type: string
    EditExperimentParams:
      example:
        name: name
        description: description
        properties:
        - value: value
          key: key
        - value: value
          key: key
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        properties:
          items:
            $ref: '#/components/schemas/KeyValueProperty'
          type: array
      type: object
    PasswordChangeDTO:
      example:
        newPassword: newPassword
        currentPassword: currentPassword
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    OrganizationMemberUpdateDTO:
      example: {}
      properties:
        role:
          $ref: '#/components/schemas/OrganizationRoleDTO'
      required:
      - role
      type: object
    UpdateTagsParams:
      example:
        experimentIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tagsToAdd:
        - tagsToAdd
        - tagsToAdd
        tagsToDelete:
        - tagsToDelete
        - tagsToDelete
      properties:
        experimentIds:
          items:
            format: uuid
            type: string
          type: array
        tagsToAdd:
          items:
            type: string
          type: array
        tagsToDelete:
          items:
            type: string
          type: array
      required:
      - experimentIds
      - tagsToAdd
      - tagsToDelete
      type: object
    Experiment:
      example:
        shortId: shortId
        channelsSize: 5
        inputs:
        - size: 2
          destination: destination
          source: source
        - size: 2
          destination: destination
          source: source
        description: description
        checkpointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        responding: true
        hostname: hostname
        entrypoint: entrypoint
        componentsVersions:
        - version: version
        - version: version
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        traceback: traceback
        stateTransitions:
          running: 2000-01-23T04:56:07.000+00:00
          aborted: 2000-01-23T04:56:07.000+00:00
          failed: 2000-01-23T04:56:07.000+00:00
          succeeded: 2000-01-23T04:56:07.000+00:00
        owner: owner
        organizationName: organizationName
        isCodeAccessible: true
        timeOfCreation: 2000-01-23T04:56:07.000+00:00
        runningTime: 5
        channelsLastValues:
        - x: 6.027456183070403
          y: "y"
          channelName: channelName
          channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - x: 6.027456183070403
          y: "y"
          channelName: channelName
          channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - tags
        - tags
        channels:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastX: 0.8008281904610115
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastX: 0.8008281904610115
        notebookId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        paths:
          output: output
          source: source
        storageSize: 1
        timeOfCompletion: 2000-01-23T04:56:07.000+00:00
        name: name
        projectName: projectName
        parameters:
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        projectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        properties:
        - value: value
          key: key
        - value: value
          key: key
        trashed: true
      properties:
        channels:
          items:
            $ref: '#/components/schemas/Channel'
          type: array
        state:
          $ref: '#/components/schemas/ExperimentState'
        timeOfCompletion:
          format: date-time
          type: string
        checkpointId:
          format: uuid
          type: string
        paths:
          $ref: '#/components/schemas/ExperimentPaths'
        responding:
          type: boolean
        organizationId:
          format: uuid
          type: string
        stateTransitions:
          $ref: '#/components/schemas/StateTransitions'
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        channelsLastValues:
          items:
            $ref: '#/components/schemas/ChannelWithValue'
          type: array
        storageSize:
          format: int64
          type: integer
        name:
          type: string
        notebookId:
          format: uuid
          type: string
        projectName:
          type: string
        hostname:
          type: string
        trashed:
          type: boolean
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        channelsSize:
          format: int64
          type: integer
        timeOfCreation:
          format: date-time
          type: string
        projectId:
          format: uuid
          type: string
        organizationName:
          type: string
        isCodeAccessible:
          type: boolean
        traceback:
          type: string
        entrypoint:
          type: string
        runningTime:
          format: int64
          type: integer
        id:
          format: uuid
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/InputMetadata'
          type: array
        properties:
          items:
            $ref: '#/components/schemas/KeyValueProperty'
          type: array
        shortId:
          type: string
        componentsVersions:
          items:
            $ref: '#/components/schemas/ComponentVersion'
          type: array
        owner:
          type: string
      required:
      - channels
      - channelsLastValues
      - channelsSize
      - componentsVersions
      - description
      - id
      - inputs
      - name
      - organizationId
      - organizationName
      - owner
      - parameters
      - paths
      - projectId
      - projectName
      - properties
      - responding
      - runningTime
      - shortId
      - state
      - stateTransitions
      - storageSize
      - tags
      - timeOfCreation
      - trashed
      type: object
    StorageUsage:
      example:
        usage: 0
      properties:
        usage:
          format: int64
          type: integer
      required:
      - usage
      type: object
    ProjectVisibilityDTO:
      enum:
      - priv
      - pub
      type: string
    Parameter:
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        value: value
      properties:
        name:
          type: string
        description:
          type: string
        parameterType:
          $ref: '#/components/schemas/ParameterTypeEnum'
        id:
          format: uuid
          type: string
        value:
          type: string
      required:
      - id
      - name
      - parameterType
      - value
      type: object
    NeptuneApiToken:
      example:
        token: token
      properties:
        token:
          type: string
      required:
      - token
      type: object
    OrganizationUpdateDTO:
      example:
        name: name
        info: info
      properties:
        name:
          type: string
        info:
          type: string
      type: object
    NameEnum:
      enum:
      - Client
      type: string
    Series:
      example:
        aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        channelName: channelName
        label: label
        channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        seriesType:
          $ref: '#/components/schemas/SeriesType'
        channelName:
          type: string
        channelId:
          format: uuid
          type: string
        aliasId:
          format: uuid
          type: string
        label:
          type: string
      required:
      - label
      - seriesType
      type: object
    Channel:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastX: 0.8008281904610115
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        channelType:
          $ref: '#/components/schemas/ChannelType'
        lastX:
          format: double
          type: number
      required:
      - channelType
      - id
      - name
      type: object
    OrganizationInvitationUpdateDTO:
      example: {}
      properties:
        roleGrant:
          $ref: '#/components/schemas/OrganizationRoleDTO'
      required:
      - roleGrant
      type: object
    UserListItemDTO:
      example:
        lastName: lastName
        firstName: firstName
        avatarUrl: avatarUrl
        username: username
      properties:
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        lastName:
          type: string
        firstName:
          type: string
        username:
          type: string
        avatarUrl:
          type: string
      required:
      - avatarSource
      - avatarUrl
      - firstName
      - lastName
      - username
      type: object
    OrganizationMemberDTO:
      example:
        totalNumberOfProjects: 0
        numberOfProjects: 6
        registeredMemberInfo:
          lastName: lastName
          firstName: firstName
          avatarUrl: avatarUrl
          username: username
        invitationInfo:
          invitedBy: invitedBy
          organizationName: organizationName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          invitee: invitee
        editableRole: true
      properties:
        role:
          $ref: '#/components/schemas/OrganizationRoleDTO'
        editableRole:
          type: boolean
        registeredMemberInfo:
          $ref: '#/components/schemas/RegisteredMemberInfoDTO'
        invitationInfo:
          $ref: '#/components/schemas/OrganizationInvitationDTO'
        totalNumberOfProjects:
          format: int32
          type: integer
        numberOfProjects:
          format: int32
          type: integer
      required:
      - editableRole
      - role
      type: object
    NewProjectDTO:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectKey: projectKey
        name: name
        description: description
        displayClass: displayClass
      properties:
        name:
          type: string
        description:
          type: string
        projectKey:
          type: string
        organizationId:
          format: uuid
          type: string
        visibility:
          $ref: '#/components/schemas/ProjectVisibilityDTO'
        displayClass:
          type: string
      required:
      - name
      - organizationId
      - projectKey
      type: object
    SystemMetricValues:
      example:
        metricId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        level: 0
        seriesName: seriesName
        values:
        - timestampMillis: 6
          x: 1
          y: 5.962133916683182
        - timestampMillis: 6
          x: 1
          y: 5.962133916683182
      properties:
        metricId:
          format: uuid
          type: string
        seriesName:
          type: string
        level:
          format: int32
          type: integer
        values:
          items:
            $ref: '#/components/schemas/SystemMetricPoint'
          type: array
      required:
      - metricId
      - seriesName
      - values
      type: object
    ProjectCodeAccessDTO:
      enum:
      - default
      - restricted
      type: string
    SystemMetricResourceType:
      enum:
      - CPU
      - RAM
      - GPU
      - GPU_RAM
      - OTHER
      type: string
    ChannelWithValueDTO:
      example:
        x: 0.8008281904610115
        y: "y"
        channelName: channelName
        channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        x:
          format: double
          type: number
        y:
          type: string
        channelType:
          $ref: '#/components/schemas/ChannelTypeEnum'
        channelName:
          type: string
        channelId:
          format: uuid
          type: string
      required:
      - channelId
      - channelName
      - channelType
      - x
      - "y"
      type: object
    Error:
      example:
        code: 6
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        type:
          $ref: '#/components/schemas/ApiErrorTypeDTO'
      required:
      - code
      - message
      type: object
    ProjectRoleDTO:
      enum:
      - viewer
      - member
      - manager
      type: string
    ProjectMembersDTO:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organizationName: organizationName
        members:
        - canLeaveProject: true
          registeredMemberInfo:
            lastName: lastName
            firstName: firstName
            avatarUrl: avatarUrl
            username: username
          invitationInfo:
            invitedBy: invitedBy
            organizationName: organizationName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            projectName: projectName
            invitee: invitee
          editableRole: true
        - canLeaveProject: true
          registeredMemberInfo:
            lastName: lastName
            firstName: firstName
            avatarUrl: avatarUrl
            username: username
          invitationInfo:
            invitedBy: invitedBy
            organizationName: organizationName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            projectName: projectName
            invitee: invitee
          editableRole: true
        projectName: projectName
        projectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        projectName:
          type: string
        projectId:
          format: uuid
          type: string
        organizationName:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ProjectMemberDTO'
          type: array
        organizationId:
          format: uuid
          type: string
      required:
      - members
      - organizationId
      - organizationName
      - projectId
      - projectName
      type: object
    Y:
      example:
        textValue: textValue
        numericValue: 1.4658129805029452
        inputImageValue:
          data: data
          name: name
          description: description
        imageValue:
          imageUrl: imageUrl
          name: name
          description: description
          thumbnailUrl: thumbnailUrl
      properties:
        numericValue:
          format: double
          type: number
        textValue:
          type: string
        imageValue:
          $ref: '#/components/schemas/OutputImageDTO'
        inputImageValue:
          $ref: '#/components/schemas/InputImageDTO'
      type: object
    Point:
      example:
        timestampMillis: 0
        x: 6.027456183070403
        y:
          textValue: textValue
          numericValue: 1.4658129805029452
          inputImageValue:
            data: data
            name: name
            description: description
          imageValue:
            imageUrl: imageUrl
            name: name
            description: description
            thumbnailUrl: thumbnailUrl
      properties:
        timestampMillis:
          format: int64
          type: integer
        x:
          format: double
          type: number
        y:
          $ref: '#/components/schemas/Y'
      required:
      - timestampMillis
      - "y"
      type: object
    ProjectMemberUpdateDTO:
      example: {}
      properties:
        role:
          $ref: '#/components/schemas/ProjectRoleDTO'
      required:
      - role
      type: object
    CompletedExperimentParams:
      example:
        traceback: traceback
      properties:
        state:
          $ref: '#/components/schemas/ExperimentState'
        traceback:
          type: string
      required:
      - state
      - traceback
      type: object
    SeriesDefinition:
      example:
        aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        channelName: channelName
        label: label
      properties:
        label:
          type: string
        channelName:
          type: string
        aliasId:
          format: uuid
          type: string
        seriesType:
          $ref: '#/components/schemas/SeriesType'
      required:
      - label
      - seriesType
      type: object
    UserProfileDTO:
      example:
        lastName: lastName
        avatarUrl: avatarUrl
        created: 2000-01-23T04:56:07.000+00:00
        usernameHash: usernameHash
        biography: biography
        hasLoggedToCli: true
        firstName: firstName
        shortInfo: shortInfo
        links:
          github: github
          kaggle: kaggle
          twitter: twitter
          linkedin: linkedin
          others:
          - others
          - others
        hasCreatedExperiments: true
        email: email
        username: username
      properties:
        usernameHash:
          type: string
        email:
          type: string
        hasLoggedToCli:
          type: boolean
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        firstName:
          type: string
        shortInfo:
          type: string
        created:
          format: date-time
          type: string
        biography:
          type: string
        hasCreatedExperiments:
          type: boolean
        username:
          type: string
        avatarUrl:
          type: string
        lastName:
          type: string
        links:
          $ref: '#/components/schemas/UserProfileLinksDTO'
      required:
      - avatarSource
      - avatarUrl
      - biography
      - created
      - email
      - firstName
      - hasCreatedExperiments
      - hasLoggedToCli
      - lastName
      - links
      - shortInfo
      - username
      - usernameHash
      type: object
    ProjectKeyDTO:
      example:
        proposal: proposal
      properties:
        proposal:
          type: string
      required:
      - proposal
      type: object
    InvitationTypeEnumDTO:
      enum:
      - user
      - emailRecipient
      type: string
    ProjectWithRoleDTO:
      example:
        backgroundUrl: backgroundUrl
        featured: true
        organizationName: organizationName
        avatarUrl: avatarUrl
        timeOfCreation: 2000-01-23T04:56:07.000+00:00
        description: description
        version: 0
        displayClass: displayClass
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectKey: projectKey
        userCount: 6
        name: name
        lastActivity: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        leaderboardEntryCount: 1
      properties:
        codeAccess:
          $ref: '#/components/schemas/ProjectCodeAccessDTO'
        avatarUrl:
          type: string
        description:
          type: string
        organizationType:
          $ref: '#/components/schemas/OrganizationTypeDTO'
        featured:
          type: boolean
        organizationName:
          type: string
        version:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        projectKey:
          type: string
        organizationId:
          format: uuid
          type: string
        userCount:
          format: int32
          type: integer
        visibility:
          $ref: '#/components/schemas/ProjectVisibilityDTO'
        displayClass:
          type: string
        name:
          type: string
        lastActivity:
          format: date-time
          type: string
        timeOfCreation:
          format: date-time
          type: string
        userRoleInOrganization:
          $ref: '#/components/schemas/OrganizationRoleDTO'
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        leaderboardEntryCount:
          format: int32
          type: integer
        userRoleInProject:
          $ref: '#/components/schemas/ProjectRoleDTO'
        backgroundUrl:
          type: string
      required:
      - avatarSource
      - avatarUrl
      - codeAccess
      - featured
      - id
      - lastActivity
      - leaderboardEntryCount
      - name
      - organizationId
      - organizationName
      - organizationType
      - projectKey
      - timeOfCreation
      - userCount
      - userRoleInProject
      - version
      - visibility
      type: object
    OrganizationRoleDTO:
      enum:
      - member
      - owner
      type: string
    SystemMetric:
      example:
        unit: unit
        min: 0.8008281904610115
        max: 6.027456183070403
        series:
        - series
        - series
        name: name
        description: description
        experimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        series:
          items:
            type: string
          type: array
        name:
          type: string
        min:
          format: double
          type: number
        max:
          format: double
          type: number
        unit:
          type: string
        description:
          type: string
        resourceType:
          $ref: '#/components/schemas/SystemMetricResourceType'
        experimentId:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
      required:
      - description
      - experimentId
      - id
      - name
      - resourceType
      - series
      type: object
    WorkspaceConfig:
      example:
        idpHint: idpHint
        realm: realm
      properties:
        realm:
          type: string
        idpHint:
          type: string
      required:
      - idpHint
      - realm
      type: object
    UUID:
      properties:
        mostSigBits:
          format: int64
          type: integer
        leastSigBits:
          format: int64
          type: integer
      required:
      - leastSigBits
      - mostSigBits
      type: object
    SystemMetricPoint:
      example:
        timestampMillis: 6
        x: 1
        y: 5.962133916683182
      properties:
        timestampMillis:
          format: int64
          type: integer
        x:
          format: int64
          type: integer
        y:
          format: double
          type: number
      required:
      - timestampMillis
      - x
      - "y"
      type: object
    Version:
      example:
        version: version
      properties:
        version:
          type: string
      required:
      - version
      type: object
    OrganizationInvitationDTO:
      example:
        invitedBy: invitedBy
        organizationName: organizationName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        invitee: invitee
      properties:
        roleGrant:
          $ref: '#/components/schemas/OrganizationRoleDTO'
        invitedBy:
          type: string
        organizationName:
          type: string
        id:
          format: uuid
          type: string
        invitee:
          type: string
        status:
          $ref: '#/components/schemas/InvitationStatusEnumDTO'
        invitationType:
          $ref: '#/components/schemas/InvitationTypeEnumDTO'
      required:
      - id
      - invitationType
      - invitedBy
      - invitee
      - organizationName
      - roleGrant
      - status
      type: object
    ChannelTypeEnum:
      enum:
      - numeric
      - text
      - image
      type: string
    ChannelWithValue:
      example:
        x: 6.027456183070403
        y: "y"
        channelName: channelName
        channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        x:
          format: double
          type: number
        y:
          type: string
        channelType:
          $ref: '#/components/schemas/ChannelType'
        channelName:
          type: string
        channelId:
          format: uuid
          type: string
      required:
      - channelId
      - channelName
      - channelType
      - x
      - "y"
      type: object
    ChartDefinition:
      example:
        series:
        - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          channelName: channelName
          label: label
        - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          channelName: channelName
          label: label
        name: name
      properties:
        name:
          type: string
        series:
          items:
            $ref: '#/components/schemas/SeriesDefinition'
          type: array
      required:
      - name
      - series
      type: object
    UsernameValidationStatusEnumDTO:
      enum:
      - available
      - invalid
      - unavailable
      type: string
    ProjectInvitationDTO:
      example:
        invitedBy: invitedBy
        organizationName: organizationName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectName: projectName
        invitee: invitee
      properties:
        roleGrant:
          $ref: '#/components/schemas/ProjectRoleDTO'
        projectName:
          type: string
        invitedBy:
          type: string
        organizationName:
          type: string
        id:
          format: uuid
          type: string
        invitee:
          type: string
        status:
          $ref: '#/components/schemas/InvitationStatusEnumDTO'
        invitationType:
          $ref: '#/components/schemas/InvitationTypeEnumDTO'
      required:
      - id
      - invitationType
      - invitedBy
      - invitee
      - organizationName
      - projectName
      - roleGrant
      - status
      type: object
    OrganizationWithRoleDTO:
      example:
        avatarUrl: avatarUrl
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        paymentStatus: paymentStatus
        info: info
      properties:
        name:
          type: string
        userRole:
          $ref: '#/components/schemas/OrganizationRoleDTO'
        paymentStatus:
          type: string
        avatarUrl:
          type: string
        organizationType:
          $ref: '#/components/schemas/OrganizationTypeDTO'
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        info:
          type: string
        id:
          format: uuid
          type: string
        created:
          format: date-time
          type: string
      required:
      - avatarSource
      - avatarUrl
      - created
      - id
      - name
      - organizationType
      - paymentStatus
      type: object
    DiscountCodeDTO:
      example:
        code: code
      properties:
        code:
          type: string
      required:
      - code
      type: object
    ExperimentPaths:
      example:
        output: output
        source: source
      properties:
        output:
          type: string
        source:
          type: string
      required:
      - output
      - source
      type: object
    ChannelDTO:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastX: 0.8008281904610115
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        channelType:
          $ref: '#/components/schemas/ChannelTypeEnum'
        lastX:
          format: double
          type: number
      required:
      - channelType
      - id
      - name
      type: object
    AuthorizedUserDTO:
      example:
        username: username
      properties:
        username:
          type: string
      required:
      - username
      type: object
    GlobalConfiguration:
      example:
        licenseExpiration: 2000-01-23T04:56:07.000+00:00
      properties:
        licenseExpiration:
          format: date-time
          type: string
      required:
      - licenseExpiration
      type: object
    ClientConfig:
      example:
        apiUrl: apiUrl
        applicationUrl: applicationUrl
        pyLibVersions:
          maxCompatibleVersion: maxCompatibleVersion
          minRecommendedVersion: minRecommendedVersion
          minCompatibleVersion: minCompatibleVersion
      properties:
        apiUrl:
          type: string
        applicationUrl:
          type: string
        pyLibVersions:
          $ref: '#/components/schemas/ClientVersionsConfigDTO'
      required:
      - apiUrl
      - applicationUrl
      - pyLibVersions
      type: object
    GitInfoDTO:
      example:
        commit:
          authorEmail: authorEmail
          authorName: authorName
          commitId: commitId
          message: message
          commitDate: 2000-01-23T04:56:07.000+00:00
        repositoryDirty: true
        remotes:
        - remotes
        - remotes
        currentBranch: currentBranch
      properties:
        currentBranch:
          type: string
        remotes:
          items:
            type: string
          type: array
        commit:
          $ref: '#/components/schemas/GitCommitDTO'
        repositoryDirty:
          type: boolean
      required:
      - commit
      - repositoryDirty
      type: object
    CustomerDTO:
      example:
        userPriceInCents: 6
        numberOfUsers: 0
        discount:
          amountOffInCents: 5
          end: 2000-01-23T04:56:07.000+00:00
          amountOffPercentage: 1
      properties:
        numberOfUsers:
          format: int64
          type: integer
        userPriceInCents:
          format: int64
          type: integer
        pricingPlan:
          $ref: '#/components/schemas/PricingPlanDTO'
        discount:
          $ref: '#/components/schemas/DiscountDTO'
      required:
      - pricingPlan
      - userPriceInCents
      type: object
    PricingPlanDTO:
      enum:
      - free
      - academia
      - paid
      - enterprise
      type: string
    ChannelParams:
      example:
        name: name
      properties:
        name:
          type: string
        channelType:
          $ref: '#/components/schemas/ChannelTypeEnum'
      required:
      - channelType
      - name
      type: object
    File:
      properties:
        path:
          type: string
      required:
      - path
      type: object
    ExperimentCreationParams:
      example:
        abortable: true
        description: description
        checkpointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configPath: configPath
        execArgsTemplate: execArgsTemplate
        monitored: true
        tags:
        - tags
        - tags
        enqueueCommand: enqueueCommand
        hostname: hostname
        gitInfo:
          commit:
            authorEmail: authorEmail
            authorName: authorName
            commitId: commitId
            message: message
            commitDate: 2000-01-23T04:56:07.000+00:00
          repositoryDirty: true
          remotes:
          - remotes
          - remotes
          currentBranch: currentBranch
        notebookId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        entrypoint: entrypoint
        name: name
        projectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parameters:
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          value: value
        properties:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        monitored:
          type: boolean
        hostname:
          type: string
        checkpointId:
          format: uuid
          type: string
        projectId:
          format: uuid
          type: string
        gitInfo:
          $ref: '#/components/schemas/GitInfoDTO'
        properties:
          items:
            $ref: '#/components/schemas/KeyValueProperty'
          type: array
        configPath:
          type: string
        execArgsTemplate:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        enqueueCommand:
          type: string
        name:
          type: string
        notebookId:
          format: uuid
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        abortable:
          type: boolean
        entrypoint:
          type: string
      required:
      - enqueueCommand
      - execArgsTemplate
      - name
      - parameters
      - projectId
      - properties
      - tags
      type: object
    RegistrationSurveyDTO:
      example:
        survey: survey
      properties:
        survey:
          type: string
      required:
      - survey
      type: object
    BatchExperimentUpdateResult:
      example:
        experimentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        error:
          code: 6
          message: message
      properties:
        experimentId:
          format: uuid
          type: string
        error:
          $ref: '#/components/schemas/Error'
      required:
      - experimentId
      type: object
    Chart:
      example:
        series:
        - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          channelName: channelName
          label: label
          channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          channelName: channelName
          label: label
          channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        series:
          items:
            $ref: '#/components/schemas/Series'
          type: array
      required:
      - id
      - name
      - series
      type: object
    NewProjectInvitationDTO:
      example:
        projectIdentifier: projectIdentifier
        invitee: invitee
      properties:
        projectIdentifier:
          type: string
        invitee:
          type: string
        invitationType:
          $ref: '#/components/schemas/InvitationTypeEnumDTO'
        roleGrant:
          $ref: '#/components/schemas/ProjectRoleDTO'
      required:
      - invitationType
      - invitee
      - projectIdentifier
      - roleGrant
      type: object
    KeyValueProperty:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    ConfigInfo:
      example:
        maxFormContentSize: 0
      properties:
        maxFormContentSize:
          format: int32
          type: integer
      required:
      - maxFormContentSize
      type: object
    InputChannelValues:
      example:
        values:
        - timestampMillis: 0
          x: 6.027456183070403
          y:
            textValue: textValue
            numericValue: 1.4658129805029452
            inputImageValue:
              data: data
              name: name
              description: description
            imageValue:
              imageUrl: imageUrl
              name: name
              description: description
              thumbnailUrl: thumbnailUrl
        - timestampMillis: 0
          x: 6.027456183070403
          y:
            textValue: textValue
            numericValue: 1.4658129805029452
            inputImageValue:
              data: data
              name: name
              description: description
            imageValue:
              imageUrl: imageUrl
              name: name
              description: description
              thumbnailUrl: thumbnailUrl
        channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        channelId:
          format: uuid
          type: string
        values:
          items:
            $ref: '#/components/schemas/Point'
          type: array
      required:
      - channelId
      - values
      type: object
    ChartSet:
      example:
        defaultChartsEnabled: true
        charts:
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
        isEditable: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        isEditable:
          type: boolean
        defaultChartsEnabled:
          type: boolean
        projectId:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        charts:
          items:
            $ref: '#/components/schemas/Chart'
          type: array
      required:
      - id
      - name
      - projectId
      type: object
    AchievementTypeDTO:
      enum:
      - artifactSent
      - experimentCreated
      - imageSent
      - parameterSet
      - sourceUploaded
      - tagSet
      - textSent
      type: string
    CreateSessionParamsDTO:
      description: Stripe Checkout Session details
      example:
        successUrl: successUrl
        failureUrl: failureUrl
      properties:
        successUrl:
          type: string
        failureUrl:
          type: string
      required:
      - failureUrl
      - successUrl
      type: object
    LinkDTO:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    GitCommitDTO:
      example:
        authorEmail: authorEmail
        authorName: authorName
        commitId: commitId
        message: message
        commitDate: 2000-01-23T04:56:07.000+00:00
      properties:
        authorEmail:
          type: string
        commitId:
          type: string
        message:
          type: string
        commitDate:
          format: date-time
          type: string
        authorName:
          type: string
      required:
      - authorEmail
      - authorName
      - commitDate
      - commitId
      - message
      type: object
    PointValueDTO:
      example:
        timestampMillis: 0
        x: 6.027456183070403
        y:
          textValue: textValue
          numericValue: 1.4658129805029452
          inputImageValue:
            data: data
            name: name
            description: description
          imageValue:
            imageUrl: imageUrl
            name: name
            description: description
            thumbnailUrl: thumbnailUrl
      properties:
        timestampMillis:
          format: int64
          type: integer
        x:
          format: double
          type: number
        y:
          $ref: '#/components/schemas/Y'
      required:
      - timestampMillis
      - x
      - "y"
      type: object
    ComponentStatus:
      example:
        name: name
        status: status
      properties:
        name:
          type: string
        status:
          type: string
      required:
      - name
      - status
      type: object
    ClientVersionsConfigDTO:
      example:
        maxCompatibleVersion: maxCompatibleVersion
        minRecommendedVersion: minRecommendedVersion
        minCompatibleVersion: minCompatibleVersion
      properties:
        minRecommendedVersion:
          type: string
        minCompatibleVersion:
          type: string
        maxCompatibleVersion:
          type: string
      type: object
    InvitationStatusEnumDTO:
      enum:
      - pending
      - accepted
      - rejected
      - revoked
      type: string
    OrganizationPricingPlanDTO:
      example: {}
      properties:
        pricingPlan:
          $ref: '#/components/schemas/PricingPlanDTO'
      required:
      - pricingPlan
      type: object
    OrganizationDTO:
      example:
        avatarUrl: avatarUrl
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        paymentStatus: paymentStatus
        info: info
      properties:
        name:
          type: string
        paymentStatus:
          type: string
        avatarUrl:
          type: string
        organizationType:
          $ref: '#/components/schemas/OrganizationTypeDTO'
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        info:
          type: string
        id:
          format: uuid
          type: string
        created:
          format: date-time
          type: string
      required:
      - avatarSource
      - avatarUrl
      - created
      - id
      - name
      - organizationType
      - paymentStatus
      type: object
    OutputImageDTO:
      example:
        imageUrl: imageUrl
        name: name
        description: description
        thumbnailUrl: thumbnailUrl
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        thumbnailUrl:
          type: string
      type: object
    ExperimentState:
      enum:
      - running
      - succeeded
      - failed
      - aborted
      type: string
    BatchChannelValueErrorDTO:
      example:
        x: 0.8008281904610115
        error:
          code: 6
          message: message
        channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        channelId:
          format: uuid
          type: string
        x:
          format: double
          type: number
        error:
          $ref: '#/components/schemas/Error'
      required:
      - channelId
      - error
      - x
      type: object
    ApiErrorTypeDTO:
      enum:
      - LIMIT_OF_PROJECTS_REACHED
      - LIMIT_OF_STORAGE_IN_PROJECT_REACHED
      - LIMIT_OF_MEMBERS_IN_ORGANIZATION_REACHED
      - LIMIT_OF_VALUES_IN_CHANNEL_REACHED
      type: string
    LoginActionsListDTO:
      example:
        requiredActions:
        - null
        - null
      properties:
        requiredActions:
          items:
            $ref: '#/components/schemas/LoginActionDTO'
          type: array
      required:
      - requiredActions
      type: object
    ProjectListDTO:
      example:
        entries:
        - backgroundUrl: backgroundUrl
          featured: true
          organizationName: organizationName
          avatarUrl: avatarUrl
          timeOfCreation: 2000-01-23T04:56:07.000+00:00
          description: description
          version: 0
          displayClass: displayClass
          organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          projectKey: projectKey
          userCount: 6
          name: name
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          leaderboardEntryCount: 1
        - backgroundUrl: backgroundUrl
          featured: true
          organizationName: organizationName
          avatarUrl: avatarUrl
          timeOfCreation: 2000-01-23T04:56:07.000+00:00
          description: description
          version: 0
          displayClass: displayClass
          organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          projectKey: projectKey
          userCount: 6
          name: name
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          leaderboardEntryCount: 1
        matchingItemCount: 5
        totalItemCount: 5
      properties:
        entries:
          items:
            $ref: '#/components/schemas/ProjectWithRoleDTO'
          type: array
        matchingItemCount:
          format: int32
          type: integer
        totalItemCount:
          format: int32
          type: integer
      required:
      - entries
      - matchingItemCount
      - totalItemCount
      type: object
    DiscountDTO:
      example:
        amountOffInCents: 5
        end: 2000-01-23T04:56:07.000+00:00
        amountOffPercentage: 1
      properties:
        amountOffPercentage:
          format: int64
          type: integer
        amountOffInCents:
          format: int64
          type: integer
        end:
          format: date-time
          type: string
      type: object
    StateTransitions:
      example:
        running: 2000-01-23T04:56:07.000+00:00
        aborted: 2000-01-23T04:56:07.000+00:00
        failed: 2000-01-23T04:56:07.000+00:00
        succeeded: 2000-01-23T04:56:07.000+00:00
      properties:
        running:
          format: date-time
          type: string
        succeeded:
          format: date-time
          type: string
        failed:
          format: date-time
          type: string
        aborted:
          format: date-time
          type: string
      type: object
    ChannelType:
      enum:
      - numeric
      - text
      - image
      type: string
    SystemMetricParams:
      example:
        unit: unit
        min: 0.8008281904610115
        max: 6.027456183070403
        series:
        - series
        - series
        name: name
        description: description
      properties:
        series:
          items:
            type: string
          type: array
        name:
          type: string
        min:
          format: double
          type: number
        max:
          format: double
          type: number
        unit:
          type: string
        description:
          type: string
        resourceType:
          $ref: '#/components/schemas/SystemMetricResourceType'
      required:
      - description
      - name
      - resourceType
      - series
      type: object
    UserPricingStatusDTO:
      example:
        canCreateTeamFree: true
        anyTeamFree:
          avatarUrl: avatarUrl
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          paymentStatus: paymentStatus
          info: info
      properties:
        canCreateTeamFree:
          type: boolean
        anyTeamFree:
          $ref: '#/components/schemas/OrganizationWithRoleDTO'
      required:
      - canCreateTeamFree
      type: object
    ProjectInvitationUpdateDTO:
      example: {}
      properties:
        roleGrant:
          $ref: '#/components/schemas/ProjectRoleDTO'
      required:
      - roleGrant
      type: object
    UserProfileLinkDTO:
      example:
        url: url
      properties:
        linkType:
          $ref: '#/components/schemas/LinkTypeDTO'
        url:
          type: string
      required:
      - linkType
      - url
      type: object
    Charts:
      example:
        manualCharts:
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
        defaultCharts:
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
            channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
      properties:
        manualCharts:
          items:
            $ref: '#/components/schemas/Chart'
          type: array
        defaultCharts:
          items:
            $ref: '#/components/schemas/Chart'
          type: array
      required:
      - defaultCharts
      - manualCharts
      type: object
    SessionDTO:
      example:
        sessionId: sessionId
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
    AvatarSourceEnum:
      enum:
      - default
      - thirdParty
      - user
      - inherited
      type: string
    OrganizationCreationParamsDTO:
      example:
        discountCode:
          code: code
        name: name
      properties:
        name:
          type: string
        organizationType:
          $ref: '#/components/schemas/OrganizationTypeDTO'
        discountCode:
          $ref: '#/components/schemas/DiscountCodeDTO'
      required:
      - name
      - organizationType
      type: object
    UserProfileLinksDTO:
      example:
        github: github
        kaggle: kaggle
        twitter: twitter
        linkedin: linkedin
        others:
        - others
        - others
      properties:
        github:
          type: string
        linkedin:
          type: string
        others:
          items:
            type: string
          type: array
        kaggle:
          type: string
        twitter:
          type: string
      required:
      - others
      type: object
    SeriesType:
      enum:
      - line
      - dot
      type: string
    ComponentVersion:
      example:
        version: version
      properties:
        name:
          $ref: '#/components/schemas/NameEnum'
        version:
          type: string
      required:
      - name
      - version
      type: object
    PublicUserProfileDTO:
      example:
        firstName: firstName
        lastName: lastName
        shortInfo: shortInfo
        avatarUrl: avatarUrl
        links:
          github: github
          kaggle: kaggle
          twitter: twitter
          linkedin: linkedin
          others:
          - others
          - others
        biography: biography
        email: email
        username: username
      properties:
        biography:
          type: string
        email:
          type: string
        avatarSource:
          $ref: '#/components/schemas/AvatarSourceEnum'
        firstName:
          type: string
        shortInfo:
          type: string
        username:
          type: string
        avatarUrl:
          type: string
        lastName:
          type: string
        links:
          $ref: '#/components/schemas/UserProfileLinksDTO'
      required:
      - avatarSource
      - avatarUrl
      - biography
      - links
      - shortInfo
      - username
      type: object
    OrganizationLimitsDTO:
      example:
        membersLimit: 5
        projectsLimit: 1
        storageSize: 0
        privateProjectMembers: 6
      properties:
        storageSize:
          format: int64
          type: integer
        privateProjectMembers:
          format: int64
          type: integer
        projectsLimit:
          format: int64
          type: integer
        membersLimit:
          format: int64
          type: integer
      type: object
    LoginActionDTO:
      enum:
      - SET_USERNAME
      - SURVEY
      type: string
    AchievementsDTO:
      example:
        earned:
        - null
        - null
      properties:
        earned:
          items:
            $ref: '#/components/schemas/AchievementTypeDTO'
          type: array
      required:
      - earned
      type: object
    ProjectUpdateDTO:
      example:
        name: name
        description: description
        displayClass: displayClass
      properties:
        codeAccess:
          $ref: '#/components/schemas/ProjectCodeAccessDTO'
        name:
          type: string
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/ProjectVisibilityDTO'
        displayClass:
          type: string
      type: object
    NewOrganizationInvitationDTO:
      example:
        organizationIdentifier: organizationIdentifier
        addToAllProjects: true
        invitee: invitee
      properties:
        roleGrant:
          $ref: '#/components/schemas/OrganizationRoleDTO'
        addToAllProjects:
          type: boolean
        organizationIdentifier:
          type: string
        invitee:
          type: string
        invitationType:
          $ref: '#/components/schemas/InvitationTypeEnumDTO'
      required:
      - addToAllProjects
      - invitationType
      - invitee
      - organizationIdentifier
      - roleGrant
      type: object
    UserListDTO:
      example:
        entries:
        - lastName: lastName
          firstName: firstName
          avatarUrl: avatarUrl
          username: username
        - lastName: lastName
          firstName: firstName
          avatarUrl: avatarUrl
          username: username
        matchingItemCount: 0
        totalItemCount: 6
      properties:
        entries:
          items:
            $ref: '#/components/schemas/UserListItemDTO'
          type: array
        matchingItemCount:
          format: int32
          type: integer
        totalItemCount:
          format: int32
          type: integer
      required:
      - entries
      - matchingItemCount
      - totalItemCount
      type: object
    ExperimentsAttributesNamesDTO:
      example:
        propertiesNames:
        - propertiesNames
        - propertiesNames
        textChannelsNames:
        - textChannelsNames
        - textChannelsNames
        textParametersNames:
        - textParametersNames
        - textParametersNames
        numericParametersNames:
        - numericParametersNames
        - numericParametersNames
        numericChannelsNames:
        - numericChannelsNames
        - numericChannelsNames
      properties:
        textParametersNames:
          items:
            type: string
          type: array
        propertiesNames:
          items:
            type: string
          type: array
        numericChannelsNames:
          items:
            type: string
          type: array
        numericParametersNames:
          items:
            type: string
          type: array
        textChannelsNames:
          items:
            type: string
          type: array
      required:
      - numericChannelsNames
      - numericParametersNames
      - propertiesNames
      - textChannelsNames
      - textParametersNames
      type: object
    LimitedChannelValuesDTO:
      example:
        values:
        - timestampMillis: 0
          x: 6.027456183070403
          y:
            textValue: textValue
            numericValue: 1.4658129805029452
            inputImageValue:
              data: data
              name: name
              description: description
            imageValue:
              imageUrl: imageUrl
              name: name
              description: description
              thumbnailUrl: thumbnailUrl
        - timestampMillis: 0
          x: 6.027456183070403
          y:
            textValue: textValue
            numericValue: 1.4658129805029452
            inputImageValue:
              data: data
              name: name
              description: description
            imageValue:
              imageUrl: imageUrl
              name: name
              description: description
              thumbnailUrl: thumbnailUrl
        channelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        totalItemCount: 1
      properties:
        channelId:
          format: uuid
          type: string
        values:
          items:
            $ref: '#/components/schemas/PointValueDTO'
          type: array
        totalItemCount:
          format: int32
          type: integer
      required:
      - channelId
      - totalItemCount
      - values
      type: object
    NewOrganizationMemberDTO:
      example:
        userId: userId
      properties:
        userId:
          type: string
        role:
          $ref: '#/components/schemas/OrganizationRoleDTO'
      required:
      - role
      - userId
      type: object
    DownloadPrepareRequestDTO:
      example:
        downloadUrl: downloadUrl
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        downloadUrl:
          type: string
      required:
      - id
      type: object
    UserProfileUpdateDTO:
      example:
        hasLoggedToCli: true
        lastName: lastName
        firstName: firstName
        shortInfo: shortInfo
        biography: biography
      properties:
        biography:
          type: string
        hasLoggedToCli:
          type: boolean
        lastName:
          type: string
        firstName:
          type: string
        shortInfo:
          type: string
      type: object
    SubscriptionCancelInfoDTO:
      example:
        reasons:
        - reasons
        - reasons
        description: description
      properties:
        reasons:
          items:
            type: string
          type: array
        description:
          type: string
      required:
      - reasons
      type: object
    NewProjectMemberDTO:
      example:
        userId: userId
      properties:
        userId:
          type: string
        role:
          $ref: '#/components/schemas/ProjectRoleDTO'
      required:
      - role
      - userId
      type: object
    QuestionnaireDTO:
      example:
        answers: answers
      properties:
        answers:
          type: string
      required:
      - answers
      type: object
    NewReservationDTO:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    ChartSetParams:
      example:
        defaultChartsEnabled: true
        charts:
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
          name: name
        - series:
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
          - aliasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            channelName: channelName
            label: label
          name: name
        isEditable: true
        name: name
      properties:
        name:
          type: string
        charts:
          items:
            $ref: '#/components/schemas/ChartDefinition'
          type: array
        defaultChartsEnabled:
          type: boolean
        isEditable:
          type: boolean
      required:
      - name
      type: object
    NeptuneOauthToken:
      example:
        accessToken: accessToken
        refreshToken: refreshToken
        username: username
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        username:
          type: string
      required:
      - accessToken
      - refreshToken
      - username
      type: object
    InputImageDTO:
      example:
        data: data
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        data:
          type: string
      type: object
    ProjectMetadataDTO:
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        projectKey: projectKey
        organizationName: organizationName
        timeOfCreation: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 0
      properties:
        name:
          type: string
        organizationType:
          $ref: '#/components/schemas/OrganizationTypeDTO'
        timeOfCreation:
          format: date-time
          type: string
        organizationName:
          type: string
        version:
          format: int32
          type: integer
        id:
          format: uuid
          type: string
        projectKey:
          type: string
        organizationId:
          format: uuid
          type: string
      required:
      - id
      - name
      - organizationId
      - organizationName
      - organizationType
      - projectKey
      - timeOfCreation
      - version
      type: object
    Status:
      type: object
    Link:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          scopes: {}
      type: oauth2
